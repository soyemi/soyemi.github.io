<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Voxel渲染器开发(1) | 从体素游戏到稀疏体素八叉树</title>
      <link href="/2021/05/16/voxel-renderer-1/"/>
      <url>/2021/05/16/voxel-renderer-1/</url>
      
        <content type="html"><![CDATA[<p>大概没有游戏玩家不知道Minecraft这款游戏。</p><p>在如今似乎一个游戏只要用了大量的方块就常常用类Minecraft游戏指代，方块元素有着极高的辨识度。但今天来聊聊虽然也是方块但还是有些不大一样的体素游戏。</p><h2 id="什么是体素"><a href="#什么是体素" class="headerlink" title="什么是体素?"></a>什么是体素?</h2><p>用一句话概括：体素(Voxel)是3D版本的像素(Pixel)。</p><p>狭义上定义的体素风格渲染：每个Voxel应该和pixel一样都是相同的颜色，而不是Minecraft中的方块有对应的Texture。所以严格意义上来讲MC并不是一个体素游戏，但似乎体素游戏也没法区分得特别严格。像很多低多边形(LowPoly)模型建模的游戏也都使用了体素这样形式的3D模型，而其他的部分和普通3D游戏并没有太大区别。从我个人的角度来看，除了所有体素使用单一颜色的标准之外，大部分的游戏模型以及地形、建筑、物体都要是在体素网格上对齐，而没有旋转和缩放的才能称作是体素游戏。</p><p>最早接触的体素游戏大概就是CubeWorld了。CubeWorld在2013年刚刚发布测试版本的时候，就被这种比MC更细致颗粒度的Voxel渲染惊艳到了。</p><p><img src="/images/voxel/1/Clipboard_2021-05-11-08-56-34.jpg" alt="CubeWorld"></p><p>当然后来的模拟经营游戏StoneHearth也很吸引人，不过开发者半路弃坑了。</p><p><img src="/images/voxel/1/Clipboard_2021-05-11-08-59-22.jpg" alt="StoneHearth"></p><p>似乎体素风格的游戏都能自带热度。2020年底的爆款游戏Teardown，大量的模型细节和巨大的体素场景，可以自由交互的体素物理系统，简直满足了破坏类沙盒玩家无尽的幻想。游戏不应该都是可破坏的吗(这里赞一下EA的战地建筑破坏效果)。当然构建这样一个Voxel World并不是一件简单的事情，随意破坏后的大规模体素对象的碰撞，刚体、软体模拟有着巨大的开发工作量。</p><p><img src="/images/voxel/1/Clipboard_2021-05-13-21-48-18.jpg" alt=""></p><h2 id="体素游戏的渲染方式"><a href="#体素游戏的渲染方式" class="headerlink" title="体素游戏的渲染方式"></a>体素游戏的渲染方式</h2><p>如果要说渲染优化的话，Teardown还是传统的PolygonMesh的方式。即将体素模型和信息先转化为polygon mesh再进行传统渲染管线渲染。所以Teardown的技术难点更多的是在于其物理引擎的实现而不是渲染，当然这次我们只来聊体素的渲染。</p><p>Teardown的开发过程中使用的体素建模工具是MagicaVoxel,也是目前市面上几乎唯一可以用于商业化游戏的体素编辑软件了。</p><p>MagicaVoxel由独立开发者ephtracy从2015年发布一直维护更新到现在。对于这种软件应用来说，体素由于其简单的立方体结构和排列方式比起三角面来说更适合进行光线追踪，可以做影视级别的真实渲染。所以在支持实时渲染的动态编辑同时它还支持光线追踪渲染高质量的画面。这次我们就尝试复刻下MagicaVoxel的光线追踪渲染器。是的，Flag立下了!</p><p>不过随着光追显卡的不断普及和技术发展，我们可能会在未来的几年内看到全局RayTracing的体素游戏。但体素风格始终是个小众的游戏美术风格，对独立游戏开发者来说，不需要太大的美术制作成本，体素风格始终是一个可选美术方案。</p><p><img src="/images/voxel/1/Clipboard_2021-05-13-21-49-10.jpg" alt=""></p><p>这里总结一下Voxel的渲染方式</p><ul><li>传统PolygonMesh：游戏常见做法</li><li>光线追踪：数字内容制作软件，影视及图形学科研</li></ul><p>除去体素本身作为模型数据替代Mesh进行绘制，在游戏渲染中体素化方案也可以用来实现全局光照。体素化场景提供了简化的3D spacial info，基于这个信息进行粗糙的光照传播和计算。例如 LPV(Light Propagation Volumes) 和Nvidia的VXGI(Voxel Global Illumination)。</p><p>和Voxel Rendering 不同，全局光照中的Voxel信息通常存储在3D texture，贴图分辨率低。同时体素化是对于相机视锥体（Frustum）的，这里的voxel是广义的体素，是个长方体。在投影变换之前是个四棱台(Four Prism)，在图形学中有个专有的名称Froxel(Frustum+Voxel)。后续有机会我们再来讲VXGI。</p><p><img src="/images/voxel/1/vxgi.jpg" alt=""></p><p>这两种渲染方式各有优劣同时还决定了体素数据的储存。</p><p>三种体素数据的存储方式</p><ul><li>多边形网格</li><li>3D Texture</li><li>八叉树结构</li></ul><p>多边形网格的储存就不用多说了，不过相对于常见的Mesh，体素Mesh的顶点数量相对庞大，同时不需要UV数据和贴图采样，每个体素的颜色可以存储在顶点颜色中。在实际渲染里通常会有优化算法将相同材质的顶点合并。</p><p>光线追踪的渲染方式，体素数据的存储就有多种方案了。我们可以直接储存在3D贴图中采样，和每个体素的包围盒进行光线的相交判定。也可以使用空间划分加速结构，储存在八叉树结构中，更快速找到体素模型和光线最近的交点。</p><h2 id="稀疏体素八叉树-Sparse-Voxel-Octree"><a href="#稀疏体素八叉树-Sparse-Voxel-Octree" class="headerlink" title="稀疏体素八叉树(Sparse Voxel Octree)"></a>稀疏体素八叉树(Sparse Voxel Octree)</h2><p>将一个三维空间划分为八个子空间，不断细分下去直到每一个空间对应一个体素单元，存储上填充信息。当一个空间中没有填充的变化即全部填充或全部不填充时，不再细分存储数据，就可以得到一个稀疏的体素八叉树，将这些八叉树细分的Box绘制出来大概就长这样。</p><p><img src="/images/voxel/1/Clipboard_2021-05-15-23-13-47.jpg" alt=""></p><p>八叉树结构对比3D贴图的优势在于，对于空间中的空洞区域，八叉树结构是稀疏的不占用内存的空间。而3D贴图即使是大范围的空洞我们也需要预先分配存储空间。</p><p><img src="/images/voxel/1/Clipboard_2021-05-15-23-09-04.png" alt=""></p><p>从不同的角度对比稀疏体素八叉树和其他的数据模型。体素这种细节粒度细致的模型，就特别需要LOD系统来减少渲染的绘制开销。多边形网格的LOD实现要维护多套不同层级的Mesh。3D Texture采样的数据，LOD自然就是采样不同层级的Mipmap。而对于八叉树结构来说LOD采样同样直观，我们只需要减少Octree遍历的层级就可以实现八叉树的LOD。</p><p>同时体素数据不只是二值数据，还包含了材质信息。如果使用PBR渲染，我们需要储存包括体素颜色，粗糙度Roughness和金属度Metallic，以及自发光信息Emission。</p><p>对于多边形网格来说，这些数据可以直接存储在顶点数据中。而3D Texture的储存空间有限，ARGB32 只能存4个unorm，而刚才我们提到的参数有3+1+1+1=6个unorm。如果还要再考虑半透明材质的话就需要更多的空间存储。</p><p>八叉树的数据结构在GPU中实现时，是一个一维结构体数组，可以支持数据的扩展。</p><p>那么对于3D贴图有没有其他的方案呢？当然！类似于Deferred Texturing方案 我们可以只存储一个Material ID，再从材质数据的数组中查找对应的材质参数。这样我们就能获得理论上无限的Per Voxel数据空间。而且这个方案三种储存方式都可以使用。</p><p>总之体素八叉树是一个有较多优点的Voxel存储方案，由于空间大部分都是稀疏的没有体素填充，八叉树的存储空间会更小。</p><h2 id="SparseVoxelOctree的实现"><a href="#SparseVoxelOctree的实现" class="headerlink" title="SparseVoxelOctree的实现"></a>SparseVoxelOctree的实现</h2><p>我们很容易就可以定义一个SVO的节点:</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SVONode</span></span><br><span class="line"> &#123;</span><br><span class="line">   SVONode[] children;</span><br><span class="line">   <span class="keyword">byte</span> child_valid;</span><br><span class="line">   <span class="keyword">byte</span> child_fill;</span><br><span class="line">   float4 volume;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>8个节点按照x，y，z轴顺序从0-7进行索引。</li><li>child_valid 8个bit标识8个子voxel是否有数据，如果子节点没有再细分，对应的bit置为0。</li><li>child_fill 标记当对应索引的子voxel child_valid为0时的填充状态。</li><li>Volume 储存了每个节点的包围盒大小，方便后续的计算</li></ul><p><img src="/images/voxel/1/Clipboard_2021-05-15-22-55-28.png" alt=""></p><p>用两个byte来储存叶节点的填充信息可以减少一个层级的数据储存节省空间。到目前为止，我们暂时还不考虑材质信息的存储。对于CPU的SVO实现，数据的内存排布自由度更大。等后续我们讲到GPU实现的SVO再来考虑。</p><p>定义完SVO的结构，我们再来实现一下SVO的遍历算法。对于实现光线追踪渲染器来说，最重要的算法就是射线和SVO的相交计算。我们可以先从最简单的一个Voxel和射线相交计算开始。只要解决了这样一个Primitive问题，整个复杂的SVO结构就是大大小小嵌套的Voxel和Ray的计算。</p><h2 id="射线和Voxel相交"><a href="#射线和Voxel相交" class="headerlink" title="射线和Voxel相交"></a>射线和Voxel相交</h2><p>Voxel等价于一个长宽高都相同，退化的Box。在Inigo Quilez(也被称为iq大神，ShaderToy网站的创始人)的Blog里给出了一系列射线和集合体相交的算法。相交函数返回了一个<code>float2</code>分别表示近相交点和远相交点到射线原点origin的距离t。如果Box和Ray没有相交那么返回-1.0。</p><p><img src="/images/voxel/1/Clipboard_2021-05-15-18-43-10.png" alt=""></p><p>如果这个算法看不懂也没有关系，在《Real-Time Rendering Fourth Edition》中的第22.7章节，一个图可以直观解释这个算法的原理。</p><p><img src="/images/voxel/1/Clipboard_2021-05-15-18-51-51.png" alt=""></p><p>对于一个不与坐标轴平行(Axis-Aligned)的Box来说，我们可以考虑射线将Box与坐标轴对齐，同时还可以平移整个坐标系，把Box的中心放在原点。这样我们就只需要考虑简化版本的相交情况。</p><p>我们可以定义一条射线的解析形式为:<br><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi><mo>=</mo><mi>o</mi><mo>+</mo><mi>t</mi><mo>⋅</mo><mi>d</mi><mspace linebreak="newline"></mspace><mi>t</mi><mo>∈</mo><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mi mathvariant="normal">∞</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">r = o + t \cdot d \newline t \in [ 0, \infty ]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">o</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">d</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.65418em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∞</span><span class="mclose">]</span></span></span></span></span></p><ul><li>o 为射线的原点origin</li><li>d 为射线的方向向量</li><li>同时Box的半边长为(x,y,z)，对于Voxel来说x=y=z。</li></ul><p>这样我们就可以很好求得射线与Box的两个交点和射线原点的距离<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>t</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">t_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>t</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">t_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。</p><p>先设定X轴方向上的相交的距离<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi><msub><mi>x</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">tx_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord mathdefault">t</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi><msub><mi>x</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">tx_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord mathdefault">t</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><mi>x</mi><mo>=</mo><mi>o</mi><mi mathvariant="normal">.</mi><mi>x</mi><mo>+</mo><mi>t</mi><msub><mi>x</mi><mn>0</mn></msub><mo>∗</mo><mi>d</mi><mi mathvariant="normal">.</mi><mi>x</mi><mtext>  </mtext><mo>⟹</mo><mtext>  </mtext><mi>t</mi><msub><mi>x</mi><mn>0</mn></msub><mo>=</mo><mo stretchy="false">(</mo><mo>−</mo><mi>x</mi><mo>−</mo><mi>o</mi><mi mathvariant="normal">.</mi><mi>x</mi><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mi>d</mi><mi mathvariant="normal">.</mi><mi>x</mi><mspace linebreak="newline"></mspace><mi>x</mi><mo>=</mo><mi>o</mi><mi mathvariant="normal">.</mi><mi>x</mi><mo>+</mo><mi>t</mi><msub><mi>x</mi><mn>1</mn></msub><mo>∗</mo><mi>d</mi><mi mathvariant="normal">.</mi><mi>x</mi><mtext>  </mtext><mo>⟹</mo><mtext>  </mtext><mi>t</mi><msub><mi>x</mi><mn>1</mn></msub><mo>=</mo><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mi>o</mi><mi mathvariant="normal">.</mi><mi>x</mi><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mi>d</mi><mi mathvariant="normal">.</mi><mi>x</mi></mrow><annotation encoding="application/x-tex">-x= o.x + tx_0 * d.x \implies tx_0 = (-x-o.x)/d.x \newline<br> x= o.x + tx_1 * d.x \implies tx_1 = ( x-o.x)/d.x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">o</span><span class="mord">.</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord mathdefault">t</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.71844em;vertical-align:-0.024em;"></span><span class="mord mathdefault">d</span><span class="mord">.</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⟹</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord mathdefault">t</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">o</span><span class="mord">.</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mord">/</span><span class="mord mathdefault">d</span><span class="mord">.</span><span class="mord mathdefault">x</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">o</span><span class="mord">.</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord mathdefault">t</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.71844em;vertical-align:-0.024em;"></span><span class="mord mathdefault">d</span><span class="mord">.</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⟹</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord mathdefault">t</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">o</span><span class="mord">.</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mord">/</span><span class="mord mathdefault">d</span><span class="mord">.</span><span class="mord mathdefault">x</span></span></span></span></span></p><p>同理可以计算出 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi><msub><mi>y</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">ty_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80952em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">t</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi><msub><mi>y</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">ty_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80952em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">t</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi><msub><mi>z</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">tz_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord mathdefault">t</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi><msub><mi>z</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">tz_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord mathdefault">t</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。</p><p>那么实际和Box相交的距离t就在这六个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span></span></span></span>中间。经过简单的观察，射线最终的近交点是每个坐标轴的较近交点距离最远的，远交点为每个坐标轴远交点距离最近的。</p><p>我们可以先计算坐标轴上的近交点和远交点分别为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi><msub><mi>x</mi><mrow><mi>m</mi><mi>i</mi><mi>n</mi></mrow></msub></mrow><annotation encoding="application/x-tex">tx_{min}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord mathdefault">t</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>,<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi><msub><mi>x</mi><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow></msub></mrow><annotation encoding="application/x-tex">tx_{max}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord mathdefault">t</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。(由于d是个方向向量可能为负值，Box的半边长x一定是正值，没法直接比较<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi><msub><mi>x</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">tx_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord mathdefault">t</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi><msub><mi>x</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">tx_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord mathdefault">t</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的大小)</p><p>那么整个Box和射线最终的两个交点公式就是：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">t_min</span> = max(tx_min,ty_min,tz_min)</span><br><span class="line"><span class="attr">t_max</span> = min(tx_max,ty_max,tz_max)</span><br></pre></td></tr></table></figure><p>所以Inigo Quilez给出的算法中有个abs方法能够方便找到哪个t是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>t</mi><mrow><mi>m</mi><mi>i</mi><mi>n</mi></mrow></msub></mrow><annotation encoding="application/x-tex">t_{min}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>或<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>t</mi><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow></msub></mrow><annotation encoding="application/x-tex">t_{max}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。当然我们还可以简化该算法，即如果射线方向的某个坐标轴方向是负值，我们将整个坐标轴翻转，翻转并不影响计算相交的距离。这样我们就可以避免了判断<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>t</mi><mrow><mi>m</mi><mi>i</mi><mi>n</mi></mrow></msub></mrow><annotation encoding="application/x-tex">t_{min}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>t</mi><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow></msub></mrow><annotation encoding="application/x-tex">t_{max}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，等后续我们讲到GPU的计算优化时还会提到。</p><h2 id="遍历整个体素八叉树"><a href="#遍历整个体素八叉树" class="headerlink" title="遍历整个体素八叉树"></a>遍历整个体素八叉树</h2><p>有了RayBox的相交函数我们就可以来递归调用整个SVO的相交了。</p><p>简单叙述下逻辑:</p><p>对于一个Voxel,先判断是否与射线相交：</p><ul><li>不相交：返回-1</li><li>相交：遍历子Voxel,找到最近的相交子节点，返回距离t<ul><li>如果子Voxel是叶节点：<ul><li>判断子Voxel是否填充，在填充的情况下计算其Box与射线的交点距离</li></ul></li><li>如果子Voxel还包含更小的Voxel：<ul><li>递归调用本身</li></ul></li></ul></li></ul><p>写成代码就是下面的形式（是的我不想详细解释了直接上代码）</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> float2 <span class="title">TraversalBruteForce</span>(<span class="params">float3 rpos,float3 rdir,<span class="keyword">ref</span> float3 nor</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> ret_t = CSGUtility.RayVolume(rpos, rdir, <span class="keyword">this</span>.region.volume, <span class="keyword">ref</span> nor);</span><br><span class="line">    <span class="keyword">if</span> (math.max(ret_t.x, ret_t.y) &lt; <span class="number">0</span>) <span class="keyword">return</span> <span class="number">-1f</span>;</span><br><span class="line">    ret_t = <span class="number">-1f</span>;</span><br><span class="line">    <span class="keyword">var</span> t_max = <span class="keyword">float</span>.MaxValue;</span><br><span class="line">    <span class="keyword">var</span> temp_nor = float3.zero;</span><br><span class="line">    <span class="keyword">if</span> (IsLeafNode)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (IsChildFill(i))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">var</span> temp_t = CSGUtility.RayVolume(rpos, rdir, GetSubNodeVolume(i).volume, <span class="keyword">ref</span> temp_nor);</span><br><span class="line">                <span class="keyword">if</span> (temp_t.x &lt; <span class="number">0f</span>) <span class="keyword">continue</span>;</span><br><span class="line">                <span class="keyword">if</span>(temp_t.x &lt; t_max)</span><br><span class="line">                &#123;</span><br><span class="line">                    t_max = temp_t.x;</span><br><span class="line">                    nor = temp_nor;</span><br><span class="line">                    ret_t = temp_t;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            float2 temp_t;</span><br><span class="line">            <span class="keyword">if</span> (IsNodeValid(i))</span><br><span class="line">            &#123;</span><br><span class="line">                temp_t = nodes[i].TraversalBruteForce(rpos, rdir, <span class="keyword">ref</span> temp_nor);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (IsChildFill(i))</span><br><span class="line">                &#123;</span><br><span class="line">                    temp_t = CSGUtility.RayVolume(rpos, rdir, GetSubNodeVolume(i).volume, <span class="keyword">ref</span> temp_nor);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (temp_t.x &lt;<span class="number">0f</span>) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span>(temp_t.x &lt; t_max)</span><br><span class="line">            &#123;</span><br><span class="line">                t_max = temp_t.x;</span><br><span class="line">                ret_t = temp_t;</span><br><span class="line">                nor = temp_nor;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret_t;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后，在Unity中，一个32<em>32</em>32 SVO中的某个体素被填充后的可视化的样子。</p><p><img src="/images/voxel/1/Clipboard_2021-05-15-23-56-14.png" alt=""></p><p>下一篇我们来讲如何将SVO的数据结构和算法移植到Shader中，使用GPU进行渲染。</p><hr><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul><li>[1] <a href="https://www.iquilezles.org/www/articles/intersectors/intersectors.htm" target="_blank" rel="noopener">https://www.iquilezles.org/www/articles/intersectors/intersectors.htm</a></li><li>[2] <a href="https://ephtracy.github.io/" target="_blank" rel="noopener">https://ephtracy.github.io/</a></li><li>[3] <a href="https://developer.nvidia.com/vxgi" target="_blank" rel="noopener">https://developer.nvidia.com/vxgi</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Graphics </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Voxel </tag>
            
            <tag> Rendering </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>透视投影矩阵推导The Perspective Projection Matrix Derivation Part2</title>
      <link href="/2021/01/24/the-perspective-projection-matrix-derivation-part2/"/>
      <url>/2021/01/24/the-perspective-projection-matrix-derivation-part2/</url>
      
        <content type="html"><![CDATA[<ul><li><a href="/2018/09/09/the-perspective-projection-matrix-derivation">Part1 OpenGL透视投影矩阵推导</a></li><li>Part2 DirectX透视投影矩阵推导</li></ul><hr><p>DirectX 透视投影矩阵推导，DX和OpenGL有一些区别</p><ul><li>坐标系不同:DirectX LHS左手坐标系Z反向指向屏幕，而OpenGL是右手坐标系</li><li>NDC定义不同: Z的范围为<code>[0,1]</code> OpenGL中为<code>[-1,1]</code></li><li>DirectX HLSL中的Matrix默认为 column major(本文中我们还是以row-major来进行推导)</li></ul><p>由此我们按照Part1的方法，以DirectX环境中值来进行一遍推导</p><h2 id="Step1-正交化处理"><a href="#Step1-正交化处理" class="headerlink" title="Step1 正交化处理"></a>Step1 正交化处理</h2><p>对于点<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><mi>z</mi><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(x,y,z,1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>，经过投影变换乘以透视矩阵得到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>P</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">P&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>P</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">P&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>位于Normalized Device Coordinates(NDC)中。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>M</mi><mrow><mi>p</mi><mi>r</mi><mi>o</mi><mi>j</mi></mrow></msub><mi>P</mi><mo>=</mo><msup><mi>P</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mspace linebreak="newline"></mspace><msubsup><mi>P</mi><mi>x</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo>∈</mo><mo stretchy="false">[</mo><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">]</mo><mspace linebreak="newline"></mspace><msubsup><mi>P</mi><mi>y</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo>∈</mo><mo stretchy="false">[</mo><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">]</mo><mspace linebreak="newline"></mspace><msubsup><mi>P</mi><mi>z</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo>∈</mo><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">M_{proj}P = P&#x27; \newline<br>P&#x27;<em>{x} \in [-1,1] \newline<br>P&#x27;</em>{y} \in [-1,1] \newline<br>P&#x27;_{z} \in [0,1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">p</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.801892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.048892em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8018919999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">−</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">]</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.185em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-2.4530000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">−</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">]</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.048892em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8018919999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span></span></p><p>更具三角形等比公式</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>P</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>=</mo><mo stretchy="false">(</mo><mfrac><mi>n</mi><mi>z</mi></mfrac><mi>x</mi><mo separator="true">,</mo><mfrac><mi>n</mi><mi>z</mi></mfrac><mi>y</mi><mo separator="true">,</mo><mi>f</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P&#x27;=(\frac{n}{z}x,\frac{n}{z}y,f(z),1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.095em;vertical-align:-0.345em;"></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>， 正交化之前<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>P</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>=</mo><mo stretchy="false">(</mo><mi>n</mi><mi>x</mi><mo separator="true">,</mo><mi>n</mi><mi>y</mi><mo separator="true">,</mo><mi>g</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>z</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P&#x27;=(nx,ny,g(z),z)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span></span></span></span></p><p>设 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><mi>a</mi><mi>z</mi><mo>+</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">g(z)=az+b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mo stretchy="false" lspace="0em" rspace="0em">?</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo stretchy="false" lspace="0em" rspace="0em">?</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo stretchy="false" lspace="0em" rspace="0em">?</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo stretchy="false" lspace="0em" rspace="0em">?</mo></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mo stretchy="false" lspace="0em" rspace="0em">?</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo stretchy="false" lspace="0em" rspace="0em">?</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo stretchy="false" lspace="0em" rspace="0em">?</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo stretchy="false" lspace="0em" rspace="0em">?</mo></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>a</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>b</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>x</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>y</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>z</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>n</mi><mi>x</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>n</mi><mi>y</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>a</mi><mi>z</mi><mo>+</mo><mi>b</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>z</mi></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\begin{bmatrix}<br>? &amp; ? &amp; ? &amp; ? \<br>? &amp; ? &amp; ? &amp; ? \<br>0 &amp; 0 &amp; a &amp; b \<br>0 &amp; 0 &amp; 1 &amp; 0 \<br>\end{bmatrix}<br>\begin{bmatrix}<br>x \<br>y \<br>z \<br>1 \<br>\end{bmatrix}<br>=<br>\begin{bmatrix}<br>nx \<br>ny \<br>az+b\<br>z<br>\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.80303em;vertical-align:-2.15003em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mclose">?</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mclose">?</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mclose">?</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mclose">?</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mclose">?</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mclose">?</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">a</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mclose">?</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mclose">?</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">b</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:4.80303em;vertical-align:-2.15003em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="mord mathdefault">x</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">b</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>取NDC近平面左下角<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mrow><mi>l</mi><mi>b</mi><mi>n</mi></mrow></msub><mo>=</mo><mo stretchy="false">(</mo><mi>l</mi><mo separator="true">,</mo><mi>b</mi><mo separator="true">,</mo><mi>n</mi><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P_{lbn}=(l,b,n,1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">b</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>和远平面右上角<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mrow><mi>r</mi><mi>t</mi><mi>f</mi></mrow></msub><mo>=</mo><mo stretchy="false">(</mo><mi>r</mi><mo separator="true">,</mo><mi>t</mi><mo separator="true">,</mo><mi>f</mi><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P_{rtf}=(r,t,f,1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>。</p><p>经过投影变换</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mrow><mi>l</mi><mi>b</mi><mi>n</mi></mrow></msub><mo>=</mo><mo stretchy="false">(</mo><mi>l</mi><mo separator="true">,</mo><mi>b</mi><mo separator="true">,</mo><mi>n</mi><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo><mo>→</mo><mo stretchy="false">(</mo><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo><mo>↔</mo><mo stretchy="false">(</mo><mo>−</mo><mi>n</mi><mo separator="true">,</mo><mo>−</mo><mi>n</mi><mo separator="true">,</mo><mn>0</mn><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P_{lbn}=(l,b,n,1) \rightarrow  (-1,-1,0,1) \leftrightarrow(-n,-n,0,n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">b</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">−</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">↔</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord mathdefault">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">−</span><span class="mord mathdefault">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mrow><mi>r</mi><mi>t</mi><mi>f</mi></mrow></msub><mo>=</mo><mo stretchy="false">(</mo><mi>r</mi><mo separator="true">,</mo><mi>t</mi><mo separator="true">,</mo><mi>f</mi><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo><mo>→</mo><mo stretchy="false">(</mo><mn>1</mn><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo><mo>↔</mo><mo stretchy="false">(</mo><mi>f</mi><mo separator="true">,</mo><mi>f</mi><mo separator="true">,</mo><mi>f</mi><mo separator="true">,</mo><mi>f</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P_{rtf}=(r,t,f,1) \rightarrow  (1,1,1,1)\leftrightarrow(f,f,f,f)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">↔</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mclose">)</span></span></span></span></span></p><p>得到<br><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mi>n</mi><mo>+</mo><mi>b</mi><mo>=</mo><mn>0</mn><mspace linebreak="newline"></mspace><mi>a</mi><mi>f</mi><mo>+</mo><mi>b</mi><mo>=</mo><mi>f</mi></mrow><annotation encoding="application/x-tex">an+b=0\newline<br>af+b=f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span></span></span></p><p>求得<br><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo>=</mo><mfrac><mi>f</mi><mrow><mi>f</mi><mo>−</mo><mi>n</mi></mrow></mfrac><mspace linebreak="newline"></mspace><mi>b</mi><mo>=</mo><mfrac><mrow><mi>f</mi><mi>n</mi></mrow><mrow><mi>f</mi><mo>−</mo><mi>n</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">a=\frac{f}{f-n} \newline<br>b=\frac{fn}{f-n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.25188em;vertical-align:-0.8804400000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714399999999998em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.25188em;vertical-align:-0.8804400000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714399999999998em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mo stretchy="false" lspace="0em" rspace="0em">?</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo stretchy="false" lspace="0em" rspace="0em">?</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo stretchy="false" lspace="0em" rspace="0em">?</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo stretchy="false" lspace="0em" rspace="0em">?</mo></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mo stretchy="false" lspace="0em" rspace="0em">?</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo stretchy="false" lspace="0em" rspace="0em">?</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo stretchy="false" lspace="0em" rspace="0em">?</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo stretchy="false" lspace="0em" rspace="0em">?</mo></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mi>f</mi><mrow><mi>f</mi><mo>−</mo><mi>n</mi></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi>f</mi><mi>n</mi></mrow><mrow><mi>f</mi><mo>−</mo><mi>n</mi></mrow></mfrac></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>x</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>y</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>z</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mo stretchy="false" lspace="0em" rspace="0em">?</mo></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mo stretchy="false" lspace="0em" rspace="0em">?</mo></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>z</mi><mo>+</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><mrow><mi>f</mi><mo>−</mo><mi>n</mi></mrow></mfrac></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>z</mi></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\begin{bmatrix}<br>? &amp; ? &amp; ? &amp; ? \<br>? &amp; ? &amp; ? &amp; ? \<br>0 &amp; 0 &amp; \frac{f}{f-n} &amp; \frac{fn}{f-n} \<br>0 &amp; 0 &amp; 1 &amp; 0 \<br>\end{bmatrix}<br>\begin{bmatrix}<br>x \<br>y \<br>z \<br>1 \<br>\end{bmatrix}<br>=<br>\begin{bmatrix}<br>? \<br>? \<br>\frac{f(z+n)}{f-n}\<br>z<br>\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.013324em;vertical-align:-2.256662em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.756662em;"><span style="top:-4.916662em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mclose">?</span></span></span><span style="top:-3.7166619999999995em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mclose">?</span></span></span><span style="top:-2.4244459999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.1033380000000002em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.256662em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.756662em;"><span style="top:-4.916662em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mclose">?</span></span></span><span style="top:-3.7166619999999995em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mclose">?</span></span></span><span style="top:-2.4244459999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.1033380000000002em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.256662em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.756662em;"><span style="top:-4.916662em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mclose">?</span></span></span><span style="top:-3.7166619999999995em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mclose">?</span></span></span><span style="top:-2.4244459999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322159999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">n</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.1033380000000002em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.256662em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.756662em;"><span style="top:-4.916662em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mclose">?</span></span></span><span style="top:-3.7166619999999995em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mclose">?</span></span></span><span style="top:-2.4244459999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322159999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">n</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.1033380000000002em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.256662em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:5.091108em;vertical-align:-2.295554em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.795554em;"><span style="top:-4.965554em;"><span class="pstrut" style="height:3.01em;"></span><span class="mord"><span class="mclose">?</span></span></span><span style="top:-3.7655539999999994em;"><span class="pstrut" style="height:3.01em;"></span><span class="mord"><span class="mclose">?</span></span></span><span style="top:-2.3955539999999993em;"><span class="pstrut" style="height:3.01em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">n</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight">n</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.0744459999999998em;"><span class="pstrut" style="height:3.01em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.295554em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><h2 id="Step2-求解前两行"><a href="#Step2-求解前两行" class="headerlink" title="Step2 求解前两行"></a>Step2 求解前两行</h2><p>类似Part1 我们定义8个矩阵变量.<br><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>A</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>B</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>C</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>D</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>E</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>F</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>G</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>H</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mi>f</mi><mrow><mi>f</mi><mo>−</mo><mi>n</mi></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi>f</mi><mi>n</mi></mrow><mrow><mi>f</mi><mo>−</mo><mi>n</mi></mrow></mfrac></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><annotation encoding="application/x-tex">\begin{bmatrix}<br>A &amp; B &amp; C &amp; D \<br>E &amp; F &amp; G &amp; H \<br>0 &amp; 0 &amp; \frac{f}{f-n} &amp; \frac{fn}{f-n} \<br>0 &amp; 0 &amp; 1 &amp; 0 \<br>\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.013324em;vertical-align:-2.256662em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.756662em;"><span style="top:-4.916662em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">A</span></span></span><span style="top:-3.7166619999999995em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span></span></span><span style="top:-2.4244459999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.1033380000000002em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.256662em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.756662em;"><span style="top:-4.916662em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span><span style="top:-3.7166619999999995em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span><span style="top:-2.4244459999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.1033380000000002em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.256662em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.756662em;"><span style="top:-4.916662em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span></span></span><span style="top:-3.7166619999999995em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">G</span></span></span><span style="top:-2.4244459999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322159999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">n</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.1033380000000002em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.256662em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.756662em;"><span style="top:-4.916662em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span></span></span><span style="top:-3.7166619999999995em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span></span></span><span style="top:-2.4244459999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322159999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">n</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.1033380000000002em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.256662em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>可以得到 B D E H为0</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>A</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>C</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>F</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>G</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mi>f</mi><mrow><mi>f</mi><mo>−</mo><mi>n</mi></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi>f</mi><mi>n</mi></mrow><mrow><mi>f</mi><mo>−</mo><mi>n</mi></mrow></mfrac></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><annotation encoding="application/x-tex">\begin{bmatrix}<br>A &amp; 0 &amp; C &amp; 0 \<br>0 &amp; F &amp; G &amp; 0 \<br>0 &amp; 0 &amp; \frac{f}{f-n} &amp; \frac{fn}{f-n} \<br>0 &amp; 0 &amp; 1 &amp; 0 \<br>\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.013324em;vertical-align:-2.256662em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.756662em;"><span style="top:-4.916662em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">A</span></span></span><span style="top:-3.7166619999999995em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4244459999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.1033380000000002em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.256662em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.756662em;"><span style="top:-4.916662em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.7166619999999995em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span><span style="top:-2.4244459999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.1033380000000002em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.256662em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.756662em;"><span style="top:-4.916662em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span></span></span><span style="top:-3.7166619999999995em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">G</span></span></span><span style="top:-2.4244459999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322159999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">n</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.1033380000000002em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.256662em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.756662em;"><span style="top:-4.916662em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.7166619999999995em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4244459999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322159999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">n</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.1033380000000002em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.256662em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>取两点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo stretchy="false">(</mo><mi>l</mi><mo separator="true">,</mo><mi>b</mi><mo separator="true">,</mo><mi>n</mi><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo><mo>→</mo><mo stretchy="false">(</mo><mo>−</mo><mi>n</mi><mo separator="true">,</mo><mo>−</mo><mi>n</mi><mo separator="true">,</mo><mn>0</mn><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">S(l,b,n,1) \rightarrow(-n,-n,0,n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord mathdefault">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">−</span><span class="mord mathdefault">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>r</mi><mo separator="true">,</mo><mi>t</mi><mo separator="true">,</mo><mi>n</mi><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo><mo>→</mo><mo stretchy="false">(</mo><mi>n</mi><mo separator="true">,</mo><mi>n</mi><mo separator="true">,</mo><mn>0</mn><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T(r,t,n,1)\rightarrow(n,n,0,n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>，代入矩阵得到方程组</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi>l</mi><mo>+</mo><mi>C</mi><mi>n</mi><mo>=</mo><mo>−</mo><mi>n</mi><mspace linebreak="newline"></mspace><mi>A</mi><mi>r</mi><mo>+</mo><mi>C</mi><mi>n</mi><mo>=</mo><mi>n</mi><mspace linebreak="newline"></mspace><mi>F</mi><mi>b</mi><mo>+</mo><mi>G</mi><mi>n</mi><mo>=</mo><mo>−</mo><mi>n</mi><mspace linebreak="newline"></mspace><mi>F</mi><mi>t</mi><mo>+</mo><mi>G</mi><mi>n</mi><mo>=</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">Al+Cn=-n \newline<br>Ar+Cn=n \newline<br>Fb+Gn=-n \newline<br>Ft+Gn=n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord mathdefault">n</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord mathdefault">n</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span></span></p><p>求解</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>=</mo><mfrac><mrow><mn>2</mn><mi>n</mi></mrow><mrow><mi>r</mi><mo>−</mo><mi>l</mi></mrow></mfrac><mspace linebreak="newline"></mspace><mi>C</mi><mo>=</mo><mo>−</mo><mfrac><mrow><mi>r</mi><mo>+</mo><mi>l</mi></mrow><mrow><mi>r</mi><mo>−</mo><mi>l</mi></mrow></mfrac><mspace linebreak="newline"></mspace><mi>F</mi><mo>=</mo><mfrac><mrow><mn>2</mn><mi>n</mi></mrow><mrow><mi>t</mi><mo>−</mo><mi>b</mi></mrow></mfrac><mspace linebreak="newline"></mspace><mi>G</mi><mo>=</mo><mo>−</mo><mfrac><mrow><mi>t</mi><mo>+</mo><mi>b</mi></mrow><mrow><mi>t</mi><mo>−</mo><mi>b</mi></mrow></mfrac><mspace linebreak="newline"></mspace></mrow><annotation encoding="application/x-tex">A=\frac{2n}{r-l} \newline<br>C=-\frac{r+l}{r-l} \newline<br>F=\frac{2n}{t-b} \newline<br>G=-\frac{t+b}{t-b} \newline</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.09077em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathdefault">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.14077em;vertical-align:-0.7693300000000001em;"></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.09077em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">b</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathdefault">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.14077em;vertical-align:-0.7693300000000001em;"></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">b</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span></span></span></span></p><p>设viewport对称：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi><mo>+</mo><mi>l</mi><mo>=</mo><mn>0</mn><mspace linebreak="newline"></mspace><mi>r</mi><mo>−</mo><mi>l</mi><mo>=</mo><mi>w</mi><mspace linebreak="newline"></mspace><mi>t</mi><mo>+</mo><mi>b</mi><mo>=</mo><mn>0</mn><mspace linebreak="newline"></mspace><mi>t</mi><mo>−</mo><mi>b</mi><mo>=</mo><mi>h</mi></mrow><annotation encoding="application/x-tex">r+l=0 \newline<br>r-l=w \newline<br>t+b=0 \newline<br>t-b=h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.69841em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.69841em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">h</span></span></span></span></span></p><p>得到最终矩阵</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mn>2</mn><mi>n</mi></mrow><mi>w</mi></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mn>2</mn><mi>n</mi></mrow><mi>h</mi></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mi>f</mi><mrow><mi>f</mi><mo>−</mo><mi>n</mi></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi>f</mi><mi>n</mi></mrow><mrow><mi>f</mi><mo>−</mo><mi>n</mi></mrow></mfrac></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>x</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>y</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>z</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mn>2</mn><mi>n</mi><mi>x</mi></mrow><mi>w</mi></mfrac></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mn>2</mn><mi>n</mi><mi>y</mi></mrow><mi>h</mi></mfrac></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>z</mi><mo>+</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><mrow><mi>f</mi><mo>−</mo><mi>n</mi></mrow></mfrac></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>z</mi></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\begin{bmatrix}<br>\frac{2n}{w} &amp; 0 &amp; 0 &amp; 0 \<br>0 &amp; \frac{2n}{h} &amp; 0 &amp; 0 \<br>0 &amp; 0 &amp; \frac{f}{f-n} &amp; \frac{fn}{f-n} \<br>0 &amp; 0 &amp; 1 &amp; 0 \<br>\end{bmatrix}<br>\begin{bmatrix}<br>x \<br>y \<br>z \<br>1 \<br>\end{bmatrix}<br>=<br>\begin{bmatrix}<br>\frac{2nx}{w} \<br>\frac{2ny}{h} \<br>\frac{f(z+n)}{f-n}\<br>z<br>\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.02354em;vertical-align:-2.26177em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.76177em;"><span style="top:-4.916662em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-3.7115539999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4193379999999998em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.0982300000000003em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.26177em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.76177em;"><span style="top:-4.916662em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.7115539999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.4193379999999998em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.0982300000000003em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.26177em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.76177em;"><span style="top:-4.916662em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.7115539999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4193379999999998em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322159999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">n</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.0982300000000003em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.26177em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.76177em;"><span style="top:-4.916662em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.7115539999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4193379999999998em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322159999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">n</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.0982300000000003em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.26177em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:5.1534320000000005em;vertical-align:-2.3267160000000002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.8267160000000002em;"><span style="top:-4.991608em;"><span class="pstrut" style="height:3.01em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight">n</span><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-3.7343919999999993em;"><span class="pstrut" style="height:3.01em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.897216em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight">n</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.364391999999999em;"><span class="pstrut" style="height:3.01em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">n</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight">n</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.0432839999999997em;"><span class="pstrut" style="height:3.01em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.3267160000000002em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>]]></content>
      
      
      
        <tags>
            
            <tag> DirectX </tag>
            
            <tag> linear algebra </tag>
            
            <tag> Math </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>发布Unity项目到macOS AppStore和Steam</title>
      <link href="/2020/02/17/submit-unity-macos-build-to-steam-appstore/"/>
      <url>/2020/02/17/submit-unity-macos-build-to-steam-appstore/</url>
      
        <content type="html"><![CDATA[<p><a href="/2020/02/17/submit-unity-macos-build-to-steam-appstore/">中文</a> | <a href="/2020/02/17/en/submit-unity-macos-build-to-steam-appstore/">English</a></p><hr><p>这篇blog记录下如何将Unity导出的macOS应用提交到Steam和AppStore。通常情况下我们在macOS系统上的开发依赖于Xcode，如果在Unity的<code>PlayerSettings</code>里面没有设置签名和BundleId，那么只能使用相应的命令行工具对二进制的<code>Game.app</code>进行签名和处理。</p><p>首先会介绍一些签名相关的基本概念和命令，或者你可以直接跳到:<br><a href="#提交到Steam和第三方直接发布">提交到Steam和第三方直接发布</a><br><a href="#提交到macOS-App-Store">提交到macOS-App-Store</a></p><h2 id="包体配置和签名"><a href="#包体配置和签名" class="headerlink" title="包体配置和签名"></a>包体配置和签名</h2><h3 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h3><p>Apple提供了签名工具用于给应用文件进行签名，通常macOS系统的应用都是一个<code>.app</code>的Bundle，不像Windows系统中是一个<code>.exe</code>的文件。所以macOS的codesign 是对于整个bundle的所有文件的。</p><p><strong>Designated Requirement(DR)</strong></p><p>Apple会给每一个要签名的应用创建一个Designated Requirement(DR),这个DR通常由应用的BundleID进行标识。</p><p><strong>Resource envelope</strong></p><p>签名会对Game.app下的所有代码和非代码的资源文件以及第三方的插件进行签名，计算出每个文件的hash，同时再合并所有资源文件的hash生成最终的一个Hash值。</p><p><code>Resource envelope 有两个版本，最新的 v2版本会对所有文件进行签名，OSX Mavericks 10.9之后都是使用 v2的版本</code></p><p>只有有任何记录的文件有改动，都会通过hash校验来被检测出来。所以即使没有修改Game.app下的文件，在签名完成之后添加新的文件，整个Budnle也是校验不过的。无法通过<code>GateKeeper</code>的验证。</p><h3 id="应用Bundle处理"><a href="#应用Bundle处理" class="headerlink" title="应用Bundle处理"></a>应用Bundle处理</h3><p><strong>修改BundleId</strong></p><p>直接打开<code>Game.app/Contents/Info.plist</code> 修改<code>CFBundleIdentifier</code>。</p><p><strong>移除不需要的文件</strong></p><p>使用Unity编辑器时，如果导入macOS或者iOS的<code>framewor</code>和<code>bundle</code>文件，Unity会自动对文件夹下的所有文件和文件夹创建一个对应的<code>.meta</code>文件。<br>这个文件存在的路径在Bundle中不是标准的路径，同时会导致<code>codesign</code>时失败，我们需要移除它。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#remove all remove meta files</span></span><br><span class="line">find <span class="string">"./Game.app"</span> -name <span class="string">"*.meta"</span> -<span class="built_in">type</span> f -<span class="built_in">exec</span> rm &#123;&#125; \;</span><br></pre></td></tr></table></figure><h3 id="CodeSign签名"><a href="#CodeSign签名" class="headerlink" title="CodeSign签名"></a>CodeSign签名</h3><p><strong>第三方库签名</strong></p><p>Apple要求所有提交给macOS AppStore和经Notarization认证后直接分发的应用中，所有的<strong>第三方库<code>dylib,framework,bundle</code>都需要被签名</strong>。</p><blockquote><p>同时需要注意：提交到acOS AppStore的应用中，所有的第三方库和插件都需要使用<strong>Apple开发者</strong>的签名。</p></blockquote><p>也就是说你如果提交给macOS Store的话，还是需要给类似<code>libssl.dylib</code>这类的库重新签名。</p><p><strong>Entitlements文件</strong></p><p>在使用CodeSign签名之前我们需要创建<code>.entitlements</code>文件。如果使用xcode开发应用，xcode会帮我们创建好。但我们只有一个<code>.app</code>的Bundle文件，那么只能手动创建然后，使用命令行进行签名。</p><p>macOS AppStore需要的<code>.entitlements</code>文件和第三方发布提交给Steam的<code>.entitlements</code>文件是不同的.</p><p>下面是一个最简的配置,如果应用有其他的capabilities配置，需要再额外配置其他的key/value。</p><p><strong>For macOS AppStore</strong><br>        <figure class="highlight plist"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">plist</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//Apple//DTD PLIST 1.0//EN"</span> <span class="meta-string">"http://www.apple.com/DTDs/PropertyList-1.0.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plist</span> <span class="attr">version</span>=<span class="string">"1.0"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">key</span>&gt;</span>com.apple.security.app-sandbox<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">true</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">key</span>&gt;</span>com.apple.security.files.user-selected.read-only<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">true</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plist</span></span></span><br></pre></td></tr></table></figure></p><p><strong>For Steam</strong></p><figure class="highlight plist"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">plist</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//Apple//DTD PLIST 1.0//EN"</span> <span class="meta-string">"http://www.apple.com/DTDs/PropertyList-1.0.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plist</span> <span class="attr">version</span>=<span class="string">"1.0"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">key</span>&gt;</span>com.apple.security.cs.disable-library-validation<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">true</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">key</span>&gt;</span>com.apple.security.cs.disable-executable-page-protection<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">true</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>CodeSign 命令</strong></p><p>codesign命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">codesign --deep --force --verify --verbose=4 --timestamp --options runtime --entitlements  <span class="variable">$EntitlementsFile</span> --sign <span class="string">"<span class="variable">$CertName</span>"</span> <span class="variable">$FileName</span></span><br></pre></td></tr></table></figure><p>参数sign填写的证书的名称 类似于<code>Mac Developer:XXXXX(TEAMID)</code>之类的。这个参数会有自动匹配只要不出现冲突就可以。</p><p>如何验证codesign是否正确</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">codesign --verify --deep --strict --verbose=4 Game.app</span><br></pre></td></tr></table></figure><p>验证通过则会输出</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="module-access"><span class="module"><span class="identifier">Game</span>.</span></span>app: valid on disk</span><br><span class="line"><span class="module-access"><span class="module"><span class="identifier">Game</span>.</span></span>app: satisfies its Designated Requirement</span><br></pre></td></tr></table></figure><hr><h2 id="提交到Steam和第三方直接发布"><a href="#提交到Steam和第三方直接发布" class="headerlink" title="提交到Steam和第三方直接发布"></a>提交到Steam和第三方直接发布</h2><p>提交到Steam直接分发给用户的macOS程序需要通过Apple的认证流程，详细的说明 <a href="https://developer.apple.com/documentation/xcode/notarizing_macos_software_before_distribution" target="_blank" rel="noopener">Notarizing macOS Software Before Distribution</a></p><h3 id="证书创建"><a href="#证书创建" class="headerlink" title="证书创建"></a>证书创建</h3><p>首先是证书创建，需要在<a href="https://developer.apple.com/" target="_blank" rel="noopener">Apple Developer</a>后台的证书中创建一个 <code>Developer ID Application</code> 证书。</p><p><code>Developer ID Application Certificate</code> 只能由Apple Developer的<strong>account holder</strong>创建，开发者账号下即使是有admin权限的子账号也是无法创建的。</p><p>和创建普通的开发者证书一样，提交CSR文件,创建完成后下载双击导入到keychain中。</p><h3 id="包体配置和准备"><a href="#包体配置和准备" class="headerlink" title="包体配置和准备"></a>包体配置和准备</h3><p>现在我们有一个<code>Game.app</code>的二进制包，以及一个<code>Developer ID Application Certificate</code>。</p><p>按照第一部分的<a href="#应用Bundle处理">应用Bundle处理</a>中的说明</p><p>进行下面的操作</p><ol><li>删除<code>Game.app</code>下面的所有.meta文件</li><li>在<code>Game.app</code>同级目录创建<code>Game.entitlements</code></li><li>修改<code>Game.app/Contents/Info.plist</code>中的信息</li></ol><h3 id="修复SteamLib"><a href="#修复SteamLib" class="headerlink" title="修复SteamLib"></a>修复SteamLib</h3><p>通常Unity使用的Steamworks Lib是第三方开发的<a href="https://github.com/rlabrecque/Steamworks.NET" target="_blank" rel="noopener">rlabrecque/Steamworks.NET</a>。在codesign之前我们要对他进行处理。</p><p><code>rlabrecque/Steamworks.NET</code>的库文件为<code>Steam_api.bundle</code></p><ol><li>Steam_api.bundle的 CFBundleIdentifier为<code>com.rileylabrecque.steam_api</code>，不是标准的BundleId，我们需要将它改成<code>com.rileylabrecque.steamapi</code>去掉下划线。 修改的文件地址在<code>steam_api.bundle/Contents/Info.plist</code>中。</li><li><code>libsteam_api.dylib</code>包含32位的symbol。提交到Apple的bundle必须支持64位的文件，32位的symbol需要删除。<br><code>lipo -remove x86_64 libsteam_api.dylib -o libsteam_api.dylib</code></li></ol><p>这样我们对SteamworkLibrary的处理就完成了。如果有其他的第三方库有类似的问题，也需要进行相同的操作。</p><h3 id="Codesign签名"><a href="#Codesign签名" class="headerlink" title="Codesign签名"></a>Codesign签名</h3><p>Apple文档上建议首先要先对所有的lib，framework以及bundle进行签名，最后再对<code>Game.app</code>进行签名。使用<code>--deep</code>参数进行签名不保证能够正确处理嵌套的lib的正确签名。只能用于文件修改后的codesign patch。</p><ol><li>对所有的library签名</li></ol><p>$BINARY = ‘Game.app’</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">libfile=`find ./<span class="variable">$BINARY</span> -name <span class="string">'*.dylib'</span>`</span><br><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> -r libname; <span class="keyword">do</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Sign:"</span> <span class="variable">$libname</span></span><br><span class="line">        codesign --deep --force --verify -vvvv --timestamp --options runtime --entitlements  <span class="variable">$ENTITLEMENTS</span> --sign <span class="string">"<span class="variable">$SIGNCERT</span>"</span> <span class="variable">$libname</span></span><br><span class="line"><span class="keyword">done</span> &lt;&lt;&lt; <span class="string">"<span class="variable">$libfile</span>"</span></span><br><span class="line"></span><br><span class="line">bundlefile=`find ./<span class="variable">$BINARY</span> -name <span class="string">'*.bundle'</span>`</span><br><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> -r bundlename; <span class="keyword">do</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Sign:"</span> <span class="variable">$bundlename</span></span><br><span class="line">        codesign --deep --force --verify -vvvv --timestamp --options runtime --entitlements  <span class="variable">$ENTITLEMENTS</span> --sign <span class="string">"<span class="variable">$SIGNCERT</span>"</span> <span class="variable">$bundlename</span></span><br><span class="line"><span class="keyword">done</span> &lt;&lt;&lt; <span class="string">"<span class="variable">$bundlefile</span>"</span></span><br><span class="line"></span><br><span class="line">frameworkfile=`find ./<span class="variable">$BINARY</span> -name <span class="string">'*.framework'</span>`</span><br><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> -r frameworkname; <span class="keyword">do</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Sign:"</span> <span class="variable">$frameworkname</span></span><br><span class="line">        codesign --deep --force --verify -vvvv --timestamp --options runtime --entitlements  <span class="variable">$ENTITLEMENTS</span> --sign <span class="string">"<span class="variable">$SIGNCERT</span>"</span> <span class="variable">$frameworkname</span></span><br><span class="line"><span class="keyword">done</span> &lt;&lt;&lt; <span class="string">"<span class="variable">$frameworkfile</span>"</span></span><br></pre></td></tr></table></figure><ol start="2"><li>在所有的lib签名成功后对整体的包进行签名</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">codesign --deep --force --verify --verbose --timestamp --options runtime --entitlements  <span class="variable">$ENTITLEMENTS</span> --sign <span class="string">"<span class="variable">$SIGNCERT</span>"</span> <span class="variable">$BINARY</span> -i <span class="variable">$BUNDLE_ID</span></span><br><span class="line"><span class="comment"># verification</span></span><br><span class="line">codesign --verify --deep -vvvv --strict Game.app</span><br></pre></td></tr></table></figure><p>需要注意的是<code>--sign</code>参数输入”Developer ID Application:”就可以了，codesign会从keychain中自动匹配</p><h3 id="提交苹果Notarization验证"><a href="#提交苹果Notarization验证" class="headerlink" title="提交苹果Notarization验证"></a>提交苹果Notarization验证</h3><p>1.提交到Notarization需要将<code>Game.app</code>打包为一个zip包。</p><p><strong>需要注意的是我们要使用apple提供的ditto命令进行打包，直接使用<code>zip</code>命令会丢失签名信息其他额外信息</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ditto -c -k --sequesterRsrc --keepParent <span class="string">"Game.app"</span> <span class="string">"Game.app.zip"</span></span><br></pre></td></tr></table></figure><p>2.提交认证请求</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">xcrun altool --notarize-app --primary-bundle-id <span class="string">"<span class="variable">$&#123;Bundle_Identifier&#125;</span>"</span> --username <span class="string">"<span class="variable">$&#123;APPLE_ID_ACCOUNT&#125;</span>"</span> --password <span class="string">"<span class="variable">$&#123;APPLE_ID_PWD&#125;</span>"</span> --file Game.app.zip --asc-provider <span class="string">"<span class="variable">$&#123;ASC_PROVIDER&#125;</span>"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#sample</span></span><br><span class="line">xcrun altool --notarize-app --primary-bundle-id <span class="string">"com.xxxx.game"</span> --username <span class="string">"yourid@gmail.com"</span> --password <span class="string">"password"</span> --file Game.app.zip --asc-provider <span class="string">"ABCDEFGH"</span></span><br></pre></td></tr></table></figure><p><code>asc-provider</code>是<code>ProviderShortname</code>, 通常是开发者证书末尾的那个<code>Team ID</code>，在<code>Apple Developer/Membership/Team ID</code>中可以找到</p><p>比较老的apple developer账号<code>ProviderShortname</code>和<code>Team ID</code>不一致，我们可以使用命令来查询<code>ProviderShortName</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ xcrun altool --list-providers -u <span class="string">"AC_USERNAME"</span> -p <span class="string">"PWD"</span></span><br></pre></td></tr></table></figure><p>提交成功之后会显示一个RequestId 如<code>1809fca2-XXXX-XXXX-XXXX-14aa62f6XXXX</code>。</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">altool[<span class="number">16765</span>:<span class="number">378423</span>] No errors uploading <span class="string">'Game.app.zip'</span>.</span><br><span class="line">RequestUUID = <span class="number">1809f</span>ca2-XXXX-XXXX-XXXX<span class="number">-14</span>aa62f6XXXX</span><br></pre></td></tr></table></figure><p>根据RequestID 我们可以查询notarization的结果，通常需要等待5分钟左右。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查询结果</span></span><br><span class="line">$ xcrun altool --notarization-info <span class="string">"1809fca2-XXXX-XXXX-XXXX-14aa62f6XXXX"</span> --username <span class="string">"<span class="variable">$&#123;APPLE_ID_ACCOUNT&#125;</span>"</span> --password <span class="string">"<span class="variable">$&#123;APPLE_ID_PWD&#125;</span>"</span></span><br></pre></td></tr></table></figure><p>提交成功后AppleID邮箱会收到一个来自Apple的邮件。<br>如果失败可以根据Request Identifier查询相应的log。</p><ol start="3"><li>在提交成功之后我们就可以给应用盖章了。</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ xcrun stapler staple <span class="string">"Game.app"</span></span><br><span class="line">$ zip -r -q Game.dist.app Game.app</span><br></pre></td></tr></table></figure><p>这里注意的是不能直接给<code>Game.app.zip</code> staple。<br>对于Staple完成的<code>.app</code>Bundle，再zip之后就可以直接分发了。</p><h2 id="提交到macOS-App-Store"><a href="#提交到macOS-App-Store" class="headerlink" title="提交到macOS App Store"></a>提交到macOS App Store</h2><h3 id="证书创建-1"><a href="#证书创建-1" class="headerlink" title="证书创建"></a>证书创建</h3><p>提交到macOS AppStore需要两个证书</p><ol><li>Mac App Distribution Certificate</li><li>Mac Installer Distribution Certificate</li></ol><p><code>Mac App Distribution Certificate</code>用于给bundle CodeSign</p><p><code>Mac Installer Distribution Certificate</code>用于pack bundle 之后提交到itunes server审核</p><h3 id="包体配置和准备-1"><a href="#包体配置和准备-1" class="headerlink" title="包体配置和准备"></a>包体配置和准备</h3><p>和<a href="#提交到Steam和第三方直接发布">提交到Steam和第三方直接发布</a>中的流程一致</p><ol><li>删除<code>Game.app</code>下面的所有.meta文件</li><li>在<code>Game.app</code>同级目录创建<code>Game.entitlements</code></li><li>修改<pre>Game.app/Contents/Info.plist</pre>中的信息</li><li>处理第三方lib，修改bundleId或删除symbol</li><li>对所有lib签名</li><li>对Game.app签名，这里使用<code>Mac App Distribution</code>证书进行签名</li></ol><h3 id="生成pkg文件"><a href="#生成pkg文件" class="headerlink" title="生成pkg文件"></a>生成pkg文件</h3><p>签名完成后需要将 <code>Game.app</code> pack成 <code>Game.app.pkg</code>文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">productbuild --component <span class="variable">$&#123;BINARY&#125;</span> /Applications --sign <span class="string">"3rd Party Mac Developer Installer:"</span> <span class="string">"<span class="variable">$&#123;PKG_FILE&#125;</span>"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#sample</span></span><br><span class="line">productbuild --component Game.app /Applications --sign <span class="string">"3rd Party Mac Developer Installer:"</span> Game.app.pkg</span><br></pre></td></tr></table></figure><p>pack成功之后会得到一个<code>Game.app.pkg</code>。</p><h3 id="使用AppLoader提交到itune服务器"><a href="#使用AppLoader提交到itune服务器" class="headerlink" title="使用AppLoader提交到itune服务器"></a>使用AppLoader提交到itune服务器</h3><p>和iOS开发相同，使用application loader提交的itunes服务器进行验证。由于最新的xcode 11不再提供GUI版本的的 application loader。我们只能使用命令行<code>xcrun alttol</code>进行处理</p><ol><li>首再提交到itunes之前先验证。</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xcrun altool --validate-app -f Game.app.pkg -u <span class="string">"<span class="variable">$&#123;USER&#125;</span>"</span> -p <span class="string">"<span class="variable">$&#123;PWD&#125;</span>"</span></span><br></pre></td></tr></table></figure><p>等到处理结果，如果提示<code>not error</code>则我们可以提交应用。</p><p>需要注意的是<code>xcrun altool --validate-app</code><strong>并不会查出所有的错误</strong>，再提交到itunes之后，apple还会对包体进行验证。可能本地<code>validation</code>没有错误，但是还是会被apple拒绝。</p><ol start="2"><li>上传pkg到itune服务器</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ xcrun altool --upload-app -f Game.app.pkg -u <span class="string">"<span class="variable">$&#123;USER&#125;</span>"</span> -p <span class="string">"<span class="variable">$&#123;PWD&#125;</span>"</span></span><br></pre></td></tr></table></figure><p>提示<code>no error uploading package</code>，就表示上传成功了。我们只需要等待itunes后台处理。</p><p>如果收到了Apple的邮件:<br><code>App Store Connect: Your app &quot;XXXXX&quot; (Apple ID: 123456789 Version: 1.0 Build: 0) has one or more issues</code><br>就表示本次提交的包里面还有其他错误。</p><p>当这个版本的提交itunes服务器通过了验证，则不会收到邮件，直接在itunes connect后台可以看到提交的版本了。</p><p><strong>在iTunes服务器验证失败后，就需要重新走一遍codesign-&gt;pkg-&gt;upload的流程。和ios开发相同，对于同一个版本每次提交必须要有不同的build，手动修改Game.app/Contents/Info.plist的build version重新操作即可。</strong></p><hr><h2 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h2><p><strong>ITMS-90303: Unable to Sign</strong><br>code object is not signed at all In subcomponent:  有额外的文件没有删除，删除文件后再签名。</p><p><strong>ITMS-90238: Invalid Signature</strong></p><p>某些lib文件没有签名，或者有额外的文件没有删除</p><p><strong>codesign 时提示CSSMERR_TP_CERT_REVOKED</strong></p><p>证书过期需要重新从apple developer后台下载证书</p><p><strong>codesign 提示 errSecInternalComponent</strong></p><p>需要解锁Security的keychain读取证书进行签名</p><hr><p>Reference</p><p><a href="https://docs.unity3d.com/Manual/HOWTO-PortToAppleMacStore.html" target="_blank" rel="noopener">Unity Manual: Delivering your application to the Mac App Store</a><br><a href="https://gist.github.com/dpid/270bdb6c1011fe07211edf431b2d0fe4" target="_blank" rel="noopener">gist:how-to-notarize-unity-for-macos.md</a><br><a href="https://developer.apple.com/documentation/xcode/notarizing_macos_software_before_distribution" target="_blank" rel="noopener">Notarizing macOS Software Before Distribution</a><br><a href="https://developer.apple.com/library/archive/technotes/tn2206/_index.html" target="_blank" rel="noopener">Technical Note TN2206:macOS Code Signing In Depth</a></p><hr><p>感谢阅读，如果有任何错误或者问题请下下面留言。</p>]]></content>
      
      
      
        <tags>
            
            <tag> macOS </tag>
            
            <tag> Steam </tag>
            
            <tag> CodeSign </tag>
            
            <tag> AppStore </tag>
            
            <tag> dev </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Delivering Unity macOS build to Steam and AppStore</title>
      <link href="/2020/02/17/en/submit-unity-macos-build-to-steam-appstore/"/>
      <url>/2020/02/17/en/submit-unity-macos-build-to-steam-appstore/</url>
      
        <content type="html"><![CDATA[<p><a href="/2020/02/17/submit-unity-macos-build-to-steam-appstore/">中文</a> | <a href="/2020/02/17/en/submit-unity-macos-build-to-steam-appstore/">English</a></p><hr><p>This blog records how to setup and config the application bundle which will be submitted to the AppStore or Steam by using the CLI tools. Mostly, we use XCode for developing iOS and macOS applications, which automatically handles the code signing and configurations. But when exporting an app bundle from Unity Editor, we have to do this work by using command line tools that are provided by Apple.</p><p>In the begining, let’s get some preliminary knowledege about the <code>CodeSign</code> and <code>Distributions</code>. Or you can just skip this part then jump into the process parts.</p><p><a href="#Submit-to-SteamStore-and-non-AppStore-distribution">Submit to Steam store or third-party distribution</a><br><a href="#Submit-to-macOS-App-Store">Submit to macOS AppStore</a></p><h2 id="Bundle-Config-and-Code-Signing"><a href="#Bundle-Config-and-Code-Signing" class="headerlink" title="Bundle Config and Code Signing"></a>Bundle Config and Code Signing</h2><h3 id="Basic-Concepts"><a href="#Basic-Concepts" class="headerlink" title="Basic Concepts"></a>Basic Concepts</h3><p>Apple provides code signing tool which is called <code>codesign</code>. In general, the execuatable application in macOS system presents as a folder that has name with <code>.app</code> suffix. It’s different from windows. So for signing the app become more complicated, because we are facing a bunch of files not just a single <code>.exe</code> file.</p><p><strong>Designated Requirement(DR)</strong></p><p>Every application requires a Designated Requirement(DR) when code signing. The DR is identified by the bundle’s BundleID.</p><p><strong>Resource envelope</strong></p><p>CodeSign tool will process all sourcefile and non-sourcefile. Every file calculates a hash string, then combined these hashes into a final hash value which will be attched to the application bundle.</p><p>Any modification apply to the signed files will change the hash that belonging to this files, and obviously affects final hash. By using this method, other security programs can verify the identity and integrality.</p><p>The concept for files signature data is call <code>Resource envelope</code>.</p><p><code>Resource envelope has two versions, the latest v2 version will check all the files inside the bundle. After OSX Mavericks 10.9, all app use the v2 version.</code></p><p>Even if we didn’t touch the bundle file, any extra file added to the <code>Game.app</code> bundle folder, will casue the bundle codesign verification failed.</p><h3 id="Process-application-bundle"><a href="#Process-application-bundle" class="headerlink" title="Process application bundle"></a>Process application bundle</h3><p><strong>Modifiy the BundleId</strong></p><p>Directly open the Plist file <code>Game.app/Contents/Info.plist</code> change the value of key <code>CFBundleIdentifier</code>。</p><p><strong>Remove useless files</strong></p><p>Unity Edtiro always genereate <code>.meta</code> files for all the imported macOS library. These .meta file were placed at illegal path for application bundle. And causing the codesign process failed. We must delete them.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#remove all remove meta files</span></span><br><span class="line">find <span class="string">"./Game.app"</span> -name <span class="string">"*.meta"</span> -<span class="built_in">type</span> f -<span class="built_in">exec</span> rm &#123;&#125; \;</span><br></pre></td></tr></table></figure><h3 id="CodeSigning"><a href="#CodeSigning" class="headerlink" title="CodeSigning"></a>CodeSigning</h3><p><strong>Signing Third-party libs</strong></p><p>Apple requires all the libraries must be signed before submiting to AppStore or Notarization.</p><p>All libraries include <code>.dylib</code> <code>.framework</code> and <code>.bundle</code>.</p><p>When submiting to AppStore, the third-party libs must be signed by current <code>Apple Developer</code>, even if them were codesigned or not. Which means that we also need to codesign the common shared libs such as <code>libssl.dylib</code>.</p><p><strong>Entitlements Files</strong></p><p>Before use codesign tool, we need to create <code>.entitlements</code> file. Xcode usually create them for us, but now we are using CLI tools and tackling with exported binary file, don’t we? The entitlements file which used for AppStore submission differ from the Steam one.</p><p>The minimal configurations are provided below, other key/value pairs must be added if there have other capabilities.</p><p><strong>For macOS AppStore</strong><br>        <figure class="highlight plist"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">plist</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//Apple//DTD PLIST 1.0//EN"</span> <span class="meta-string">"http://www.apple.com/DTDs/PropertyList-1.0.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plist</span> <span class="attr">version</span>=<span class="string">"1.0"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">key</span>&gt;</span>com.apple.security.app-sandbox<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">true</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">key</span>&gt;</span>com.apple.security.files.user-selected.read-only<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">true</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plist</span></span></span><br></pre></td></tr></table></figure></p><p><strong>For Steam</strong></p><figure class="highlight plist"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">plist</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//Apple//DTD PLIST 1.0//EN"</span> <span class="meta-string">"http://www.apple.com/DTDs/PropertyList-1.0.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plist</span> <span class="attr">version</span>=<span class="string">"1.0"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">key</span>&gt;</span>com.apple.security.cs.disable-library-validation<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">true</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">key</span>&gt;</span>com.apple.security.cs.disable-executable-page-protection<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">true</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>CodeSign Tool</strong></p><p>codesign command for signing a single file</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">codesign --deep --force --verify --verbose=4 --timestamp --options runtime --entitlements  <span class="variable">$EntitlementsFile</span> --sign <span class="string">"<span class="variable">$CertName</span>"</span> <span class="variable">$FileName</span></span><br></pre></td></tr></table></figure><p>Parameter sign should be filled with the name of certificate. Like <code>Mac Developer:XXXXX(TEAMID)</code>. Codesign tool will search all the certs in user’s keychain, find the correct one. Throwing error when found multiple certs match the inputs.</p><p>Command for verification the codesign status.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">codesign --verify --deep --strict --verbose=4 Game.app</span><br></pre></td></tr></table></figure><p>Success with these outputs.</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="module-access"><span class="module"><span class="identifier">Game</span>.</span></span>app: valid on disk</span><br><span class="line"><span class="module-access"><span class="module"><span class="identifier">Game</span>.</span></span>app: satisfies its Designated Requirement</span><br></pre></td></tr></table></figure><hr><h2 id="Submit-to-SteamStore-and-non-AppStore-distribution"><a href="#Submit-to-SteamStore-and-non-AppStore-distribution" class="headerlink" title="Submit to SteamStore and non AppStore distribution"></a>Submit to SteamStore and non AppStore distribution</h2><p>The binary app which submitted to SteamStore must be notarized by Apple, otherwise the program will be blocked by GateKeeper when user try to launch the app.</p><p>The specified notarizing docs from Apple <a href="https://developer.apple.com/documentation/xcode/notarizing_macos_software_before_distribution" target="_blank" rel="noopener">Notarizing macOS Software Before Distribution</a></p><h3 id="Generate-Certificate"><a href="#Generate-Certificate" class="headerlink" title="Generate Certificate"></a>Generate Certificate</h3><p>First step is creating a certificate. Signin to the <a href="https://developer.apple.com/" target="_blank" rel="noopener">Apple Developer</a> website then generate a <code>Developer ID Application</code> cert.</p><p>Only the <strong>account holder</strong> of the developer team can create this <code>Developer ID Application Certificate</code> ，even if the user have admin permission role. Just like any other developer cert, export a CSR file from keychain tool, then upload for swapping a .cert file.</p><h3 id="Bundle-preparation"><a href="#Bundle-preparation" class="headerlink" title="Bundle preparation"></a>Bundle preparation</h3><p>Now we have a <code>Game.app</code> binary bundle, and a <code>Developer ID Application Certificate</code>. But before signing, bundle needs to be preprocessed.</p><p>Following the instruction of first part <a href="#Process-application-bundle">Process-application-bundle</a>.</p><ol><li>delete all <code>.meta</code> file recursivly inside the <code>Game.app</code> folder.</li><li>Create <code>Game.entitlements</code> file as informed.</li><li>Modify <code>Game.app/Contents/Info.plist</code> if needed.</li></ol><h3 id="Fix-SteamLib"><a href="#Fix-SteamLib" class="headerlink" title="Fix SteamLib"></a>Fix SteamLib</h3><p>Most of developer use third-party Steamworks Lib<a href="https://github.com/rlabrecque/Steamworks.NET" target="_blank" rel="noopener">rlabrecque/Steamworks.NET</a> with Unity, because the VALVE didn’t provide the C# version SDK。Before codesign we needs some patches。</p><p>The lib file of <code>rlabrecque/Steamworks.NET</code> is <code>Steam_api.bundle</code>.</p><ol><li>Steam_api.bundle contains an invalid CFBundleIdentifier: <code>com.rileylabrecque.steam_api</code>. Change it to <code>com.rileylabrecque.steamapi</code> in the file<br><code>steam_api.bundle/Contents/Info.plist</code>。</li><li><code>libsteam_api.dylib</code> contains 32bit symbols. We only use 64bit symbols, delete it with command <code>lipo -remove x86_64 libsteam_api.dylib -o libsteam_api.dylib</code>.</li></ol><p>No we have successfully processing the Steamwork library. These rules are also demanded with the other libraries. You should apply the patches if there exist.</p><h3 id="CodeSigning-1"><a href="#CodeSigning-1" class="headerlink" title="CodeSigning"></a>CodeSigning</h3><p>The instruction of apple developer doc recommands that codesign all libs before signing the final bundle. Using <code>--deep</code> parameter does not guarantee the correctness with nested libraries. It’s just for codesign patching after file modification.</p><p>I just write a simple bash script for codesign command execution.</p><ol><li>Sign all libraries</li></ol><p>$BINARY = ‘Game.app’</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">libfile=`find ./<span class="variable">$BINARY</span> -name <span class="string">'*.dylib'</span>`</span><br><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> -r libname; <span class="keyword">do</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Sign:"</span> <span class="variable">$libname</span></span><br><span class="line">        codesign --deep --force --verify -vvvv --timestamp --options runtime --entitlements  <span class="variable">$ENTITLEMENTS</span> --sign <span class="string">"<span class="variable">$SIGNCERT</span>"</span> <span class="variable">$libname</span></span><br><span class="line"><span class="keyword">done</span> &lt;&lt;&lt; <span class="string">"<span class="variable">$libfile</span>"</span></span><br><span class="line"></span><br><span class="line">bundlefile=`find ./<span class="variable">$BINARY</span> -name <span class="string">'*.bundle'</span>`</span><br><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> -r bundlename; <span class="keyword">do</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Sign:"</span> <span class="variable">$bundlename</span></span><br><span class="line">        codesign --deep --force --verify -vvvv --timestamp --options runtime --entitlements  <span class="variable">$ENTITLEMENTS</span> --sign <span class="string">"<span class="variable">$SIGNCERT</span>"</span> <span class="variable">$bundlename</span></span><br><span class="line"><span class="keyword">done</span> &lt;&lt;&lt; <span class="string">"<span class="variable">$bundlefile</span>"</span></span><br><span class="line"></span><br><span class="line">frameworkfile=`find ./<span class="variable">$BINARY</span> -name <span class="string">'*.framework'</span>`</span><br><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> -r frameworkname; <span class="keyword">do</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Sign:"</span> <span class="variable">$frameworkname</span></span><br><span class="line">        codesign --deep --force --verify -vvvv --timestamp --options runtime --entitlements  <span class="variable">$ENTITLEMENTS</span> --sign <span class="string">"<span class="variable">$SIGNCERT</span>"</span> <span class="variable">$frameworkname</span></span><br><span class="line"><span class="keyword">done</span> &lt;&lt;&lt; <span class="string">"<span class="variable">$frameworkfile</span>"</span></span><br></pre></td></tr></table></figure><ol start="2"><li>CodeSign final application bundle</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">codesign --deep --force --verify --verbose --timestamp --options runtime --entitlements  <span class="variable">$ENTITLEMENTS</span> --sign <span class="string">"<span class="variable">$SIGNCERT</span>"</span> <span class="variable">$BINARY</span> -i <span class="variable">$BUNDLE_ID</span></span><br><span class="line"><span class="comment"># verification</span></span><br><span class="line">codesign --verify --deep -vvvv --strict Game.app</span><br></pre></td></tr></table></figure><p>Emphasis:  <code>--sign</code> parameter will automatically match, just input “Developer ID Application:”.</p><h3 id="Submit-to-Notarization"><a href="#Submit-to-Notarization" class="headerlink" title="Submit to Notarization"></a>Submit to Notarization</h3><ol><li>Zip archive the bundle before notarization</li></ol><p><strong>Warning: We should use the command <code>ditto</code> for archive the budnle, use <code>zip</code> cause the missing of signature infomation</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ditto -c -k --sequesterRsrc --keepParent <span class="string">"Game.app"</span> <span class="string">"Game.app.zip"</span></span><br></pre></td></tr></table></figure><p>2.Submission</p><p>Now we have the ziped bundle. It’s time for notarization.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">xcrun altool --notarize-app --primary-bundle-id <span class="string">"<span class="variable">$&#123;Bundle_Identifier&#125;</span>"</span> --username <span class="string">"<span class="variable">$&#123;APPLE_ID_ACCOUNT&#125;</span>"</span> --password <span class="string">"<span class="variable">$&#123;APPLE_ID_PWD&#125;</span>"</span> --file Game.app.zip --asc-provider <span class="string">"<span class="variable">$&#123;ASC_PROVIDER&#125;</span>"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#sample</span></span><br><span class="line">xcrun altool --notarize-app --primary-bundle-id <span class="string">"com.xxxx.game"</span> --username <span class="string">"yourid@gmail.com"</span> --password <span class="string">"password"</span> --file Game.app.zip --asc-provider <span class="string">"ABCDEFGH"</span></span><br></pre></td></tr></table></figure><p>Parameter <code>asc-provider</code> requires <code>ProviderShortname</code>.</p><p>It’s commonly equals <code>Team ID</code> which can be found at<br>‘Apple Developer/Membership/Team ID’.</p><p>But unfortunately, my apple developer account is pretty old. These are not equal.<br>Don’t worry, apple provide the tools for quering the <code>ProviderShortName</code>.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ xcrun altool --list-providers -u <span class="string">"AC_USERNAME"</span> -p <span class="string">"PWD"</span></span><br></pre></td></tr></table></figure><p>If everything gose well, we may get a <code>RequestId</code> like ‘1809fca2-XXXX-XXXX-XXXX-14aa62f6XXXX’.</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">altool[<span class="number">16765</span>:<span class="number">378423</span>] No errors uploading <span class="string">'Game.app.zip'</span>.</span><br><span class="line">RequestUUID = <span class="number">1809f</span>ca2-XXXX-XXXX-XXXX<span class="number">-14</span>aa62f6XXXX</span><br></pre></td></tr></table></figure><p>With this ReqId, we can query the result of notarization. It needs about 5mins for apple server processing the notarization. Maybe longer depends on the file size.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查询结果</span></span><br><span class="line">$ xcrun altool --notarization-info <span class="string">"1809fca2-XXXX-XXXX-XXXX-14aa62f6XXXX"</span> --username <span class="string">"<span class="variable">$&#123;APPLE_ID_ACCOUNT&#125;</span>"</span> --password <span class="string">"<span class="variable">$&#123;APPLE_ID_PWD&#125;</span>"</span></span><br></pre></td></tr></table></figure><p>When processing finish, Apple will send an email to your developer ID.<br>If the notarization failed, all erros can be find by check the log file.</p><ol start="3"><li>Staple App bundle after notarization</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ xcrun stapler staple <span class="string">"Game.app"</span></span><br><span class="line">$ zip -r -q Game.dist.app Game.app</span><br></pre></td></tr></table></figure><p>Please keep in mind that we can’t staple with <code>Game.app.zip</code> file.<br>Staple only apple to app bundle. When staples successfully, zip the <code>Game.app</code> again, then we can submit it to the user or SteamStore.</p><h2 id="Submit-to-macOS-App-Store"><a href="#Submit-to-macOS-App-Store" class="headerlink" title="Submit to macOS App Store"></a>Submit to macOS App Store</h2><h3 id="Certificate-Creation"><a href="#Certificate-Creation" class="headerlink" title="Certificate Creation"></a>Certificate Creation</h3><p>Two different certificate are required when submit to macOS AppStore</p><ol><li>Mac App Distribution Certificate</li><li>Mac Installer Distribution Certificate</li></ol><p><code>Mac App Distribution Certificate</code> is used for bundle <code>CodeSign</code>.</p><p><code>Mac Installer Distribution Certificate</code> is used for pack bundle then uploading to itunes server for review.</p><h3 id="Bundle-Configuration"><a href="#Bundle-Configuration" class="headerlink" title="Bundle Configuration"></a>Bundle Configuration</h3><p>Same as <a href="#Submit-to-SteamStore-and-non-AppStore-distribution">Submit-to-SteamStore-and-non-AppStore-distribution</a></p><ol><li>delete all <code>.meta</code> file recursivly inside the <code>Game.app</code> folder.</li><li>Create <code>Game.entitlements</code> file as informed.</li><li>Modify <code>Game.app/Contents/Info.plist</code> if needed.</li><li>Process third-party libs</li><li>CodeSign all libs. (use <code>Mac App Distribution</code>)</li><li>CodeSign Game.app. (use <code>Mac App Distribution</code>)</li></ol><h3 id="Generate-pkg-file"><a href="#Generate-pkg-file" class="headerlink" title="Generate .pkg file"></a>Generate .pkg file</h3><p>After codesign, we need to pack <code>Game.app</code> into <code>Game.app.pkg</code>.</p><p>Use <code>productbuild</code> tool</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">productbuild --component <span class="variable">$&#123;BINARY&#125;</span> /Applications --sign <span class="string">"3rd Party Mac Developer Installer:"</span> <span class="string">"<span class="variable">$&#123;PKG_FILE&#125;</span>"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#sample</span></span><br><span class="line">productbuild --component Game.app /Applications --sign <span class="string">"3rd Party Mac Developer Installer:"</span> Game.app.pkg</span><br></pre></td></tr></table></figure><h3 id="Use-AppLoader-for-uploading"><a href="#Use-AppLoader-for-uploading" class="headerlink" title="Use AppLoader for uploading"></a>Use AppLoader for uploading</h3><p>Now we have <code>Game.app.pkg</code> bundle which is permitted for uploading.</p><p>It same process like iOS developement. use application loader tool for uploading to itunes server. Due to the removal of GUI version ApplcaitionLoader with Xcode11,<br>we can only submit with command line use <code>xcrun altool</code>.</p><ol><li>Verification before submission</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xcrun altool --validate-app -f Game.app.pkg -u <span class="string">"<span class="variable">$&#123;USER&#125;</span>"</span> -p <span class="string">"<span class="variable">$&#123;PWD&#125;</span>"</span></span><br></pre></td></tr></table></figure><p>Tips: <code>xcrun altool --validate-app</code><strong>will not found all the erros</strong>, because apple itunes server will do the more stricter validation.</p><ol start="2"><li>Uploading</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ xcrun altool --upload-app -f Game.app.pkg -u <span class="string">"<span class="variable">$&#123;USER&#125;</span>"</span> -p <span class="string">"<span class="variable">$&#123;PWD&#125;</span>"</span></span><br></pre></td></tr></table></figure><p>If get some output like <code>no error uploading package</code>，means upload successfully.</p><p>Apple will also send an email when validation failed. Like this:<br><code>App Store Connect: Your app &quot;XXXXX&quot; (Apple ID: 123456789 Version: 1.0 Build: 0) has one or more issues</code></p><p>But if the validation got through, no email sent. Remember to check the itunes connect dashboard.</p><p>Fix all the errors that apple email mentions. After solve the errors, the process steps of codesign-&gt;pkg-&gt;upload must be executed completely. Do not forget to increse the build version number.<br>Every uploading task requires different build version number.</p><hr><h2 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h2><p>I just list some common errors.</p><ul><li><strong>ITMS-90303: Unable to Sign</strong></li></ul><p>code object is not signed at all In subcomponent:  PATH_TO_THE_FILE.<br>Delete these files before codesign.</p><ul><li><strong>ITMS-90238: Invalid Signature</strong></li></ul><p>Some libs are not signed, or signed with incorrect cert.</p><ul><li><strong>codesign throw error: CSSMERR_TP_CERT_REVOKED</strong></li></ul><p>The certificate is out-of-date, download the new one.</p><ul><li><strong>codesign 提示 errSecInternalComponent</strong></li></ul><p>If you do the <code>codesign</code> or <code>productbuild</code> via ssh, you should unlock the keychain with CLI. Because some process require user password to unlock the keychain. There is no password dialog pop up when these program request an access to the keychain.</p><hr><p>Reference</p><p><a href="https://docs.unity3d.com/Manual/HOWTO-PortToAppleMacStore.html" target="_blank" rel="noopener">Unity Manual: Delivering your application to the Mac App Store</a><br><a href="https://gist.github.com/dpid/270bdb6c1011fe07211edf431b2d0fe4" target="_blank" rel="noopener">gist:how-to-notarize-unity-for-macos.md</a><br><a href="https://developer.apple.com/documentation/xcode/notarizing_macos_software_before_distribution" target="_blank" rel="noopener">Notarizing macOS Software Before Distribution</a><br><a href="https://developer.apple.com/library/archive/technotes/tn2206/_index.html" target="_blank" rel="noopener">Technical Note TN2206:macOS Code Signing In Depth</a></p><hr><p>Thanks for reading, If there are any mistake or question, feel free to leave a comment below.</p>]]></content>
      
      
      
        <tags>
            
            <tag> macOS </tag>
            
            <tag> Steam </tag>
            
            <tag> CodeSign </tag>
            
            <tag> AppStore </tag>
            
            <tag> dev </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C# 实现友元及方法调用限制</title>
      <link href="/2019/08/19/method-calling-restriction-csharp/"/>
      <url>/2019/08/19/method-calling-restriction-csharp/</url>
      
        <content type="html"><![CDATA[<p>C#的范围限定符在大部分情况下，能够满足需求。但是考虑这样的情况，我们希望一个类的public方法能够被另外一个类的方法调用，但是又仅限于某些允许的方法来调用。通常的情形是这两个类的调用是单向的，但是又不合适使用嵌套类来定义以及将两个类合并。<br>对于C++来说，有Friend Class的定义来让两个类之间的方法能够相互暴露，而C#并没有类似的实现。<br>在没有语法和语言特性的支持的情况下，我们如果要对方法调用进行限制，可以使用StackFrame对调用进行检测。</p><p>考虑如下情况，我们有三个类<code>A,B,C</code>,我们希望<code>A.CallingValidFromB</code> 只能被<code>B</code>的方法调用，而其他类的方法调用该方法则会报错:</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">A</span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">CallingValidFromB</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">B</span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">TestCall</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        A.CallingValidFromB(); <span class="comment">//OK </span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">C</span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">TestCall</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        C.CallingValidFromB();<span class="comment">// Error throw exception</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对此，我们可以<code>StackFrame</code>对方法调用进行分析，来检测caller和callee是否满足要求。<code>StackFrame</code>可以获取到每个call stack中的每一步状态的方法。</p><h2 id="方法调用限制检测"><a href="#方法调用限制检测" class="headerlink" title="方法调用限制检测"></a>方法调用限制检测</h2><p><code>RestrictCaller</code>方法会对caller进行校验</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">DevTool</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> RestrictCaller&lt;T&gt;(<span class="keyword">params</span> <span class="keyword">string</span>[] methods)</span><br><span class="line">&#123;</span><br><span class="line">StackFrame frame1 = <span class="keyword">new</span> StackFrame(<span class="number">1</span>);</span><br><span class="line">StackFrame frame2 = <span class="keyword">new</span> StackFrame(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> callerMethod = frame2.GetMethod();</span><br><span class="line"><span class="keyword">var</span> callerType = callerMethod.DeclaringType;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> calleeMethod = frame1.GetMethod();</span><br><span class="line"><span class="keyword">var</span> calleeType = calleeMethod.DeclaringType;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> calleeId = <span class="string">$"<span class="subst">&#123;calleeType.FullName&#125;</span>.<span class="subst">&#123;calleeMethod.Name&#125;</span>()"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> expectedType = <span class="keyword">typeof</span>(T);</span><br><span class="line"><span class="keyword">if</span> (expectedType != callerType)</span><br><span class="line">&#123;</span><br><span class="line">UnityDebug.LogError(<span class="string">$"Call Method:&lt;<span class="subst">&#123;calleeId&#125;</span>&gt; withType:&lt;<span class="subst">&#123;callerType.FullName&#125;</span>&gt;, expect:&lt;<span class="subst">&#123;expectedType.FullName&#125;</span>&gt;"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (methods == <span class="literal">null</span> || methods.Length == <span class="number">0</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">var</span> methodList = <span class="keyword">new</span> List&lt;<span class="keyword">string</span>&gt;(methods);</span><br><span class="line"><span class="keyword">if</span> (!methodList.Contains(callerMethod.Name))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">var</span> callerId = <span class="string">$"<span class="subst">&#123;callerType.FullName&#125;</span>.<span class="subst">&#123;callerMethod.Name&#125;</span>()"</span>;</span><br><span class="line">UnityDebug.LogError(<span class="string">$"Call Method:&lt;<span class="subst">&#123;calleeId&#125;</span>&gt; withMethod:&lt;<span class="subst">&#123;callerId&#125;</span>&gt; is not permitted."</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样对于上文的例子，我们就可以添加校验</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">A</span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">CallingValidFromB</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="comment">//限制方法从B调用而来</span></span><br><span class="line">        <span class="keyword">var</span> callingValid = DevTool.RestrictCaller&lt;B&gt;();</span><br><span class="line">        <span class="keyword">if</span>(!callingValid) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Do something</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">CallingValidFromBWithDefinedMethod</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="comment">//限制方法只能从 B.TestCall() 中进行调用</span></span><br><span class="line">        <span class="keyword">var</span> callingValid = DevTool.RestrictCaller&lt;B&gt;(<span class="keyword">nameof</span>(B.TestCall));</span><br><span class="line">        <span class="keyword">if</span>(!callingValid) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Do something</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="快速获取CallingMethod"><a href="#快速获取CallingMethod" class="headerlink" title="快速获取CallingMethod"></a>快速获取CallingMethod</h2><p>在<code>.NET 4.0</code>之后<code>System.Runtime.CompilerServices</code>中提供了 三个Attribute用户快速获取<code>Caller</code>信息</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">CallerFilePathAttribute</span>]</span><br><span class="line">[<span class="meta">CallerMemberNameAttribute</span>]</span><br><span class="line">[<span class="meta">CallerLineNumberAttribute</span>]</span><br></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">TestMethod</span>(<span class="params"><span class="keyword">int</span> val,[CallerMemberName] <span class="keyword">string</span> callerMethod  =<span class="string">""</span></span>)</span>&#123;</span><br><span class="line">    Console.WriteLine(<span class="string">$"caller method: <span class="subst">&#123;callerMethod&#125;</span>"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">AnotherMethod</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    TestMethod(<span class="number">1</span>); <span class="comment">// caller method: AnotherMethod</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="使用接口隐藏方法"><a href="#使用接口隐藏方法" class="headerlink" title="使用接口隐藏方法"></a>使用接口隐藏方法</h2><p>除去运行时调用检测之外，我们还可以使用接口将一些非公开的方法隐藏。在需要被暴露的类中直接将对象进行类型转换，再进行函数调用。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title">A</span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">publicMethod</span>(<span class="params"></span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">AWithInternal</span> : <span class="title">A</span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testMethod</span>(<span class="params"></span>)</span>&#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> hack </tag>
            
            <tag> CSharp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>支持继承的链式调用范式Method chaining Pattern with generic derivation</title>
      <link href="/2018/09/27/method-chaining-with-derivation/"/>
      <url>/2018/09/27/method-chaining-with-derivation/</url>
      
        <content type="html"><![CDATA[<p>本文实现基于C#与Typescript.</p><ul><li>链式调用</li><li>使用Generics 实现链式调用扩展</li><li>使用local class优化代码结构</li></ul><h2 id="链式调用"><a href="#链式调用" class="headerlink" title="链式调用"></a>链式调用</h2><p>链式调用方法是一个常见的编程范式，特别是在对象构造器的类上，通常是一些<code>builder</code>的类使用了链式调用。链式调用给复杂对象的创建参数提供了简便的调用方式。</p><p>一个常见的Method Chaining 类</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">class</span> Data&#123;</span><br><span class="line">  <span class="keyword">public</span> items:Item[] = [];</span><br><span class="line">  <span class="keyword">public</span> num:<span class="built_in">number</span> = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> DataBuilder&#123;</span><br><span class="line">  <span class="keyword">protected</span> m_data:Data = <span class="keyword">new</span> Data();</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> create():DataBuilder&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> DataBuilder();</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">public</span> addItem(o:Item):DataBuilder&#123;</span><br><span class="line">    <span class="keyword">this</span>.m_data.items.push(o);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">public</span> addNum(n:<span class="built_in">number</span>):DataBuilder&#123;</span><br><span class="line">    <span class="keyword">this</span>.m_data.num +=n;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">public</span> finish():Data&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.m_data;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> data = DataBuilder.create().addItem(<span class="keyword">new</span> Item()).addNum(<span class="number">100</span>).addItem(<span class="keyword">new</span> Item()).finish();</span><br></pre></td></tr></table></figure><p>考虑继承的情况，比如<code>DataBuilder</code>是在提供的一个Library中的类，同时希望使用的开发者可以对这个链式调用构造类进行扩展。</p><p>具体的情形就变为：</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> CustomDataBuilder <span class="keyword">extends</span> DataBuilder&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> create():CustomDataBuilder&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> CustomDataBuilder();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> addCustomItem(o:Item):CustomDataBuilder&#123;</span><br><span class="line">    <span class="keyword">this</span>.m_data.items.push(o);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> data = CustomDataBuilder.create().addCustomItem(<span class="literal">null</span>).addNum(<span class="number">100</span>).finish();</span><br></pre></td></tr></table></figure><p>这样我们可以使用子类的方法进行链式调用，同时也可以调用到基类的<code>addNum</code>方法。</p><p>但是这里存在一个问题，当<code>CustomDataBuilder</code>的对象调用了其基类的方法后，返回的是基类<code>DataBuilder</code>的实例，就无法再次链式调用<code>CustomDataBuilder</code>的方法了。也就是：</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> data = CustomDataBuilder.create().addNum(<span class="number">100</span>).addCustomItem(<span class="literal">null</span>); <span class="comment">//Error</span></span><br></pre></td></tr></table></figure><p>虽然typescript会被编译成js，<code>this</code>依旧是<code>CustomDataBuilder</code>的对象可以正常执行，但是typescript的类型检测却无法通过。<br>同时这个pattern在C#中也是无法完成编译的。</p><h2 id="使用Generics实现链式调用扩展"><a href="#使用Generics实现链式调用扩展" class="headerlink" title="使用Generics实现链式调用扩展"></a>使用Generics实现链式调用扩展</h2><p>所以我们希望所有的链式调用方法返回的都是其本身的类型签名，这样我们就必须用到GenericType。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> ABuilder&lt;T <span class="keyword">extends</span> ABuilder&lt;T&gt;&gt;&#123;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">public</span> funcA():T&#123;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>由于链式调用的需求，<code>T</code>必须是<code>ABuilder&lt;T&gt;</code>的子类。所以<code>T</code>带有<code>T extends ABuilder&lt;T&gt;</code>的约束。</p><p>同时由于我们没法限定<code>ABuilder&lt;T&gt;</code>是<code>T</code>或其子类，所以<code>funcA()</code>中不能<code>return this</code>，所以我们引入一个<code>T</code>的成员。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> ABuilder&lt;T <span class="keyword">extends</span> ABuilder&lt;T&gt;&gt;&#123;</span><br><span class="line">  <span class="keyword">protected</span> t:T；</span><br><span class="line">  <span class="keyword">public</span> funcA():T&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.t;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>由于<code>ABuilder</code>是泛型类，不能直接创建其对象，在typescript中<code>let b = new ABuilder()</code>时，泛型类<code>T</code>是一个空对象<code>{}</code>。<br>我们需要引入一个额外的类，来实现其泛型。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> ABuilder&lt;T <span class="keyword">extends</span> ABuilder&lt;T&gt;&gt;&#123;</span><br><span class="line">  <span class="keyword">protected</span> t:T；</span><br><span class="line">  <span class="keyword">public</span> funcA():T&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.t;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> A <span class="keyword">extends</span> ABuilder&lt;A&gt;&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> create():A&#123;</span><br><span class="line">    <span class="keyword">let</span> a = <span class="keyword">new</span> A();</span><br><span class="line">    a.t = a;</span><br><span class="line">    <span class="keyword">return</span> a;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> a = A.create().funcA().funcA().funcA();</span><br></pre></td></tr></table></figure><p><strong>实现继承</strong></p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> B <span class="keyword">extends</span> ABuilder&lt;B&gt;&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> create():B&#123;</span><br><span class="line">    <span class="keyword">let</span> b = <span class="keyword">new</span> B();</span><br><span class="line">    b.t = b;</span><br><span class="line">    <span class="keyword">return</span> b;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">public</span> funcB():B&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.t;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> a = A.create().funcA().funcA().funcA();</span><br><span class="line"><span class="keyword">let</span> b = B.create().funcB().funcA().funcB();</span><br></pre></td></tr></table></figure><p>这样我们就可以通过类的继承来扩展<code>ABuilder</code>。</p><p>如果类<code>B</code>也需要被扩展，那么我们可以定义一个<code>BBuilder&lt;T&gt;</code>：</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> BBuilder&lt;T <span class="keyword">extends</span> BBuilder&lt;T&gt;&gt; <span class="keyword">extends</span> ABuilder&lt;T&gt;&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> funcB():B&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.t;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> B <span class="keyword">extends</span> BBuilder&lt;B&gt;&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> create():B&#123;</span><br><span class="line">    <span class="keyword">let</span> b = <span class="keyword">new</span> B();</span><br><span class="line">    b.t = b;</span><br><span class="line">    <span class="keyword">return</span> b;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> C <span class="keyword">extends</span> BBuilder&lt;C&gt;&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> create():C&#123;</span><br><span class="line">    <span class="keyword">let</span> c = <span class="keyword">new</span> C();</span><br><span class="line">    c.t = c;</span><br><span class="line">    <span class="keyword">return</span> c;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">public</span> funcC():C&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.t;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> c = C.create().funcA().funcB().funcA();</span><br></pre></td></tr></table></figure><h2 id="使用local-class优化代码结构"><a href="#使用local-class优化代码结构" class="headerlink" title="使用local class优化代码结构"></a>使用local class优化代码结构</h2><p>由于在C#中，可以使用相同的Symbol定义一个类和一个类的范型类，这样将原先的一个类拆封为两个结构上看上去依旧优雅。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">public class A&lt;T&gt; where T:A&lt;T&gt;&#123;</span><br><span class="line">  <span class="comment">//...</span></span><br><span class="line">&#125;</span><br><span class="line">public class A: A&lt;A&gt;&#123;</span><br><span class="line">  <span class="comment">//...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>要进行扩展时使用<code>A&lt;T&gt;</code>,直接调用时使用<code>A</code>。</p><p>但是在TS中泛型仅仅是Typescript Compiler的语法糖，最终编译为的JS中<code>A&lt;T&gt;</code>与<code>A</code>共用了同一个域中的名称。所以就一定要有两个不同的名称。</p><p>我们可以使用<code>typescript</code>中的local class来将两个类合并。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> A&lt;T <span class="keyword">extends</span> A&lt;T&gt;&gt;&#123;</span><br><span class="line">  <span class="keyword">protected</span> t:T;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> ABuilder = <span class="keyword">class</span> ABuilder <span class="keyword">extends</span> A&lt;ABuilder&gt;&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">constructor</span>(<span class="params"></span>)&#123;</span><br><span class="line">      <span class="keyword">super</span>();</span><br><span class="line">      <span class="keyword">this</span>.t = <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> create():ABuilder&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> ABuilder();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">public</span> funcA():T&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.t;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> B&lt;T <span class="keyword">extends</span> B&lt;T&gt;&gt; <span class="keyword">extends</span> A&lt;T&gt;&#123;</span><br><span class="line">  <span class="keyword">protected</span> t:T;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> BBuilder = <span class="keyword">class</span> BBuilder <span class="keyword">extends</span> B&lt;BBuilder&gt;&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">constructor</span>(<span class="params"></span>)&#123;</span><br><span class="line">      <span class="keyword">super</span>();</span><br><span class="line">      <span class="keyword">this</span>.t = <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> create():BBuilder&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> BBuilder();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">public</span> funcB():T&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.t;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> a = A.ABuilder.create().funcA().funcA().funcA();</span><br><span class="line"><span class="keyword">let</span> b = B.BBuilder.create().funcB().funcA().funcB();</span><br></pre></td></tr></table></figure><p><a href="https://gist.github.com/soyemi/21475d1945b1fbd22906606bb10d5e96" target="_blank" rel="noopener">Gist - C#/Typescript</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> Programming Pattern </tag>
            
            <tag> Method Chaining </tag>
            
            <tag> Typescript </tag>
            
            <tag> Generics </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PowerVR GPU架构与优化建议</title>
      <link href="/2018/09/17/powervr-architecture-overview/"/>
      <url>/2018/09/17/powervr-architecture-overview/</url>
      
        <content type="html"><![CDATA[<p>最近在看移动GPU优化的时候对TiledBased GPU有一些疑惑，特别是常说的Alpha-Blend比Alpha-Test在移动GPU上快的奇特性质，于是找了powerVR相关的文档来阅读，也做个记录。</p><p>Imagination的powerVR架构的GPU之前主要是iOS手机系列的GPU供应商，而苹果自从17年宣布要逐步放弃使用imagination的GPU技术转而自主研发GPU开始，powerVR架构就似乎前途未卜。Apple A11处理器开始到最新的iphone XS 使用的A12处理器，都是苹果自研的GPU，相比起之前的powerVR的GPU有巨大的性能提升。虽然苹果转向了自研GPU，但似乎其架构还是继承于PVR，相应的TBDR也是保留的，所以powerVR架构相关的知识对于iOS的GPU开发依旧还是有用的。同时Metal2提供了一些新的feature如<code>Imageblocks</code>,<code>Raster Order Groups</code>等新feature，这部分是Apple对TBDR架构的加强与优化，具体的文档可以看<a href="https://developer.apple.com/documentation/metal/mtldevice/ios_and_tvos_devices/about_gpu_family_4" target="_blank" rel="noopener">这里</a>。</p><h2 id="主流图形架构"><a href="#主流图形架构" class="headerlink" title="主流图形架构"></a>主流图形架构</h2><ul><li>Immediate Mode Renderer(IMR)</li><li>Tile Based Renderer(TBR)</li><li>Tile Based Deferred Renderer(TBDR)</li></ul><p><strong>Unified and Non-unified shader architecture</strong></p><p><img src="/images/pvr/a1811ea4.png" alt="shader architecture"></p><p>非统一的着色器架构上Vertex Shader要等待Fragment Shader执行完后才能push处理完的顶点数据丢给FS单元。<br>而统一的着色器架构，处理会减少等待时间，提升性能。PowerVR全部采用的都是Unified Shader Architecture.</p><p><strong>Overdraw</strong></p><p>由于geometry提交顺序的不同，会有一些fragment会被重复绘制。<br>为了减少overdraw的情形，图形计算核心会进行Early-Z testing的操作以减少Overdraw。</p><h3 id="IMR"><a href="#IMR" class="headerlink" title="IMR"></a>IMR</h3><p><img src="/images/pvr/781b2ded.png" alt="IMR Pipeline"></p><p>每一个渲染对象/drawcall完成了整个渲染管线流程写入frameBuffer才会开始渲染下一个对象/drawcall。在IMR模式下，Early-Z test可以直接将深度测试的几何图元跳过以提升性能，但是Early-Z test依赖渲染绘制对象的提交顺序是从前往后的。</p><p>同时每一次渲染完的color与depth数据读取写回到colorbuffer与depth/stencil buffer是都会产生很大的带宽消耗。普通的Read-Modify-Write都是在system memory与GPU之间传输数据，如ZWrite/Write,Blend这些。所以IMR的架构会有一个很大显存cache来优化这部分大量的内存带宽消耗。</p><h3 id="TBR"><a href="#TBR" class="headerlink" title="TBR"></a>TBR</h3><p><img src="/images/pvr/2c5b488b.png" alt="TBR Pipeline"></p><p>整个光栅化和fragment处理会被分为一个个Tile进行处理，通常为16×16大小的Tile。</p><p>TBR的结构添加了on-chip buffers用来储存tiling后的Depth Buffer和Color buffer。原先IMR架构中对主存中color/depth buffer进行Read-Modify-Write的操作变成直接在GPU中的高速内存操作，减少了最影响性能的系统内存传输的开销。</p><p>虽然TBR减少了IMR的带宽开销，但是依然没有解决overdraw的问题。</p><h3 id="TBDR"><a href="#TBDR" class="headerlink" title="TBDR"></a>TBDR</h3><p>PowerVR的渲染架构 Tile Based Deferred Rendering(TBDR)</p><p>数据从内存到GPU之间的传输是最大的性能消耗，powerVR架构的TBDR，on-chip buffer都为了该目标而优化。</p><p>TBDR 架构关注于在渲染管线中尽可能移除冗余的操作与计算，最小化内存带宽和能耗同时提升管线处理的吞吐量。</p><p><img src="/images/pvr/69ec7ef0.png" alt="TBDR Pipeline"></p><p>TBDR将每个Tiler的渲染过程拆分为两个步骤，一个是Hidden Surface Removal(HSR)和 deferred pixel shading。</p><p>TBDR会尽可能地延迟pixel shading的时间，直到所有光栅化后的fragment完成了DepthTest和HSR。对于一个场景中全是不透明几何图元的渲染画面来说。每一个光栅化完的fragment patch会经过HSR和Depth test，在所有triangle完成了raster之后，最后留下来的fragment会留下来执行pixel shading。也就是在这种情况下tile中的每一个像素只执行一次pixel shader。</p><p>如果渲染流程中有alpha test/blend/pixel depth write，就会阻断deferred shading，因为这个时候需要执行shading，才能正确进行后续fragment的计算。</p><ul><li>Alpha Test需要执行shading 算出当前fragment的alpha，判断该fragment是否被丢弃。</li><li>Alpha Blend 需要读取framebuffer中当前像素之前的颜色。</li><li>Pixel Depth write会影响到后续fragment的HSR与Depth test。</li></ul><p>这三种情况下Pixel Depth Write，因为会影响到后续fragment HSR/Depth，所以这个时候一定要执行该像素的shading，打乱了原先deferred的流程。具体要看GPU实现时时把整个HSR步骤积累的fragment都shading掉还是只把当前fragment shading掉。</p><p>而对于AlphaBlend来说，它并不一定要打断deferred shading。<br>遇到blending的fragment，可以把该fragment像素位置的所有fragment按顺序保留在列表中，等到shading时按顺序计算blend。<br>但这样就会增加pixel shading的次数。具体的实现还是要参照GPU的实现方式，由于使用TBR，Blend的开销相对比IMR还是降低了很多。</p><p>Alpha-Test的情况是和Pixel Depth Write类似，由于Alpha Test失败fragment会被丢弃，如果其开启了DepthWrite，那么就一定要执行shading。因为alpha-test会影响后续fragment的HSR/Z-Test的流程。如果没有开启depth Write，也可以和Blend一样保留后续所有fragment的方式来延迟shading。但是这个时候后续该位置的fragment patch都是不能被移出shading列表的，延迟shading也没有意义了。</p><h2 id="关于PowerVR-架构"><a href="#关于PowerVR-架构" class="headerlink" title="关于PowerVR 架构"></a>关于PowerVR 架构</h2><p><strong>Vector处理单元</strong></p><p>高效计算单元，同时计算3到4个元素。如果一个计算的值小于4个，那么其他的计算会被浪费。只对一个元素进行计算时，效率会降低到25%，造成计算和电能的浪费，可以通过合并vector来优化。</p><p><strong>Scalar处理单元</strong></p><p>标量计算单元更加灵活，不需要填充其他的位宽数据。每一个硬件tick比起非向量化优化的代码能处理更多有效的数据值。</p><h3 id="Verte-Processing-Tiler"><a href="#Verte-Processing-Tiler" class="headerlink" title="Verte Processing (Tiler)"></a>Verte Processing (Tiler)</h3><p>Tile Accelerator(TA)计算每个transform后的图元属于哪个tile。<br>计算完后，per-tile队列会更新。变换后的几何体和tile list会被储存在Parameter Buffer(PB)中。PB被储存在系统内存中。</p><h3 id="Per-Tile-Rasterization-Render"><a href="#Per-Tile-Rasterization-Render" class="headerlink" title="Per-Tile Rasterization (Render)"></a>Per-Tile Rasterization (Render)</h3><p>Image Sythesis Processor(ISP)获取当前tile的primitive数据，进行HSR，同时进行Z-Test和Stencil Test。ISP只处理ScreenSpace Position，和vertex data。</p><p>接下来是Texture and Shading Processor (TSP)，处理fragment shaders和visible pixels。当Tile的渲染结束之后，color data会被写回到主存中的framebuffer中。直到所有的tile都完成渲染后，整个frameBuffer就完成了。</p><h3 id="PowerVR-Shader-Engine"><a href="#PowerVR-Shader-Engine" class="headerlink" title="PowerVR Shader Engine"></a>PowerVR Shader Engine</h3><p>massive multi-threaded and multi-tasking approah.</p><h3 id="HSR-Efficiency"><a href="#HSR-Efficiency" class="headerlink" title="HSR Efficiency"></a>HSR Efficiency</h3><p>Early-Z testing 需要按从前往后顺序提交opaque对象的draw call，需要进行排序会有额外的overhead。当物体有intersection时，Eearly-Z testing并不能移除所有的overdraw，同时对draw call进行排序可能会造成pipeline 状态改变产生的overhead。<br>PowerVR 的HSR尽可能减少了fragment shading的数量。</p><h2 id="性能优化建议"><a href="#性能优化建议" class="headerlink" title="性能优化建议"></a>性能优化建议</h2><h3 id="对drawcall进行排序"><a href="#对drawcall进行排序" class="headerlink" title="对drawcall进行排序"></a>对drawcall进行排序</h3><p>对于TBDR架构来说，所有的drawcall 按照 opaque - alpha-tested - blended进行排序会最大程度利用HSR减少overdraw。对于有blend的pixel来说，后续所有相同位置的pixel都需要进行pixel shading，而alpha-test在完成后的像素还是可以继续进行HSR的优化。所以比先blend提交alpha-test可以尽可能减少overdraw。</p><h3 id="始终进行Clear操作"><a href="#始终进行Clear操作" class="headerlink" title="始终进行Clear操作"></a>始终进行Clear操作</h3><p>在IMR架构中，进行Clear操作需要对fragment buffer每个像素设置一遍值。如果确认画面会被完全重绘覆盖的情况下，不进行Clear操作会有减少这部分的性能开销。而在移动平台的GPU上并不是这样，由于移动平台为了减少内存与GPU间的带宽消耗，frameBuffer是分块存在on-chip memory中的。在整个渲染过程结束后将所有的tiled framebuffer 拷贝到主存中的framebuffer中。如果不进行clear，而在上一帧的buffer上重新绘制，需要在每个tiled frameBuffer开始绘制之前从主存再同步到on-chip的内存中。这一部分会有很大的overhead。</p><h3 id="不要在每一帧开始绘制之后更新Buffer"><a href="#不要在每一帧开始绘制之后更新Buffer" class="headerlink" title="不要在每一帧开始绘制之后更新Buffer"></a>不要在每一帧开始绘制之后更新Buffer</h3><p>由于GPU绘制采用的是双缓冲绘制，当前帧提交的draw call会在下一帧进行绘制，而当前帧绘制上一帧提交的draw call。如果在帧中间更新buffer，而这个buffer在上一帧提交的drawcall中被使用，有可能当前帧更新的buffer正在GPU中渲染，而此时驱动层将复制一份buffer来进行数据的更新或者等待当前绘制命令完成再进行更新。这两种情况一种会造成驱动层的overhead，而另一种会造成CPU的阻塞。</p><h3 id="使用压缩贴图和Mipmapping"><a href="#使用压缩贴图和Mipmapping" class="headerlink" title="使用压缩贴图和Mipmapping"></a>使用压缩贴图和Mipmapping</h3><p>使用压缩的贴图格式会减少传输的带宽，从而提升性能。同时由于在TileBased架构下，部分按块压缩的贴图压缩格式可以和FrameBuffer的Tile进行匹配，其结构对于贴图缓存来说更加友好。</p><p>尽可能使用Mipmapping，首先使用mipmap，对于较远以及较小的贴图物体会有更好的抗锯齿效果，减少画面的闪烁以提升画面效果。其次使用在采样贴图时，对于不同大小的物体选用其大小相对应层级的贴图到对应的TextureCache能有效减少贴图缓存missing的几率以提升贴图采样的效率。同时由于有不同层级的贴图，会大量减少每次将贴图从内存复制到GPU的带宽消耗，同时使用Mipmap只会增加33%的内存消耗。</p><hr><p>Reference </p><p><a href="https://www.imgtec.com/developers/downloads/download-info/powervr-hardware-architecture-overview/" target="_blank" rel="noopener">powervr-hardware-architecture-overview</a></p><p><a href="https://www.imgtec.com/developers/downloads/download-info/powervr-performance-recommendations-the-golden-rules/" target="_blank" rel="noopener">powervr-performance-recommendations-the-golden-rules</a></p><p><a href="https://developer.apple.com/documentation/metal/mtldevice/ios_and_tvos_devices/about_gpu_family_4" target="_blank" rel="noopener">Apple Development Document-About GPU Family 4</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> PowerVR </tag>
            
            <tag> GPU </tag>
            
            <tag> Architecture </tag>
            
            <tag> Optimization </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TS/JS中实现对象属性的双向绑定Two-way Binding in Javascript</title>
      <link href="/2018/09/13/js-two-way-binding/"/>
      <url>/2018/09/13/js-two-way-binding/</url>
      
        <content type="html"><![CDATA[<ul><li>属性绑定</li><li>Object.obseve 与Proxy</li><li>实现Bind,BindTwoWay</li></ul><h2 id="属性绑定"><a href="#属性绑定" class="headerlink" title="属性绑定"></a>属性绑定</h2><p>在web应用中，binding是一件常见的功能。使用MVC模式的web应用中，View层的DOM Object的属性通常需要和Model中的进行同步。在Angular/Vue/React中都有这种机制，如在Angular中使用<code>[ngModel]</code>。</p><p>Property绑定有两种，One-Way Binding与Two-Way Binding，通常在实现Binding的时候都是用Event机制，由于一个Object的Property可能与其他的对象进行任意多次单向绑定或者双向绑定。使用Event机制将所有的绑定callback储存在一个ListenList中，当属性变化时再遍历调用Emitb便于扩展。如果不适用Event机制进行构建时，就需要使用闭包将原先Property的setter包裹起来，每绑定一次就需要将原先的setter方法包裹一次，会造成较大的overhead。</p><p>在编写UI库<a href="https://github.com/soyemi/RUI.js" target="_blank" rel="noopener">RUI.js</a>时，UI布局LayoutEngine在布局流更新时需要处理一些特殊的布局规则，例如<code>width=50%</code>。在FlexBox布局容器中我们可以使用Flex进行替代，但是在非Flex容器中，就需要属性绑定来完成。</p><h2 id="Object-obseve-与-Proxy"><a href="#Object-obseve-与-Proxy" class="headerlink" title="Object.obseve() 与 Proxy"></a>Object.obseve() 与 Proxy</h2><p>绑定的方法的定义如下</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Bind(tar:<span class="built_in">Object</span>,property:<span class="built_in">String</span>,callback:<span class="function">(<span class="params">value:<span class="built_in">any</span></span>)=&gt;</span><span class="built_in">void</span>);</span><br></pre></td></tr></table></figure><p>其中</p><ul><li>tar为被监听的对象</li><li>property为被监听的属性名称</li><li>callback为对象属性变化后的回调</li></ul><p><strong>Object.obseve()</strong></p><p>JS提供过一个<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/observe" target="_blank" rel="noopener">Object.observe()</a>，用于异步监听一个对象的更改，可以实现我们的需求,对应使用observe的方法如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Object</span>.observe(tar,<span class="function"><span class="keyword">function</span>(<span class="params">changes</span>)</span>&#123;</span><br><span class="line">  changes.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">change</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (change.name === property) &#123;</span><br><span class="line">      callback(change.object);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>但是由于这个方法已经被标记为废弃，所以不推荐使用。</p><p><strong>Proxy</strong></p><p>JS标准库中还提供了一个<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Proxy" target="_blank" rel="noopener">代理对象Proxy</a>，用于处理对象的基本行为的代理。</p><p>使用Proxy处理Binding的如下:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">tar = <span class="keyword">new</span> <span class="built_in">Proxy</span>(tar,&#123;</span><br><span class="line">  <span class="keyword">set</span>:function(obj,prop,value)&#123;</span><br><span class="line">    <span class="keyword">if</span>(prop === property)&#123;</span><br><span class="line">      callback(value);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>但是由于Proxy是在原有对象上创建出一个代理对象，如果我们需要对一个已有对象进行绑定的操作，我们就需要对所有该对象的引用处替换为当前的Proxy对象。这样对于一个对象有多次属性绑定或有多次引用是就不适用。</p><h2 id="实现自定义的Bind-BindTwoWay"><a href="#实现自定义的Bind-BindTwoWay" class="headerlink" title="实现自定义的Bind,BindTwoWay"></a>实现自定义的Bind,BindTwoWay</h2><p>对于绑定，我们需要监听对象的setter方法，当对象值改变时，调用所有的callback方法。对于一个javascript object的property P。如果该对象的property没有声明该属性P的getter和setter，在Bind的方法中定义P的setter和getter，在setter中调用所有注册的binding callback。如果该property已经声明了属性P的getter和setter，需要覆盖原始P属性的getter和setter，在新的setter中调用原先的setter，同时调用所有注册的binding callback。</p><p>首先我们定义用于储存binding callback的Property</p><p>对于<code>Object.p</code>,我们储存callback function在<code>Object._bind_p</code>属性中。<code>_bind_p</code>的类型为<code>((v:any)=&gt;void)[]</code>;</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">BIND_EMITTER</span>(<span class="params">p:<span class="built_in">string</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'_bind_'</span> + p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">BindFunc</span>(<span class="params">tar:object,property:<span class="built_in">string</span>,f:(v:<span class="built_in">any</span>)=&gt;<span class="built_in">void</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> property_emit = BIND_EMITTER(property);</span><br><span class="line">    <span class="keyword">if</span>(tar.hasOwnProperty(property_emit))&#123;</span><br><span class="line">        tar[property_emit].push(f);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        BindSetup(tar,property);</span><br><span class="line">        tar[property_emit].push(f);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>BindSetup</code> 方法初始化上文所说的setter和getter，每一个需要被绑定的对象，只需要初始化一次，对于该对象属性上的多次绑定，只需要在<code>_bind_p</code>中添加多个callback方法。</p><p>使用<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty" target="_blank" rel="noopener">Object.defineProperty</a>Wrap属性的setter。</p><p>使用<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyDescriptor" target="_blank" rel="noopener">Object.getOwnPropertyDescriptor</a>获取当前Property的getter与setter。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">BindSetup</span>(<span class="params">tar: object, property: <span class="built_in">string</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> property_emit = BIND_EMITTER(property);</span><br><span class="line">    <span class="keyword">if</span>(tar[property_emit] != <span class="literal">null</span>) <span class="keyword">return</span>;</span><br><span class="line">    tar[property_emit] = [];</span><br><span class="line">    <span class="keyword">var</span> emitter = tar[property_emit];</span><br><span class="line">    <span class="keyword">var</span> descriptor = <span class="built_in">Object</span>.getOwnPropertyDescriptor(<span class="built_in">Object</span>.getPrototypeOf(tar), property);</span><br><span class="line">    <span class="keyword">if</span> (descriptor != <span class="literal">null</span> &amp;&amp; descriptor.set != <span class="literal">null</span> &amp;&amp; descriptor.get != <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> getter = descriptor.get;</span><br><span class="line">        <span class="keyword">var</span> setter = descriptor.set;</span><br><span class="line">        <span class="built_in">Object</span>.defineProperty(tar, property, &#123;</span><br><span class="line">            <span class="keyword">get</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> getter.call(<span class="keyword">this</span>);</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="keyword">set</span>: <span class="function"><span class="keyword">function</span> (<span class="params">v: <span class="built_in">any</span></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">let</span> curv = getter.call(<span class="keyword">this</span>);</span><br><span class="line">                <span class="keyword">if</span>(curv != v)&#123;</span><br><span class="line">                    setter.call(<span class="keyword">this</span>, v);</span><br><span class="line">                    emitter.forEach(<span class="function"><span class="params">f</span> =&gt;</span> f(v));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> val = tar[property];</span><br><span class="line">        <span class="keyword">var</span> property_bind = <span class="string">'_bind_'</span> + property+<span class="string">'_p'</span>;</span><br><span class="line">        tar[property_bind] = val;</span><br><span class="line">        <span class="built_in">Object</span>.defineProperty(tar, property, &#123;</span><br><span class="line">            <span class="keyword">get</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">this</span>[property_bind];</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="keyword">set</span>: <span class="function"><span class="keyword">function</span> (<span class="params">v: <span class="built_in">any</span></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">let</span> curv = <span class="keyword">this</span>[property_bind];</span><br><span class="line">                <span class="keyword">if</span>(curv != v)&#123;</span><br><span class="line">                    <span class="keyword">this</span>[property_bind] = v;</span><br><span class="line">                    emitter.forEach(<span class="function"><span class="params">f</span> =&gt;</span> f(v));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对于一个Object，如果其property没有定义getter与setter，需要将原先的property访问值储存在其他property中，上面的实现储存在新的属性<code>_bind_[property]_p</code>中。</p><p><strong>Two-Way Binding</strong></p><p>使用<code>BindFunc</code>实现单向绑定后，可以很容易实现双向绑定。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">BindTwoWay</span>(<span class="params">property:<span class="built_in">string</span>,tar1:object,tar2:object</span>)</span>&#123;</span><br><span class="line">    BindFunc(tar1,property,<span class="function">(<span class="params">v</span>)=&gt;</span>tar2[property] =v);</span><br><span class="line">    BindFunc(tar2,property,<span class="function">(<span class="params">v</span>)=&gt;</span>tar1[property] =v);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>Full Code <a href="https://gist.github.com/soyemi/eb9604df3cbd29b24add4c0653f567bc" target="_blank" rel="noopener">Github Gist</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> javascript </tag>
            
            <tag> typescript </tag>
            
            <tag> two-way binding </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>透视投影矩阵推导The Perspective Projection Matrix Derivation</title>
      <link href="/2018/09/09/the-perspective-projection-matrix-derivation/"/>
      <url>/2018/09/09/the-perspective-projection-matrix-derivation/</url>
      
        <content type="html"><![CDATA[<ul><li>Part1 OpenGL透视投影矩阵推导</li><li><a href="/2021/01/24/the-perspective-projection-matrix-derivation-part2">Part2 DirectX透视投影矩阵推导</a></li></ul><hr><p>透视投影矩阵的完全推导，使用了openGL的坐标系以及NDC，在DirectX3D下需要做一些调整。</p><ul><li>定义视锥体参数</li><li>推导透视投影矩阵</li></ul><p>对于点<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><mi>z</mi><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(x,y,z,1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>，经过投影变换乘以透视矩阵得到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>P</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">P&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>P</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">P&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>位于Normalized Device Coordinates(NDC)中。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>M</mi><mrow><mi>p</mi><mi>r</mi><mi>o</mi><mi>j</mi></mrow></msub><mi>P</mi><mo>=</mo><msup><mi>P</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">M_{proj}P = P&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">p</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.801892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>P</mi><mi>x</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo>∈</mo><mo stretchy="false">[</mo><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">P&#x27;_{x} \in [-1,1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.048892em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8018919999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">−</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>P</mi><mi>y</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo>∈</mo><mo stretchy="false">[</mo><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">P&#x27;_{y} \in [-1,1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.185em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-2.4530000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">−</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>P</mi><mi>z</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo>∈</mo><mo stretchy="false">[</mo><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">P&#x27;_{z} \in [-1,1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.048892em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8018919999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">−</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span></span></p><p>投影矩阵将ViewFrustum中的点转换到NDC中，我们可以根据视锥中的点在透视投影变换后的位置推导出整个透视投影矩阵<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>M</mi><mrow><mi>p</mi><mi>r</mi><mi>o</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">M_{proj}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">p</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>。</p><h2 id="视锥体参数"><a href="#视锥体参数" class="headerlink" title="视锥体参数"></a>视锥体参数</h2><p><strong>Near Plane 与 Far Plane</strong></p><p>Camera矩阵将世界坐标移动到相机的位置，同时视锥体朝向-Z方向。视锥体内被两个面截取为一个Four prism，通过透视投影矩阵的变化转化为一个边长单位为2的立方体。<br>对于视锥体来说有多个属性。近裁剪屏幕NearPlane，和远裁剪屏幕FarPlane。这两个平面距离相机的距离为n和f,在坐标系中的Z轴上值为-n与-f。</p><p><strong>Aspect Ratio 及 Viewport</strong></p><p>同时视锥体还有一个近平面的宽高，通常情况下，近平面即viewport的大小。透视投影后在NDC的宽高比是1：1，屏幕的aspect ratio会在透视投影后丢失。所以viewport的宽高与FrameBuffer的大小无关，只要在透视投影矩阵中正确设置了ViewPort的大小，渲染时会被按照比例压缩到整个FrameBuffer的贴图中，最后显示时以ViewPort的宽高比显示整个FrameBuffer就是正确的。</p><p><strong>Field of View</strong></p><p>在Camera的参数中经常有一个参数Field Of View(FOV)。FoV为视锥垂直界面的夹角。如果设定近平面的顶边的Y值为t，近平面距离为n，同时viewport是相对于坐标轴对称的情况下，则有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi><mi>a</mi><mi>n</mi><mo stretchy="false">(</mo><mfrac><mrow><mi>F</mi><mi>O</mi><mi>V</mi></mrow><mn>2</mn></mfrac><mo stretchy="false">)</mo><mo>=</mo><mfrac><mi>t</mi><mi>n</mi></mfrac></mrow><annotation encoding="application/x-tex">tan(\frac{FOV}{2})= \frac{t}{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mord mathdefault">t</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">O</span><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.169556em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.824556em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>。只要确定了viewport的大小和近平面距离n，就可以求出fov。</p><p>通常情况下ViewPort是左右对称上下对称的。即如果我们设近平面四个边的距中心的坐标值为，l、r、t、b，分别代表左右上下四个边，则viewport的高<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo>=</mo><mi>t</mi><mo>−</mo><mi>b</mi><mo>=</mo><mn>2</mn><mo>∗</mo><mi>t</mi></mrow><annotation encoding="application/x-tex">h = t - b = 2* t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">h</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69841em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span></span></span></span>，宽为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mo>=</mo><mi>r</mi><mo>−</mo><mi>b</mi><mo>=</mo><mn>2</mn><mo>∗</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">w = r - b = 2 * b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span>。viewport也可能左右不对称的情况，即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mi>l</mi><mi mathvariant="normal">∣</mi><mo mathvariant="normal">≠</mo><mi mathvariant="normal">∣</mi><mi>r</mi><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">|l| \ne |r|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord">∣</span></span></span></span>，或上下不对称<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mi>t</mi><mi mathvariant="normal">∣</mi><mo mathvariant="normal">≠</mo><mi mathvariant="normal">∣</mi><mi>b</mi><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">|t| \ne |b|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathdefault">t</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathdefault">b</span><span class="mord">∣</span></span></span></span>。不过对于大部分游戏或3D程序来说都是对称的。通用的透视投影矩阵考虑到了不对称的情况，所以对应的矩阵会相对复杂一些。</p><h2 id="推导投影矩阵"><a href="#推导投影矩阵" class="headerlink" title="推导投影矩阵"></a>推导投影矩阵</h2><p>设点<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><mi>z</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(x,y,z)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span></span></span></span> 为视锥体内部的一点，根据三角形相似比，其在近平面的投影点为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>P</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><mo>−</mo><mfrac><mi>n</mi><mi>z</mi></mfrac><mi>x</mi><mo separator="true">,</mo><mo>−</mo><mfrac><mi>n</mi><mi>z</mi></mfrac><mi>y</mi><mo separator="true">,</mo><mi>f</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P&#x27;(-\frac{n}{z}x,-\frac{n}{z}y,f(z))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.096892em;vertical-align:-0.345em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span>，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(z)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span></span></span></span>为关于z的线性函数。由于在三维图形学中，使用齐次坐标来表示点与向量进行计算，同时投影矩阵为四阶矩阵。所以P点坐标表示为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><mi>z</mi><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(x,y,z,1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>P</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">P&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>点的齐次坐标为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>P</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><mo>−</mo><mfrac><mi>n</mi><mi>z</mi></mfrac><mi>x</mi><mo separator="true">,</mo><mo>−</mo><mfrac><mi>n</mi><mi>z</mi></mfrac><mi>y</mi><mo separator="true">,</mo><mi>f</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P&#x27;(-\frac{n}{z}x,-\frac{n}{z}y,f(z),1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.096892em;vertical-align:-0.345em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>。</p><p>渲染管线在计算完VertexShader后会进行光栅化，在光栅化是需要根据点的z值进行Z-Test，同时<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo>∈</mo><mo stretchy="false">[</mo><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">f(z) \in [-1,1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">−</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo>∝</mo><mo>−</mo><mi>z</mi></mrow><annotation encoding="application/x-tex">f(z) \propto -z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∝</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span></span>。由于在顶点着色器返回的顶点位置，渲染管线在进行光栅化裁剪与剔除的步骤前会对坐标进行齐次化，也就是<code>gl_Position</code>或者<code>sv_position</code>会被齐次化。在着色器shader返回的坐标中并不需要其z值一定1，只要满足其坐标在齐次化后还保持在对应的NDC中。<br>所以透视投影矩阵计算出的坐标可以是齐次化前的坐标。根据上面推导的坐标:<br><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>P</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><mo>−</mo><mfrac><mi>n</mi><mi>z</mi></mfrac><mi>x</mi><mo separator="true">,</mo><mo>−</mo><mfrac><mi>n</mi><mi>z</mi></mfrac><mi>y</mi><mo separator="true">,</mo><mi>f</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P&#x27;(-\frac{n}{z}x,-\frac{n}{z}y,f(z),1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.7935600000000003em;vertical-align:-0.686em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10756em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10756em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>P</mi><mi>x</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup></mrow><annotation encoding="application/x-tex">P&#x27;<em>{x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.998892em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4530000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span> 和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>P</mi><mi>y</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup></mrow><annotation encoding="application/x-tex">P&#x27;</em>{y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.135em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4530000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span></span></span></span>都带有-z的系数，并不是关于x，y,z的线性函数。所以不可能通过矩阵变化计算出来，我们必须对其进行齐次变换。<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>P</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">P&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>所有坐标都乘上-z得:<br><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>P</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><mi>n</mi><mi>x</mi><mo separator="true">,</mo><mi>n</mi><mi>y</mi><mo separator="true">,</mo><mo>−</mo><mi>z</mi><mi>f</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mo>−</mo><mi>z</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P&#x27;(nx,ny,-zf(z),-z)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.051892em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">−</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">−</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span></span></span></span></span></p><p>由此我们可以推算出投影矩阵的第四行。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mo stretchy="false" lspace="0em" rspace="0em">?</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo stretchy="false" lspace="0em" rspace="0em">?</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo stretchy="false" lspace="0em" rspace="0em">?</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo stretchy="false" lspace="0em" rspace="0em">?</mo></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mo stretchy="false" lspace="0em" rspace="0em">?</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo stretchy="false" lspace="0em" rspace="0em">?</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo stretchy="false" lspace="0em" rspace="0em">?</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo stretchy="false" lspace="0em" rspace="0em">?</mo></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mo stretchy="false" lspace="0em" rspace="0em">?</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo stretchy="false" lspace="0em" rspace="0em">?</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo stretchy="false" lspace="0em" rspace="0em">?</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo stretchy="false" lspace="0em" rspace="0em">?</mo></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>x</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>y</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>z</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>n</mi><mi>x</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>n</mi><mi>y</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mi>z</mi></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\begin{bmatrix}<br>? &amp; ? &amp; ? &amp; ? \<br>? &amp; ? &amp; ? &amp; ? \<br>? &amp; ? &amp; ? &amp; ? \<br>0 &amp; 0 &amp; -1 &amp; 0<br>\end{bmatrix}<br>\begin{bmatrix}<br>x \<br>y \<br>z \<br>1<br>\end{bmatrix}<br>=<br>\begin{bmatrix}<br>nx \<br>ny \<br>g(z)\<br>-z<br>\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.80303em;vertical-align:-2.15003em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mclose">?</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mclose">?</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mclose">?</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mclose">?</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mclose">?</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mclose">?</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mclose">?</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mclose">?</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mclose">?</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mclose">?</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mclose">?</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mclose">?</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:4.80303em;vertical-align:-2.15003em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="mord mathdefault">x</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mi>z</mi><mi>f</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g(z) = -zf(z)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">−</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span></span></span></span><br>由于g(z)是矩阵变换的结果，一定是关于z的线性函数，设<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><mi>a</mi><mi>z</mi><mo>+</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">g(z)=az+b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span> 其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span></span></span></span>,<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span>为常数。则矩阵可以变为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mo stretchy="false" lspace="0em" rspace="0em">?</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo stretchy="false" lspace="0em" rspace="0em">?</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo stretchy="false" lspace="0em" rspace="0em">?</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo stretchy="false" lspace="0em" rspace="0em">?</mo></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mo stretchy="false" lspace="0em" rspace="0em">?</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo stretchy="false" lspace="0em" rspace="0em">?</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo stretchy="false" lspace="0em" rspace="0em">?</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo stretchy="false" lspace="0em" rspace="0em">?</mo></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>a</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>b</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>x</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>y</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>z</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>n</mi><mi>x</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>n</mi><mi>y</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>a</mi><mi>z</mi><mo>+</mo><mi>b</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mi>z</mi></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\begin{bmatrix}<br>? &amp; ? &amp; ? &amp; ? \<br>? &amp; ? &amp; ? &amp; ? \<br>0 &amp; 0 &amp; a &amp; b \<br>0 &amp; 0 &amp; -1 &amp; 0<br>\end{bmatrix}<br>\begin{bmatrix}<br>x \<br>y \<br>z \<br>1<br>\end{bmatrix}<br>=<br>\begin{bmatrix}<br>nx \<br>ny \<br>az+b\<br>-z<br>\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.80303em;vertical-align:-2.15003em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mclose">?</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mclose">?</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mclose">?</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mclose">?</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mclose">?</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mclose">?</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">a</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mclose">?</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mclose">?</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">b</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:4.80303em;vertical-align:-2.15003em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="mord mathdefault">x</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">b</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><hr><p>由于经过投影变换后的有效坐标点都在NDC中，我们可以取特殊点推算其参数。</p><p>设点<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>l</mi><mo separator="true">,</mo><mi>b</mi><mo separator="true">,</mo><mo>−</mo><mi>n</mi><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L(l,b,-n,1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">−</span><span class="mord mathdefault">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>为近平面的左下角，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mo stretchy="false">(</mo><mi>r</mi><mo separator="true">,</mo><mi>t</mi><mo separator="true">,</mo><mo>−</mo><mi>f</mi><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">R(r,t,-f,1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">−</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>为远平面的右上角的点。其经过透视投影变换后的点为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mo>→</mo><mo stretchy="false">(</mo><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L \rightarrow (-1,-1,-1,1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">−</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">−</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mo>→</mo><mo stretchy="false">(</mo><mn>1</mn><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">R \rightarrow (1,1,1,1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>。</p><p>代入上面的向量<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>n</mi><mi>x</mi><mo separator="true">,</mo><mi>n</mi><mi>y</mi><mo separator="true">,</mo><mi>a</mi><mi>z</mi><mo>+</mo><mi>b</mi><mo separator="true">,</mo><mo>−</mo><mi>z</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(nx,ny,az+b,-z)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">−</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span></span></span></span>得<br><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>L</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><mi>n</mi><mi>l</mi><mo separator="true">,</mo><mi>n</mi><mi>b</mi><mo separator="true">,</mo><mo>−</mo><mi>a</mi><mi>n</mi><mo>+</mo><mi>b</mi><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">)</mo><mo>↔</mo><mo stretchy="false">(</mo><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo><mo>↔</mo><mo stretchy="false">(</mo><mo>−</mo><mi>n</mi><mo separator="true">,</mo><mo>−</mo><mi>n</mi><mo separator="true">,</mo><mo>−</mo><mi>n</mi><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L&#x27;(nl,nb,-an+b,n) \leftrightarrow (-1,-1,-1,1) \leftrightarrow (-n,-n,-n,n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.051892em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mord mathdefault">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">−</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">↔</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">−</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">−</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">↔</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord mathdefault">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">−</span><span class="mord mathdefault">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">−</span><span class="mord mathdefault">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span></span><br><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>R</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><mi>n</mi><mi>r</mi><mo separator="true">,</mo><mi>n</mi><mi>t</mi><mo separator="true">,</mo><mo>−</mo><mi>a</mi><mi>f</mi><mo>+</mo><mi>b</mi><mo separator="true">,</mo><mi>f</mi><mo stretchy="false">)</mo><mo>↔</mo><mo stretchy="false">(</mo><mn>1</mn><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo><mo>↔</mo><mo stretchy="false">(</mo><mi>f</mi><mo separator="true">,</mo><mi>f</mi><mo separator="true">,</mo><mi>f</mi><mo separator="true">,</mo><mi>f</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">R&#x27;(nr,nt,-af+b,f) \leftrightarrow (1,1,1,1) \leftrightarrow (f,f,f,f)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.051892em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">−</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">↔</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">↔</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mclose">)</span></span></span></span></span></p><p>取z值的等式<br><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><mi>a</mi><mi>n</mi><mo>+</mo><mi>b</mi><mo>=</mo><mo>−</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">-an+b = -n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord mathdefault">n</span></span></span></span></span><br><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><mi>a</mi><mi>f</mi><mo>+</mo><mi>b</mi><mo>=</mo><mi>f</mi></mrow><annotation encoding="application/x-tex">-af+b = f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">−</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span></span></span></p><p>联立求解得：<br><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo>=</mo><mfrac><mrow><mi>n</mi><mo>+</mo><mi>f</mi></mrow><mrow><mi>n</mi><mo>−</mo><mi>f</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">a= \frac{n+f}{n-f}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.25188em;vertical-align:-0.8804400000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714399999999998em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span><br><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi><mo>=</mo><mfrac><mrow><mn>2</mn><mi>n</mi><mi>f</mi></mrow><mrow><mi>n</mi><mo>−</mo><mi>f</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">b = \frac{2nf}{n-f}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.25188em;vertical-align:-0.8804400000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714399999999998em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>带入矩阵得：<br><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mo stretchy="false" lspace="0em" rspace="0em">?</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo stretchy="false" lspace="0em" rspace="0em">?</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo stretchy="false" lspace="0em" rspace="0em">?</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo stretchy="false" lspace="0em" rspace="0em">?</mo></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mo stretchy="false" lspace="0em" rspace="0em">?</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo stretchy="false" lspace="0em" rspace="0em">?</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo stretchy="false" lspace="0em" rspace="0em">?</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo stretchy="false" lspace="0em" rspace="0em">?</mo></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi>n</mi><mo>+</mo><mi>f</mi></mrow><mrow><mi>n</mi><mo>−</mo><mi>f</mi></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mn>2</mn><mi>n</mi><mi>f</mi></mrow><mrow><mi>n</mi><mo>−</mo><mi>f</mi></mrow></mfrac></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>x</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>y</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>z</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>n</mi><mi>x</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>n</mi><mi>y</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mi>f</mi><mo stretchy="false">)</mo><mi>z</mi><mo>+</mo><mn>2</mn><mi>n</mi><mi>f</mi></mrow><mrow><mi>n</mi><mo>−</mo><mi>f</mi></mrow></mfrac></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mi>z</mi></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\begin{bmatrix}<br>? &amp; ? &amp; ? &amp; ? \<br>? &amp; ? &amp; ? &amp; ? \<br>0 &amp; 0 &amp; \frac{n+f}{n-f} &amp; \frac{2nf}{n-f} \<br>0 &amp; 0 &amp; -1 &amp; 0<br>\end{bmatrix}<br>\begin{bmatrix}<br>x \<br>y \<br>z \<br>1<br>\end{bmatrix}<br>=<br>\begin{bmatrix}<br>nx \<br>ny \<br>\frac{(n+f)z+ 2nf}{n-f}\<br>-z<br>\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.013324em;vertical-align:-2.256662em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.756662em;"><span style="top:-4.916662em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mclose">?</span></span></span><span style="top:-3.7166619999999995em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mclose">?</span></span></span><span style="top:-2.4244459999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.1033380000000002em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.256662em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.756662em;"><span style="top:-4.916662em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mclose">?</span></span></span><span style="top:-3.7166619999999995em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mclose">?</span></span></span><span style="top:-2.4244459999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.1033380000000002em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.256662em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.756662em;"><span style="top:-4.916662em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mclose">?</span></span></span><span style="top:-3.7166619999999995em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mclose">?</span></span></span><span style="top:-2.4244459999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322159999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.1033380000000002em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.256662em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.756662em;"><span style="top:-4.916662em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mclose">?</span></span></span><span style="top:-3.7166619999999995em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mclose">?</span></span></span><span style="top:-2.4244459999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322159999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight">n</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.1033380000000002em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.256662em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:5.091108em;vertical-align:-2.295554em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.795554em;"><span style="top:-4.965554em;"><span class="pstrut" style="height:3.01em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="mord mathdefault">x</span></span></span><span style="top:-3.7655539999999994em;"><span class="pstrut" style="height:3.01em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-2.3955539999999993em;"><span class="pstrut" style="height:3.01em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">n</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mclose mtight">)</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="mbin mtight">+</span><span class="mord mtight">2</span><span class="mord mathdefault mtight">n</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.0744459999999998em;"><span class="pstrut" style="height:3.01em;"></span><span class="mord"><span class="mord">−</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.295554em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>这样我们就求出<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span>的值。</p><hr><h3 id="推导矩阵前两行"><a href="#推导矩阵前两行" class="headerlink" title="推导矩阵前两行"></a>推导矩阵前两行</h3><p>首先我们很自然想到，取矩阵前两行为： </p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>n</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>n</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi>n</mi><mo>+</mo><mi>f</mi></mrow><mrow><mi>n</mi><mo>−</mo><mi>f</mi></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mn>2</mn><mi>n</mi><mi>f</mi></mrow><mrow><mi>n</mi><mo>−</mo><mi>f</mi></mrow></mfrac></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>x</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>y</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>z</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>n</mi><mi>x</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>n</mi><mi>y</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mi>f</mi><mo stretchy="false">)</mo><mi>z</mi><mo>+</mo><mn>2</mn><mi>n</mi><mi>f</mi></mrow><mrow><mi>n</mi><mo>−</mo><mi>f</mi></mrow></mfrac></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mi>z</mi></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\begin{bmatrix}<br>n &amp; 0 &amp; 0 &amp; 0 \<br>0 &amp; n &amp; 0 &amp; 0 \<br>0 &amp; 0 &amp; \frac{n+f}{n-f} &amp; \frac{2nf}{n-f} \<br>0 &amp; 0 &amp; -1 &amp; 0<br>\end{bmatrix}<br>\begin{bmatrix}<br>x \<br>y \<br>z \<br>1<br>\end{bmatrix}<br>=<br>\begin{bmatrix}<br>nx \<br>ny \<br>\frac{(n+f)z+ 2nf}{n-f}\<br>-z<br>\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.013324em;vertical-align:-2.256662em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.756662em;"><span style="top:-4.916662em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span></span></span><span style="top:-3.7166619999999995em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4244459999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.1033380000000002em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.256662em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.756662em;"><span style="top:-4.916662em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.7166619999999995em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span></span></span><span style="top:-2.4244459999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.1033380000000002em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.256662em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.756662em;"><span style="top:-4.916662em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.7166619999999995em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4244459999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322159999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.1033380000000002em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.256662em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.756662em;"><span style="top:-4.916662em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.7166619999999995em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4244459999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322159999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight">n</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.1033380000000002em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.256662em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:5.091108em;vertical-align:-2.295554em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.795554em;"><span style="top:-4.965554em;"><span class="pstrut" style="height:3.01em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="mord mathdefault">x</span></span></span><span style="top:-3.7655539999999994em;"><span class="pstrut" style="height:3.01em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-2.3955539999999993em;"><span class="pstrut" style="height:3.01em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">n</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mclose mtight">)</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="mbin mtight">+</span><span class="mord mtight">2</span><span class="mord mathdefault mtight">n</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.0744459999999998em;"><span class="pstrut" style="height:3.01em;"></span><span class="mord"><span class="mord">−</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.295554em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>这样矩阵计算就成立了，对于上面的L点与R点同时我们取x值的等式。<br><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mi>l</mi><mo>=</mo><mo>−</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">nl = -n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord mathdefault">n</span></span></span></span></span><br><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mi>r</mi><mo>=</mo><mi>f</mi></mrow><annotation encoding="application/x-tex">nr = f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span></span></span></p><p>这样推出<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mo>=</mo><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mi>r</mi><mo>=</mo><mfrac><mi>f</mi><mi>n</mi></mfrac></mrow><annotation encoding="application/x-tex">l=-1, r= \frac{f}{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">−</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.277216em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322159999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>，由于l、r为viewport参数是任意值，所以<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>M</mi><mrow><mi>p</mi><mi>r</mi><mi>o</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">M_{proj}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">p</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>第一行与第二行不能只有n这个参数。</p><p>设完整的矩阵为：<br><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>A</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>B</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>C</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>D</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>E</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>F</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>G</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>H</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi>n</mi><mo>+</mo><mi>f</mi></mrow><mrow><mi>n</mi><mo>−</mo><mi>f</mi></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mn>2</mn><mi>n</mi><mi>f</mi></mrow><mrow><mi>n</mi><mo>−</mo><mi>f</mi></mrow></mfrac></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><annotation encoding="application/x-tex">\begin{bmatrix}<br>A &amp; B &amp; C &amp; D \<br>E &amp; F &amp; G &amp; H \<br>0 &amp; 0 &amp; \frac{n+f}{n-f} &amp; \frac{2nf}{n-f} \<br>0 &amp; 0 &amp; -1 &amp; 0<br>\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.013324em;vertical-align:-2.256662em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.756662em;"><span style="top:-4.916662em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">A</span></span></span><span style="top:-3.7166619999999995em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span></span></span><span style="top:-2.4244459999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.1033380000000002em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.256662em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.756662em;"><span style="top:-4.916662em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span><span style="top:-3.7166619999999995em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span><span style="top:-2.4244459999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.1033380000000002em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.256662em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.756662em;"><span style="top:-4.916662em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span></span></span><span style="top:-3.7166619999999995em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">G</span></span></span><span style="top:-2.4244459999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322159999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.1033380000000002em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.256662em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.756662em;"><span style="top:-4.916662em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span></span></span><span style="top:-3.7166619999999995em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span></span></span><span style="top:-2.4244459999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322159999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight">n</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.1033380000000002em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.256662em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>对于视锥体内的点来说，如果两个点的x和z值都相同y值不同，而其投影到近投影平面的x坐标都相同<br>所以对于y的系数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">B=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span> 。</p><p>由于对任意的(x,y,z)都成立，则取<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><mn>0</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(0,y,0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mclose">)</span></span></span></span>时,对于<code>x</code>分量，我们有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi>x</mi><mo>+</mo><mi>C</mi><mi>z</mi><mo>+</mo><mi>D</mi><mo>=</mo><mi>D</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">Ax+Cz+D=D=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>得<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">D=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>。<br>同理 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mo>=</mo><mn>0</mn><mo separator="true">,</mo><mi>H</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">E=0,H=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span></p><p>化简矩阵：<br><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>A</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>C</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>F</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>G</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi>n</mi><mo>+</mo><mi>f</mi></mrow><mrow><mi>n</mi><mo>−</mo><mi>f</mi></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mn>2</mn><mi>n</mi><mi>f</mi></mrow><mrow><mi>n</mi><mo>−</mo><mi>f</mi></mrow></mfrac></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>x</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>y</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>z</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>A</mi><mi>x</mi><mo>+</mo><mi>C</mi><mi>z</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>F</mi><mi>x</mi><mo>+</mo><mi>G</mi><mi>z</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mi>f</mi><mo stretchy="false">)</mo><mi>z</mi><mo>+</mo><mn>2</mn><mi>n</mi><mi>f</mi></mrow><mrow><mi>n</mi><mo>−</mo><mi>f</mi></mrow></mfrac></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mi>z</mi></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\begin{bmatrix}<br>A &amp; 0 &amp; C &amp; 0 \<br>0 &amp; F &amp; G &amp; 0 \<br>0 &amp; 0 &amp; \frac{n+f}{n-f} &amp; \frac{2nf}{n-f} \<br>0 &amp; 0 &amp; -1 &amp; 0<br>\end{bmatrix}<br>\begin{bmatrix}<br>x \<br>y \<br>z \<br>1<br>\end{bmatrix}<br>=<br>\begin{bmatrix}<br>Ax+Cz \<br>Fx+Gz \<br>\frac{(n+f)z+ 2nf}{n-f}\<br>-z<br>\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.013324em;vertical-align:-2.256662em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.756662em;"><span style="top:-4.916662em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">A</span></span></span><span style="top:-3.7166619999999995em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4244459999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.1033380000000002em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.256662em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.756662em;"><span style="top:-4.916662em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.7166619999999995em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span><span style="top:-2.4244459999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.1033380000000002em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.256662em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.756662em;"><span style="top:-4.916662em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span></span></span><span style="top:-3.7166619999999995em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">G</span></span></span><span style="top:-2.4244459999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322159999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.1033380000000002em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.256662em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.756662em;"><span style="top:-4.916662em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.7166619999999995em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4244459999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322159999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight">n</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.1033380000000002em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.256662em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:5.091108em;vertical-align:-2.295554em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.795554em;"><span style="top:-4.965554em;"><span class="pstrut" style="height:3.01em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span><span style="top:-3.7655539999999994em;"><span class="pstrut" style="height:3.01em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span><span style="top:-2.3955539999999993em;"><span class="pstrut" style="height:3.01em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">n</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mclose mtight">)</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="mbin mtight">+</span><span class="mord mtight">2</span><span class="mord mathdefault mtight">n</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.0744459999999998em;"><span class="pstrut" style="height:3.01em;"></span><span class="mord"><span class="mord">−</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.295554em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>取点<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo stretchy="false">(</mo><mi>l</mi><mo separator="true">,</mo><mi>b</mi><mo separator="true">,</mo><mo>−</mo><mi>n</mi><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">S(l,b,-n,1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">−</span><span class="mord mathdefault">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>r</mi><mo separator="true">,</mo><mi>t</mi><mo separator="true">,</mo><mo>−</mo><mi>n</mi><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T(r,t,-n,1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">−</span><span class="mord mathdefault">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>。由于这两点分别在近平面的左端与右端，所以透视投影变换后在NDC中的x坐标为-1与1，由于我们经过了齐次化处以-z，所以两个点的x值为-n,n。<br>联立方程:<br><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi>l</mi><mo>−</mo><mi>C</mi><mi>n</mi><mo>=</mo><mo>−</mo><mi>n</mi><mo separator="true">,</mo><mi>A</mi><mi>r</mi><mo>−</mo><mi>C</mi><mi>n</mi><mo>=</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">Al-Cn = -n,Ar-Cn=n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">−</span><span class="mord mathdefault">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span></span><br>解得：<br><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>=</mo><mfrac><mrow><mn>2</mn><mi>n</mi></mrow><mrow><mi>r</mi><mo>−</mo><mi>l</mi></mrow></mfrac><mo separator="true">,</mo><mi>B</mi><mo>=</mo><mfrac><mrow><mi>r</mi><mo>+</mo><mi>l</mi></mrow><mrow><mi>r</mi><mo>−</mo><mi>l</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">A = \frac{2n}{r-l},B = \frac{r+l}{r-l}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.09077em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathdefault">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.14077em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span><br>同理推得：<br><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo>=</mo><mfrac><mrow><mn>2</mn><mi>n</mi></mrow><mrow><mi>t</mi><mo>−</mo><mi>b</mi></mrow></mfrac><mo separator="true">,</mo><mi>G</mi><mo>=</mo><mfrac><mrow><mi>t</mi><mo>+</mo><mi>b</mi></mrow><mrow><mi>t</mi><mo>−</mo><mi>b</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">F = \frac{2n}{t-b},G=\frac{t+b}{t-b}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.09077em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">b</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathdefault">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">G</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.14077em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">b</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>最终的投影矩阵为:<br><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mn>2</mn><mi>n</mi></mrow><mrow><mi>r</mi><mo>−</mo><mi>l</mi></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi>r</mi><mo>+</mo><mi>l</mi></mrow><mrow><mi>r</mi><mo>−</mo><mi>l</mi></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mn>2</mn><mi>n</mi></mrow><mrow><mi>t</mi><mo>−</mo><mi>b</mi></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi>t</mi><mo>+</mo><mi>b</mi></mrow><mrow><mi>t</mi><mo>−</mo><mi>b</mi></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi>n</mi><mo>+</mo><mi>f</mi></mrow><mrow><mi>n</mi><mo>−</mo><mi>f</mi></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mn>2</mn><mi>n</mi><mi>f</mi></mrow><mrow><mi>n</mi><mo>−</mo><mi>f</mi></mrow></mfrac></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>x</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>y</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>z</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mn>2</mn><mi>n</mi><mi>x</mi><mo>+</mo><mo stretchy="false">(</mo><mi>r</mi><mo>+</mo><mi>l</mi><mo stretchy="false">)</mo><mi>z</mi></mrow><mrow><mi>r</mi><mo>−</mo><mi>l</mi></mrow></mfrac></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mn>2</mn><mi>n</mi><mi>y</mi><mo>+</mo><mo stretchy="false">(</mo><mi>t</mi><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo><mi>z</mi></mrow><mrow><mi>t</mi><mo>−</mo><mi>b</mi></mrow></mfrac></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mi>f</mi><mo stretchy="false">)</mo><mi>z</mi><mo>+</mo><mn>2</mn><mi>n</mi><mi>f</mi></mrow><mrow><mi>n</mi><mo>−</mo><mi>f</mi></mrow></mfrac></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mi>z</mi></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>⇔</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mfrac><mrow><mn>2</mn><mi>n</mi><mi>x</mi></mrow><mrow><mo stretchy="false">(</mo><mi>r</mi><mo>−</mo><mi>l</mi><mo stretchy="false">)</mo><mi>z</mi></mrow></mfrac><mo>−</mo><mfrac><mrow><mi>r</mi><mo>+</mo><mi>l</mi></mrow><mrow><mi>r</mi><mo>−</mo><mi>l</mi></mrow></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mfrac><mrow><mn>2</mn><mi>n</mi><mi>y</mi></mrow><mrow><mo stretchy="false">(</mo><mi>t</mi><mo>−</mo><mi>b</mi><mo stretchy="false">)</mo><mi>z</mi></mrow></mfrac><mo>−</mo><mfrac><mrow><mi>t</mi><mo>+</mo><mi>b</mi></mrow><mrow><mi>t</mi><mo>−</mo><mi>b</mi></mrow></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mfrac><mrow><mi>n</mi><mo>+</mo><mi>f</mi></mrow><mrow><mi>n</mi><mo>−</mo><mi>f</mi></mrow></mfrac><mo>−</mo><mfrac><mrow><mn>2</mn><mi>n</mi><mi>f</mi></mrow><mrow><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mi>f</mi><mo stretchy="false">)</mo><mi>z</mi></mrow></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\begin{bmatrix}<br>\frac{2n}{r-l} &amp; 0 &amp; \frac{r+l}{r-l} &amp; 0 \<br>0 &amp; \frac{2n}{t-b} &amp; \frac{t+b}{t-b} &amp; 0 \<br>0 &amp; 0 &amp; \frac{n+f}{n-f} &amp; \frac{2nf}{n-f} \<br>0 &amp; 0 &amp; -1 &amp; 0<br>\end{bmatrix}<br>\begin{bmatrix}<br>x \<br>y \<br>z \<br>1<br>\end{bmatrix}<br>=<br>\begin{bmatrix}<br>\frac{2nx+(r+l)z}{r-l} \<br>\frac{2ny+(t+b)z}{t-b} \<br>\frac{(n+f)z+ 2nf}{n-f}\<br>-z<br>\end{bmatrix}<br>\Leftrightarrow<br>\begin{bmatrix}<br>-\frac{2nx}{(r-l)z}-\frac{r+l}{r-l} \<br>-\frac{2ny}{(t-b)z}-\frac{t+b}{t-b} \<br>-\frac{n+f}{n-f}- \frac{2nf}{(n-f)z}\<br>1<br>\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.180202em;vertical-align:-2.340101em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.840101em;"><span style="top:-4.959993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-3.6765540000000003em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.3410070000000003em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.019899em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.340101em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.840101em;"><span style="top:-4.959993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.6765540000000003em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">b</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.3410070000000003em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.019899em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.340101em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.840101em;"><span style="top:-4.959993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-3.6765540000000003em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">b</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.3410070000000003em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322159999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.019899em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.340101em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.840101em;"><span style="top:-4.959993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.6765540000000003em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.3410070000000003em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322159999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight">n</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.019899em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.340101em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:5.5177700000000005em;vertical-align:-2.508885em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.953995em;"><span style="top:-1.3499850000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.4999850000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.0959850000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.6919850000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.712975em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.953995em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4500349999999997em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.0088850000000003em;"><span style="top:-5.008884999999999em;"><span class="pstrut" style="height:3.01em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight">n</span><span class="mord mathdefault mtight">x</span><span class="mbin mtight">+</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mclose mtight">)</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-3.595554em;"><span class="pstrut" style="height:3.01em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">b</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight">n</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="mbin mtight">+</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">t</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight">b</span><span class="mclose mtight">)</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.1822229999999996em;"><span class="pstrut" style="height:3.01em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">n</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mclose mtight">)</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="mbin mtight">+</span><span class="mord mtight">2</span><span class="mord mathdefault mtight">n</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-0.8611150000000001em;"><span class="pstrut" style="height:3.01em;"></span><span class="mord"><span class="mord">−</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.508885em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.953995em;"><span style="top:-1.3499850000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.4999850000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.0959850000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.6919850000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.712975em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.953995em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4500349999999997em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⇔</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:5.4695399999999985em;vertical-align:-2.4847699999999993em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.953995em;"><span style="top:-1.3499850000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.4999850000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.0959850000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.6919850000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.712975em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.953995em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4500349999999997em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.9847699999999997em;"><span style="top:-5.104661999999999em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mclose mtight">)</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight">n</span><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-3.687446em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.897216em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">b</span><span class="mclose mtight">)</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight">n</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">b</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.2352300000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322159999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322159999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mclose mtight">)</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight">n</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-0.8752300000000008em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4847699999999993em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.953995em;"><span style="top:-1.3499850000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.4999850000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.0959850000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.6919850000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.712975em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.953995em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4500349999999997em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><h2 id="简化透视投影矩阵"><a href="#简化透视投影矩阵" class="headerlink" title="简化透视投影矩阵"></a>简化透视投影矩阵</h2><p>当viewport关于坐标轴对称时：<br><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mo>=</mo><mi>r</mi><mo>−</mo><mi>l</mi><mo>=</mo><mn>2</mn><mi>r</mi><mo>=</mo><mo>−</mo><mn>2</mn><mi>l</mi></mrow><annotation encoding="application/x-tex">w = r-l = 2r= -2l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span></span><br><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo>=</mo><mi>t</mi><mo>−</mo><mi>b</mi><mo>=</mo><mn>2</mn><mi>t</mi><mo>=</mo><mo>−</mo><mn>2</mn><mi>b</mi></mrow><annotation encoding="application/x-tex">h = t-b = 2t = -2b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">h</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69841em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">2</span><span class="mord mathdefault">b</span></span></span></span></span></p><p>化简投影矩阵得：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mn>2</mn><mi>n</mi></mrow><mi>w</mi></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mn>2</mn><mi>n</mi></mrow><mi>h</mi></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi>n</mi><mo>+</mo><mi>f</mi></mrow><mrow><mi>n</mi><mo>−</mo><mi>f</mi></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mn>2</mn><mi>n</mi><mi>f</mi></mrow><mrow><mi>n</mi><mo>−</mo><mi>f</mi></mrow></mfrac></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><annotation encoding="application/x-tex">\begin{bmatrix}<br>\frac{2n}{w} &amp; 0 &amp; 0 &amp; 0 \<br>0 &amp; \frac{2n}{h} &amp; 0 &amp; 0 \<br>0 &amp; 0 &amp; \frac{n+f}{n-f} &amp; \frac{2nf}{n-f} \<br>0 &amp; 0 &amp; -1 &amp; 0<br>\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.02354em;vertical-align:-2.26177em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.76177em;"><span style="top:-4.916662em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-3.7115539999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4193379999999998em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.0982300000000003em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.26177em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.76177em;"><span style="top:-4.916662em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.7115539999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.4193379999999998em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.0982300000000003em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.26177em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.76177em;"><span style="top:-4.916662em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.7115539999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4193379999999998em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322159999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.0982300000000003em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.26177em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.76177em;"><span style="top:-4.916662em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.7115539999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4193379999999998em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322159999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight">n</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.0982300000000003em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.26177em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>]]></content>
      
      
      
        <tags>
            
            <tag> linear algebra </tag>
            
            <tag> Math </tag>
            
            <tag> openGL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WebGL Tips</title>
      <link href="/2018/07/12/webgl-tips/"/>
      <url>/2018/07/12/webgl-tips/</url>
      
        <content type="html"><![CDATA[<h2 id="WebGL-notes"><a href="#WebGL-notes" class="headerlink" title="WebGL notes"></a>WebGL notes</h2><p>Khronos定制的WebGL specification，Chrome和Firefox在实现desktop的WEBGL时，开发了一个图形API库<a href="https://github.com/google/angle" target="_blank" rel="noopener">ANGLE</a>。ANGLE提供了webgl的API接口，在非原生openGL-es的平台上，通过其他图像API对WGL的API进行模拟和映射。</p><p>由于js是动态脚本语言同时非强类型，在js脚本对API的调用较为随意，而图形API的原始API是基于C/C++的。所以ANGLE在gl方法调用时为了确保每次API调用都不会使得底层使用的图像API crash，做了大量的验证。这部分overhead相对于原生的directX和openGL来说是比较大的。所以在desktop中调用webgl会有更多driver层的overhead。</p><p>同时对于desktop的WebGL和mobile的webgl来说，由于ANGLE做了一部分保护，部分API的行为方式在不同平台根据实现的差异上会有不同。例如在desktop chrome和iOS webview中，<code>gl.BindBuffer()</code>方法的buffer对象传入<code>undefined</code>是不会报错的，而在Android的微信tencent X5浏览器中就会直接报错。</p><h2 id="WebGL-insight-Tips"><a href="#WebGL-insight-Tips" class="headerlink" title="WebGL insight Tips"></a>WebGL insight Tips</h2><ol><li><a href="http://webglreport.com/" target="_blank" rel="noopener">WebGL Report</a> 可以查看浏览器的WebGL支持情况，尤其是在调试浏览器或设备相关的问题。</li><li>避免在渲染loop中进行对象内存分配，尽可能重用对象和数组，尽量避免使用<code>map</code>和<code>filter</code>等内置数据方法。每个新对象的内存分配会有一些GC相关的工作，在一些情况下GC会阻塞渲染循环造成几帧的卡顿。</li><li>在没有必要的情况下，不要使用alpha,depth,stencil,antialias以及将<code>preserveDrawingBuffer</code>设置为false,这样会节约一部分内存。同时需要时刻注意在使用完alpha,depth,antialias之后需要将context状态显示关闭。</li><li>获取attribute和uniform location只在初始化时进行。</li><li>int precision 标志在vertex 和fragment shader中并不相同，使用int precision会导致不正确的渲染效果。</li><li>考虑兼容性，在varying和uniform属性是，vs和ps中保持相同的大小，同时在GLSL ES的规范中。考虑使用vec4替代float数组，vec4会有更紧密的内存排布.</li><li>非2次幂的贴图只支持linear或nearest filter以及clamp-to-border,clampmode 支持clamp-to-edge wrapping. Mipmap filtering 和 repeat wrapping不支持。</li><li>在<code>WEBGL_draw_buffers</code> extesnion下，当使用超过一个draw buffer时，如果不需要往某个draw buffer绘制，将gl.NONE 传递给draw buffer的参数留别。</li><li>始终使用”use strict” 声明编写代码，许多被隐藏的错误会被转换为运行时异常抛出。”use strict”使得在特定情况下浏览器可以对代码进行更好的优化。</li><li>Code linters,如JSHint对保持JS代码整洁以及更少错误来说是一个非常有用的工具。</li><li>始终创建一个新的Texture而不是改变原先贴图的大小以及格式。</li><li>避免使用<code>gl.TRIANGLE_FAN</code>,<code>gl.TRIANGLE_FAN</code>是在CPU端进行模拟的。</li><li>在合适的情况下使用<code>gl.STATIC_DRAW</code>标记1buffer,<code>gl.STATIC_DRAW</code>使得浏览器和驱动层可以对静态数据的buffer有更多性能上的优化。</li><li>确保有一个<code>attribute</code>被绑定到<code>gl.bindAttribLocation</code>的<code>location 0</code>.否则在非openGL-ES得平台上会有较高的overhead，如MacOSX 以及desktop Linux.</li><li>尽可能使用<code>transferable objects</code>在Web Workers直接传递数据。</li><li><code>typed arrays</code> 有更高的性能相对于JS的array。</li><li>在fragment shaders中使用<code>mediump</code>精度会有更好的设备兼容性，但还是有可能在缺少足够测试的情况下影响渲染结果。</li><li>使用<code>highp</code>精度会有更大的性能消耗但是渲染结果更加准确，在vertex shader中推荐使用<code>highp</code>.</li><li>使用<code>mediump</code>和<code>lowp</code>precision进行设备shader的兼容性测试，在Chrome中可以使用<code>emulate</code>precision使用软件来模拟测试。</li><li>使用RGB framebuffer时，始终实现RGBA格式的fallback在RGB framebuffer不支持的情况下。使用<code>gl.checkFramebufferStatus</code>获得更多信息。</li><li>使用vertex array objects(VAOs)和interleave static vertex data可以减少许多GL的API调用。考虑性能，尽量不要在每帧更新uniform，而只在uniform变化时更新。</li><li>如果在缩放浏览器的窗口大小会有大幅度的性能提升，可以考虑在鼠标拖动的互动时使用一半分辨率的framebuffer。</li><li>分散较慢的任务跨帧执行可以优化加载时间。</li><li>确保所有的WebGL方法调用全部都在<code>requestAnimationFrame</code>方法中执行。</li><li>GLSL方法<code>textureProj</code>，如<code>vec4 color = textureProj(sampler,uv.xyw)</code>可以使用<code>vec4 color = texture(sampler,uv.xy/uv.w)</code>进行模拟。</li><li>避免使用Wavefront OBJ或COLLADA这类text-based 3D 数据格式进行资源分发。使用glTF或SRC这类优化过的Web资源格式作为替代方案。</li><li>使用OES_element_index_uint 在一次draw call中绘制indexed超过uint16.Max 65535的模型。</li><li>平滑的相机移动可以使用cosine-base插值对位置和旋转进行计算。相对于线性插值，余弦插值有更少的性能消耗以及更简单的计算公式。</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> webgl </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Stable Fluid流体模拟</title>
      <link href="/2018/07/01/stable-fluid/"/>
      <url>/2018/07/01/stable-fluid/</url>
      
        <content type="html"><![CDATA[<p>前一段时间研究了一下流体模拟，还看了一门工程流体力学的公开课。在渲染中的流体模拟还是基于基础的流体力学相关的公式的。刚刚看到<a href="https://github.com/keijiro/StableFluids" target="_blank" rel="noopener">keijiro</a>实现了一遍stable fluid，而之前自己实现的不太正确，又重新学习了一遍，做个笔记整理一下。</p><p>由于之前是直接看<a href="http://www.dgp.toronto.edu/people/stam/reality/Research/pdf/ns.pdf" target="_blank" rel="noopener">Stable Fluids, Jos Stam</a>实现的，时间较早。而<a href="https://pdfs.semanticscholar.org/847f/819a4ea14bd789aca8bc88e85e906cfc657c.pdf" target="_blank" rel="noopener">Real-Time Fluid Dynamics for Games</a>省略了一部分繁杂的公式推导会更加简洁易懂。</p><p>在Webgl2上实现的Simulation</p><p>github: <a href="https://github.com/soyemi/webgl2-stablefluids" target="_blank" rel="noopener">webgl2-stablefluids</a></p><p>LiveDemo: </p><iframe src="https://yemi.me/webgl2-stablefluids/" width="520px" height="520px" frameborder="0" scrolling="no"></iframe><h2 id="向量分析"><a href="#向量分析" class="headerlink" title="向量分析"></a>向量分析</h2><p>向量分析主要关注向量场的微分和积分性质，研究的对象为矢量场与标量场。向量分析的最重要的微分运算是梯度、散度、旋度、拉普拉斯算子和向量拉普拉斯算子。向量算子符号Nabla算子 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">▽</mi></mrow><annotation encoding="application/x-tex">\triangledown</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.54986em;vertical-align:0em;"></span><span class="mord amsrm">▽</span></span></span></span>。</p><p><strong>梯度</strong></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mi>r</mi><mi>a</mi><mi>d</mi><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="normal">▽</mi><mi>f</mi></mrow><annotation encoding="application/x-tex">grad(f) = \triangledown f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">a</span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord amsrm">▽</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span></span></span><br>梯度是一个标量场f中某点某点增加率最大的速率与方向，标量场的梯度是一个向量场。</p><p><strong>散度</strong></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>i</mi><mi>v</mi><mo stretchy="false">(</mo><mover accent="true"><mi>F</mi><mo>⃗</mo></mover><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="normal">▽</mi><mo>⋅</mo><mover accent="true"><mi>F</mi><mo>⃗</mo></mover></mrow><annotation encoding="application/x-tex">div(\vec{F}) = \triangledown \cdot \vec{F}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.21633em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9663299999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.15216em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.54986em;vertical-align:0em;"></span><span class="mord amsrm">▽</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9663299999999999em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9663299999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.15216em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span></span></span></p><p>散度是向量场F中某点发散或汇聚的程度，向量场的散度是标量场。</p><p><strong>旋度</strong></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mi>u</mi><mi>r</mi><mi>l</mi><mo stretchy="false">(</mo><mover accent="true"><mi>F</mi><mo>⃗</mo></mover><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="normal">▽</mi><mo>×</mo><mover accent="true"><mi>F</mi><mo>⃗</mo></mover></mrow><annotation encoding="application/x-tex">curl(\vec{F}) = \triangledown \times \vec{F}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.21633em;vertical-align:-0.25em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">u</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9663299999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.15216em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord amsrm">▽</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9663299999999999em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9663299999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.15216em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span></span></span><br>旋度表示向量场F中某点附近的旋转程序，向量场的旋度还是向量场。</p><p><strong>拉普拉斯算子Laplace</strong></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">△</mi><mi>f</mi><mo>=</mo><msup><mi mathvariant="normal">▽</mi><mn>2</mn></msup><mi>f</mi><mo>=</mo><mi mathvariant="normal">▽</mi><mo>⋅</mo><mi mathvariant="normal">▽</mi><mi>f</mi></mrow><annotation encoding="application/x-tex">\triangle f = \triangledown^2f = \triangledown \cdot \triangledown f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">△</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0585479999999998em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord amsrm">▽</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.54986em;vertical-align:0em;"></span><span class="mord amsrm">▽</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord amsrm">▽</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span></span></span></p><p>拉普拉斯预算表示对变量场f作梯度运算后，再对其作散度运算，标量场的拉普拉斯运算还是标量场。</p><p>详细可以参看知乎的几个回答</p><p><a href="https://www.zhihu.com/question/21912411" target="_blank" rel="noopener">https://www.zhihu.com/question/21912411</a></p><p><a href="https://www.zhihu.com/question/24074028" target="_blank" rel="noopener">https://www.zhihu.com/question/24074028</a></p><h2 id="流体模拟与Navier-Stokes方程"><a href="#流体模拟与Navier-Stokes方程" class="headerlink" title="流体模拟与Navier-Stokes方程"></a>流体模拟与Navier-Stokes方程</h2><h3 id="游戏中的流体模拟"><a href="#游戏中的流体模拟" class="headerlink" title="游戏中的流体模拟"></a>游戏中的流体模拟</h3><p>在游戏领域有很多流体模拟的方式，主要的分类和流体力学中一致，欧拉方法与拉格朗日法。对应的方法就是SPH(Smoothed-particle hydrodynamics)以及基于Grid的方法，也就是是stable fluid这篇paper提出的方法。</p><p>stable fluid这篇paper将NS方程的求解简化到在计算机中实现，同时满足stable的特点。即给定当前流体速度场的状态，以及任意有限的时间间隔t,可以计算出t时间后的流体速度场的精确变化。</p><p>对于流体模拟来说我们可以使用particle来模拟流体粒子的运动，从而得到整个流体场的运动状态和变化。但是对于烟雾这类粒度很小的流体来说，我们可以使用密度场来描述。<br>Real-Time Fluid Dynamics for Games中提到了两个公式，第一个是简化版的Navier-Stokes方程，第二个是密度场的方程。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathsize="1.2em"><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>u</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>t</mi></mrow></mfrac><mo>=</mo><mo>−</mo><mo stretchy="false">(</mo><mi>u</mi><mo>⋅</mo><mi mathvariant="normal">▽</mi><mo stretchy="false">)</mo><mi>u</mi><mo>+</mo><mi>ν</mi><msup><mi mathvariant="normal">▽</mi><mn>2</mn></msup><mi>u</mi><mo>+</mo><mi>F</mi></mstyle></mrow><annotation encoding="application/x-tex">\large \frac{\partial u}{\partial t} = -(u \cdot \triangledown) u + \nu \triangledown^{2} u + F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.468928em;vertical-align:-0.8232em;"></span><span class="mord sizing reset-size6 size7"><span class="mopen nulldelimiter sizing reset-size7 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.5140000000000002em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault">t</span></span></span><span style="top:-3.43em;"><span class="pstrut" style="height:3.2em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.8770000000000002em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size7 size6"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel sizing reset-size6 size7">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2em;vertical-align:-0.3em;"></span><span class="mord sizing reset-size6 size7">−</span><span class="mopen sizing reset-size6 size7">(</span><span class="mord mathdefault sizing reset-size6 size7">u</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin sizing reset-size6 size7">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.2em;vertical-align:-0.3em;"></span><span class="mord amsrm sizing reset-size6 size7">▽</span><span class="mclose sizing reset-size6 size7">)</span><span class="mord mathdefault sizing reset-size6 size7">u</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin sizing reset-size6 size7">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1111479999999998em;vertical-align:-0.099996em;"></span><span class="mord mathdefault sizing reset-size6 size7" style="margin-right:0.06366em;">ν</span><span class="mord sizing reset-size6 size7"><span class="mord amsrm">▽</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8426266666666666em;"><span style="top:-3.2129999999999996em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mord mathdefault sizing reset-size6 size7">u</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin sizing reset-size6 size7">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.819996em;vertical-align:0em;"></span><span class="mord mathdefault sizing reset-size6 size7" style="margin-right:0.13889em;">F</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathsize="1.2em"><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>ρ</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>t</mi></mrow></mfrac><mo>=</mo><mo>−</mo><mo stretchy="false">(</mo><mi>u</mi><mo>⋅</mo><mi mathvariant="normal">▽</mi><mo stretchy="false">)</mo><mi>ρ</mi><mo>+</mo><mi>k</mi><msup><mi mathvariant="normal">▽</mi><mn>2</mn></msup><mi>ρ</mi><mo>+</mo><mi>S</mi></mstyle></mrow><annotation encoding="application/x-tex">\large \frac{\partial \rho }{\partial t} = -(u \cdot \triangledown)\rho + k \triangledown^{2} \rho + S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.4689279999999996em;vertical-align:-0.8232em;"></span><span class="mord sizing reset-size6 size7"><span class="mopen nulldelimiter sizing reset-size7 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714399999999998em;"><span style="top:-2.5140000000000002em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault">t</span></span></span><span style="top:-3.43em;"><span class="pstrut" style="height:3.2em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.8770000000000002em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault">ρ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size7 size6"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel sizing reset-size6 size7">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2em;vertical-align:-0.3em;"></span><span class="mord sizing reset-size6 size7">−</span><span class="mopen sizing reset-size6 size7">(</span><span class="mord mathdefault sizing reset-size6 size7">u</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin sizing reset-size6 size7">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.2em;vertical-align:-0.3em;"></span><span class="mord amsrm sizing reset-size6 size7">▽</span><span class="mclose sizing reset-size6 size7">)</span><span class="mord mathdefault sizing reset-size6 size7">ρ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin sizing reset-size6 size7">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.2444799999999998em;vertical-align:-0.23332799999999998em;"></span><span class="mord mathdefault sizing reset-size6 size7" style="margin-right:0.03148em;">k</span><span class="mord sizing reset-size6 size7"><span class="mord amsrm">▽</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8426266666666666em;"><span style="top:-3.2129999999999996em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mord mathdefault sizing reset-size6 size7">ρ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin sizing reset-size6 size7">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.819996em;vertical-align:0em;"></span><span class="mord mathdefault sizing reset-size6 size7" style="margin-right:0.05764em;">S</span></span></span></span></span></p><p>欧拉法侧重使用场的概念来计算流体的物理属性。对流体分割成一个个grid cell.对每个cell进行物理量的模拟和求解。最终的渲染也是基于网格的渲染。</p><p>对于最终的渲染，我们需要计算在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span></span></span></span> 时刻时某个流体单元的密度，只要在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Δ</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">\Delta t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Δ</span><span class="mord mathdefault">t</span></span></span></span> 的时间范围内，流体的密度变化是稳定的，就可以渲染出连续的流体运动效果。</p><p>接下按照这篇paper的思路来计算流体。</p><h2 id="求解NS方程"><a href="#求解NS方程" class="headerlink" title="求解NS方程"></a>求解NS方程</h2><p>NS方程是流体力学的基本方程，描述的是流体的物理量随着时间的变化。那么对于流体的速度u、密度<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ρ</mi></mrow><annotation encoding="application/x-tex">\rho</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">ρ</span></span></span></span>都是满足的。所以上文提到的两个方程的形式基本一致。</p><p>密度NS方程相对于速度的NS方程来说相对容易，因为密度方程是线性的，我们可以设定速度场是一个固定值，先求解密度NS方程</p><h3 id="计算密度场变化"><a href="#计算密度场变化" class="headerlink" title="计算密度场变化"></a>计算密度场变化</h3><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathsize="1.2em"><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>ρ</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>t</mi></mrow></mfrac><mo>=</mo><mo>−</mo><mo stretchy="false">(</mo><mi>u</mi><mo>⋅</mo><mi mathvariant="normal">▽</mi><mo stretchy="false">)</mo><mi>ρ</mi><mo>+</mo><mi>k</mi><msup><mi mathvariant="normal">▽</mi><mn>2</mn></msup><mi>ρ</mi><mo>+</mo><mi>S</mi></mstyle></mrow><annotation encoding="application/x-tex">\large \frac{\partial \rho }{\partial t} = -(u \cdot \triangledown)\rho + k \triangledown^2 \rho + S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.4689279999999996em;vertical-align:-0.8232em;"></span><span class="mord sizing reset-size6 size7"><span class="mopen nulldelimiter sizing reset-size7 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714399999999998em;"><span style="top:-2.5140000000000002em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault">t</span></span></span><span style="top:-3.43em;"><span class="pstrut" style="height:3.2em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.8770000000000002em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault">ρ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size7 size6"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel sizing reset-size6 size7">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2em;vertical-align:-0.3em;"></span><span class="mord sizing reset-size6 size7">−</span><span class="mopen sizing reset-size6 size7">(</span><span class="mord mathdefault sizing reset-size6 size7">u</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin sizing reset-size6 size7">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.2em;vertical-align:-0.3em;"></span><span class="mord amsrm sizing reset-size6 size7">▽</span><span class="mclose sizing reset-size6 size7">)</span><span class="mord mathdefault sizing reset-size6 size7">ρ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin sizing reset-size6 size7">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.2444799999999998em;vertical-align:-0.23332799999999998em;"></span><span class="mord mathdefault sizing reset-size6 size7" style="margin-right:0.03148em;">k</span><span class="mord sizing reset-size6 size7"><span class="mord amsrm">▽</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8426266666666666em;"><span style="top:-3.2129999999999996em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathdefault sizing reset-size6 size7">ρ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin sizing reset-size6 size7">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.819996em;vertical-align:0em;"></span><span class="mord mathdefault sizing reset-size6 size7" style="margin-right:0.05764em;">S</span></span></span></span></span></p><p>密度方程描述了密度的变化量受到三个部分的影响：</p><p><strong>密度发散</strong></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><msup><mi mathvariant="normal">▽</mi><mn>2</mn></msup><mi>ρ</mi></mrow><annotation encoding="application/x-tex"> k \triangledown^2 \rho </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.008548em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord"><span class="mord amsrm">▽</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathdefault">ρ</span></span></span></span> 密度随着密度场自身的散度发散。对密度<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ρ</mi></mrow><annotation encoding="application/x-tex">\rho</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">ρ</span></span></span></span>拉普拉斯运算表示密度场梯度的散度。并且扩散以参数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>的程度进行。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">float</span> k = dt * diff * N*N;</span><br><span class="line"></span><br><span class="line"><span class="comment">//unstable</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">1</span>;i&lt;=N;i++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> j=<span class="number">1</span>;j&lt;=N;j++)&#123;</span><br><span class="line">        q[i,j] = q0[i,j] + k *(q0[i<span class="number">-1</span>,j] + q0[i+<span class="number">1</span>,j] + q0[i,j<span class="number">-1</span>]+ q0[i,j+<span class="number">1</span>] - <span class="number">4</span>*q0[i,j]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//stable</span></span><br><span class="line">q0[i,j] = q[i,j] - k *(q[i<span class="number">-1</span>,j] + q[i+<span class="number">1</span>,j] + q[i,j<span class="number">-1</span>]+ q[i,j+<span class="number">1</span>] - <span class="number">4</span>* q[i,j]);</span><br></pre></td></tr></table></figure><p>对于上述方程 我们需要求得q[i,j]。可以看成是一个q[i,j]的线性方程组，我们可以使用高斯-赛德尔迭代或者是雅可比迭代进行求解。</p><p><strong>雅可比迭代与高斯赛德尔迭代的区别</strong></p><p>Gauss-Seidel迭代k+1次的值用到了第k+1次迭代其他成员的值与k次迭代的值，收敛速度更快。而雅可比迭代，每个成员的计算不需要依赖其他成员只需要第k此迭代的结果，可以进行并行运算，更加适合GPU实现。</p><p><strong>速度梯度</strong></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><mo stretchy="false">(</mo><mi>u</mi><mo>⋅</mo><mi mathvariant="normal">▽</mi><mo stretchy="false">)</mo><mi>ρ</mi></mrow><annotation encoding="application/x-tex">-( u \cdot \triangledown)\rho</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">−</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord amsrm">▽</span><span class="mclose">)</span><span class="mord mathdefault">ρ</span></span></span></span></span></p><p>密度的变化量是随着速度梯度的方向减少的，直观的表述就是速度场将物质搬运到梯度的反方向的位置。</p><p>物理量的随速度梯度的变化也称作平流Advection。对于物理量q，我们可以使用以下方程直接计算。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>=</mo><mi>x</mi><mn>0</mn><mo>+</mo><mi>u</mi><mo stretchy="false">(</mo><mi>x</mi><mn>0</mn><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x = x0+ u(x0,t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">x</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">u</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>q</mi><mo stretchy="false">(</mo><mi>x</mi><mn>0</mn><mo>+</mo><mi>u</mi><mo stretchy="false">(</mo><mi>x</mi><mn>0</mn><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>t</mi><mo>+</mo><mi>δ</mi><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><mi>q</mi><mn>0</mn><mo stretchy="false">(</mo><mi>x</mi><mn>0</mn><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">q(x0 + u(x0,t),t+ \delta t) = q0(x0,t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">u</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mord">0</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span></span></span></span></span></p><p>然而这个方程,最终的位置取决于速度u，而要使得其稳定则要满足 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>=</mo><mi>x</mi><mn>0</mn><mo>+</mo><mi>u</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x = x0 + u(x,t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">x</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">u</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span></span></span></span> ,而不是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>=</mo><mi>x</mi><mn>0</mn><mo>+</mo><mi>u</mi><mo stretchy="false">(</mo><mi>x</mi><mn>0</mn><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x = x0+ u(x0,t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">x</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">u</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span></span></span></span> 这样这个方程更加难解。<br>采用backtrace的思路得到公式：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>q</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>t</mi><mo>+</mo><mi>δ</mi><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><mi>q</mi><mn>0</mn><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mi>u</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mi>δ</mi><mi>t</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">q(x,t+\delta t) = q0(x-u(x,t)\delta t, t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mord">0</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">u</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mord mathdefault">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span></span></span></span></span></p><p>对于当前位置x，我们根据x处的速度u逆推出前一步的位置，然后通过该位置的周围四个grid的值进行插值得到密度的平流。</p><p><strong>密度源</strong></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span></span></span></span> 表示密度的源，可以设定为一个固定初始状态下的密度分布。</p><p>最终计算密度场的代码大致如下：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">AddSource</span><span class="params">()</span></span> <span class="comment">//密度源</span></span><br><span class="line"><span class="function"><span class="title">while</span><span class="params">(true)</span></span>&#123;</span><br><span class="line">    Difffuse()  <span class="comment">//发散</span></span><br><span class="line">    Move()      <span class="comment">//按照速度梯度移动</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="计算速度场变化"><a href="#计算速度场变化" class="headerlink" title="计算速度场变化"></a>计算速度场变化</h3><p>由速度的NS方程可知，速度的变化量也由三个部分组成:</p><ul><li>速度梯度的平流</li><li>粘滞发散</li><li>外力作用</li></ul><p><strong>速度梯度的平流</strong></p><p>对于速度平流的计算和上文密度的方式相同也是使用backtrace的方式来求解。</p><p><strong>粘滞发散</strong></p><p>由于流体的粘度会导致流体的速度发散，其发散的速率与流体的粘性系数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span></span></span></span> 有关。</p><p>在计算黏性发散时也需要用雅可比迭代计算速度的拉普拉斯运算。</p><p><strong>稳定流体与亥姆霍兹分解</strong></p><p>不过需要注意的是我们计算稳定流体时要满足NS方程中对不可压缩流体，速度的散度为0，也就是满足方程</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">▽</mi><mo>⋅</mo><mi>u</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\triangledown \cdot u = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.54986em;vertical-align:0em;"></span><span class="mord amsrm">▽</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">u</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span></span></p><p>对于经过平流以及发散计算后的速度场，其散度已经不一定为0。只有当速度散度为0，NS方程的迭代才会收敛稳定。</p><p>所有我们需要一个project的方法将速度场投影到一个无散的速度场。</p><p>亥姆霍兹定理描述了，一个足够光滑的三维矢量场可以分解为一个无旋矢量场与一个螺旋线矢量场的和。</p><p>螺旋线矢量场即一个散度为0的矢量场。所以我们需要迭代的速度场为只有旋度的场。同时速度的梯度是一个旋度为0的矢量场。根据亥姆霍兹定理，只需要将计算出的速度场减去速度梯度就能过够得到稳定流体的速度场。</p><p>(未完)</p><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p><a href="https://github.com/keijiro/StableFluids" target="_blank" rel="noopener">github StableFluids, keijiro</a></p><p><a href="http://www.dgp.toronto.edu/people/stam/reality/Research/pdf/ns.pdf" target="_blank" rel="noopener">Stable Fluids, Jos Stam</a></p><p><a href="https://pdfs.semanticscholar.org/847f/819a4ea14bd789aca8bc88e85e906cfc657c.pdf" target="_blank" rel="noopener">Real-Time Fluid Dynamics for Games</a></p><p><a href="https://github.com/candycat1992/2DFluidSim" target="_blank" rel="noopener">github 2DFluidSim, candycat1992</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> fluid dynamics </tag>
            
            <tag> rendering </tag>
            
            <tag> simulation </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Gulp构建Egret微信小游戏</title>
      <link href="/2018/06/12/build-egret-wechatgame-with-gulp/"/>
      <url>/2018/06/12/build-egret-wechatgame-with-gulp/</url>
      
        <content type="html"><![CDATA[<p>最近在做手机游戏往微信小游戏移植。我们试图将一个在iOS上能够消耗600M内存、场景中超过10W个gameobject的Unity游戏移植到只允许4M代码包大小、50M资源缓存的微信小游戏平台上。由于原先的项目资源管理没有按照程序制定的标准，也没有TA的存在，这真是个异常艰巨的任务。</p><p>目前我们第一步已经将初期60M的资源压缩到了26M还可以继续压缩，似乎所有资源在50M以内似乎比较乐观的。</p><p>配合资源压缩的gulp自动构建已经初步搭起来了，下面是一些开发的记录。</p><h2 id="项目需求"><a href="#项目需求" class="headerlink" title="项目需求"></a>项目需求</h2><p>Egret有两种方式可以导出微信小游戏工程。一种是在EgretLauncher中手动导出。另外一种是使用cli命令<code>egret publish</code>或<code>egret run</code>进行编译导出。但是使用命令行工具在导出有bug,不会自动同步EgretWeixinSupport中的文件到导出工程,会使得命令执行失败。同时由于微信小游戏的代码包大小限制，游戏资源必须上传到服务器。这样就需要在构建流程中添加对资源处理的过程。使用EgretLauncher进行导出就无法满足需求。</p><p>对于使用命令行构建来说，Egret项目支持扩展cli命令，相关文档在<a href="http://developer.egret.com/cn/github/egret-docs/Engine2D/projectConfig/cmdExtensionPlugin/index.html" target="_blank" rel="noopener">命令行扩展插件</a>。由于Egret项目结构不是标准的npm项目，也就不能直接使用node.js的大量工具和库，所以通过Egret中的scrip进行扩展限制较大。</p><p>最后是单独实现了一个基于gulp的项目自动构建，具有如下的Feature：</p><ul><li>可以通过命令行导出，使用本地资源的版本以及使用服务器资源的版本</li><li>支持自动将Resource目录下的资源上传到AliyunOSS（可以使用gulp插件实现其他Server解决方案）</li><li>支持使用<a href="https://tinypng.com/" target="_blank" rel="noopener">TinyPNG</a>对图片资源进行压缩</li><li>资源处理缓存支持，优化多次构建的时间</li></ul><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><p><strong>环境配置</strong></p><ul><li>安装Node.js 8.11最新的LTS版本</li><li>使用<code>npm i -g gulp</code> 安装gulp</li><li>安装微信开发者工具</li><li>安装白鹭引擎微信导出库</li></ul><p><strong>目录结构说明</strong></p><p>由于egret项目在打包时会将项目目录整体添加到tsc的include中，所以不能在改目录下添加gulpfile.js或者是package.json文件。<br>会导致<code>egret build</code> 命令行出错。所以将<code>gulpfile.js</code>放在项目工程的上级目录。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Mode                LastWriteTime         Length Name</span><br><span class="line">----                -------------         ------ ----</span><br><span class="line">d-----         2018&#x2F;6&#x2F;8     15:36                Cache                        &#x2F;&#x2F;&#x2F;自动构建的缓存文件目录</span><br><span class="line">d-----         2018&#x2F;6&#x2F;8     18:09                node_modules </span><br><span class="line">d-----         2018&#x2F;6&#x2F;8     15:35                TestMap                       &#x2F;&#x2F;Egret 工程目录</span><br><span class="line">d-----        2018&#x2F;6&#x2F;11     14:16                TestMap_res_953fb879118301           &#x2F;&#x2F;Egret 工程导出的资源目录</span><br><span class="line">d-----        2018&#x2F;6&#x2F;11     14:16                TestMap_wxgame                   &#x2F;&#x2F;Egret 工程导出的微信小游戏工程</span><br><span class="line">-a----         2018&#x2F;6&#x2F;8     15:12             91 .gitignore</span><br><span class="line">-a----        2018&#x2F;6&#x2F;12     12:35            858 config.json                      &#x2F;&#x2F;自动构建读取的配置文件</span><br><span class="line">-a----         2018&#x2F;6&#x2F;7     11:38              0 egret_publish.bat</span><br><span class="line">-a----         2018&#x2F;6&#x2F;7     11:37              8 egret_run.bat</span><br><span class="line">-a----         2018&#x2F;6&#x2F;7     11:52             15 egret_run_remote.bat</span><br><span class="line">-a----        2018&#x2F;6&#x2F;12     12:35           9906 gulpfile.js                      &#x2F;&#x2F;gulp脚本</span><br><span class="line">-a----         2018&#x2F;6&#x2F;8     18:09            774 package.json</span><br></pre></td></tr></table></figure><p><strong>gulp task</strong></p><p>gulpfile.js中定义了多个task，使用<a href="https://github.com/teambition/gulp-sequence" target="_blank" rel="noopener">gulpSeq</a>实现多任务的顺序执行。</p><p>主要的两个task为 <code>run_remote</code>和<code>run</code>。</p><p>run_remote会使用<code>egret build</code>导出微信小游戏工程，然后将resource目录下的资源处理之后上传到aliyunOSS服务器，最后配置egret项目使用OSS上传的资源地址，并拉起微信开发者工具。</p><p>而run直接是导出微信小游戏工程后直接处理资源，最后拉起微信开发者工具。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">gulp.task(<span class="string">"run_remote"</span>, gulpSeq(</span><br><span class="line">    <span class="string">"export_clean"</span>,</span><br><span class="line">    <span class="string">"wx_copy"</span>,</span><br><span class="line">    [<span class="string">"wx_setid"</span>,<span class="string">"copy_cisconfig"</span>],</span><br><span class="line">    <span class="string">"egret_build"</span>,</span><br><span class="line">    <span class="string">"res_clean"</span>,</span><br><span class="line">    [</span><br><span class="line">        <span class="string">"res_process_img"</span>,</span><br><span class="line">        <span class="string">"res_process_json"</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">"wx_resclean"</span>,</span><br><span class="line">    <span class="string">"oss_sync"</span>,</span><br><span class="line">    <span class="string">"run_wx"</span></span><br><span class="line">));</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">"run"</span>, gulpSeq(</span><br><span class="line">    <span class="string">"export_clean"</span>,</span><br><span class="line">    <span class="string">"wx_copy"</span>,</span><br><span class="line">    [<span class="string">"wx_setid"</span>,<span class="string">"copy_cisconfig"</span>],</span><br><span class="line">    <span class="string">"egret_build"</span>,</span><br><span class="line">    <span class="string">"run_wx"</span></span><br><span class="line">));</span><br></pre></td></tr></table></figure><p>在目录下直接执行 <code>gulp run</code>和 <code>gulp run_remote</code>就可以直接执行。</p><h2 id="构建开发说明"><a href="#构建开发说明" class="headerlink" title="构建开发说明"></a>构建开发说明</h2><p>在实现自动构建时遇到了一些问题，在下面做一些记录。</p><h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><p>项目目录创建了一个<code>config.json</code>文件，用于配置gulp的一些参数。</p><ul><li>projectfolder： 定义了当前egret工程目录</li><li>wxappid：会在egret导出wx工程后配置</li><li>projectname: 导出的wx工程的项目名称</li><li>res/compressFolders：配置所有需要进行图片压缩的目录</li><li>ossconf：aliyun OSS配置</li><li>ossconf_cache： 同步OSS时生成的缓存文件路径</li><li>server_rul：微信资源下载的远程路径</li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"projectfolder"</span>: <span class="string">"TestMap"</span>,</span><br><span class="line">    <span class="attr">"wxappid"</span>: <span class="string">"wx6ac********"</span>,</span><br><span class="line">    <span class="attr">"projectname"</span>:<span class="string">"testproj"</span>,</span><br><span class="line">    <span class="attr">"res"</span>:&#123;</span><br><span class="line">        <span class="attr">"compressFolders"</span>: [</span><br><span class="line">            <span class="string">"spriteatlas"</span>,</span><br><span class="line">            <span class="string">"UIAtlas"</span></span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"ossconf"</span>:&#123;</span><br><span class="line">        <span class="attr">"connect"</span>:&#123;</span><br><span class="line">            <span class="attr">"region"</span>: <span class="string">"oss-cn-hangzhou"</span>,</span><br><span class="line">            <span class="attr">"accessKeyId"</span>: <span class="string">"[oss key]"</span>,</span><br><span class="line">            <span class="attr">"accessKeySecret"</span>:<span class="string">"[oss secret]"</span>,</span><br><span class="line">            <span class="attr">"bucket"</span>: <span class="string">"[oss buckname]"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"controls"</span>:&#123;</span><br><span class="line">            <span class="attr">"headers"</span>:&#123;</span><br><span class="line">                <span class="attr">"Cache-Control"</span>: <span class="string">"no-cache"</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"setting"</span>:&#123;</span><br><span class="line">            <span class="attr">"dir"</span>:<span class="string">"/"</span>,</span><br><span class="line">            <span class="attr">"noClean"</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">"force"</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">"quiet"</span>: <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"ossconf_cache"</span>:&#123;</span><br><span class="line">        <span class="attr">"cacheFileName"</span>:<span class="string">"Cache/oss/"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"server_rul"</span>: <span class="string">"https://test.com"</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="同步EgertWeixinSupport到导出的微信工程"><a href="#同步EgertWeixinSupport到导出的微信工程" class="headerlink" title="同步EgertWeixinSupport到导出的微信工程"></a>同步EgertWeixinSupport到导出的微信工程</h3><p>由于egret publish的命令行执行会报错，不会自动同步微信导出文件。所以我们要手动将微信项目模板文件导出到<code>projname_wxgame</code>目录中。</p><p>参考<code>gulp.task(&#39;wx_copy&#39;)</code></p><p>在windows下路径为<code>&lt;username&gt;\AppData\Roaming\EgretLauncher\download\EgretWeixinSupport\</code>。</p><p>在macos中<code>~/Library/Application\ Support/EgretLauncher/download/EgretWeixinSupport</code></p><h3 id="通过命令行启动微信开发者工具"><a href="#通过命令行启动微信开发者工具" class="headerlink" title="通过命令行启动微信开发者工具"></a>通过命令行启动微信开发者工具</h3><p>微信开发工具支持命令行启动自动打开项目</p><p><code>&lt;微信开发者工具安装目录&gt;/cli -o &lt;projectpath&gt;</code></p><p>所以需要获取到微信开发者工具的安装路径，在macos中可以直接使用:</p><p><code>/Applications/wechatwebdevtools.app/Contents/Resources/app.nw/bin/cli</code>。</p><p>对于window上来说，用户可能会按照到不同的磁盘和目录。微信开发者工具会将目录写入windows的系统注册表，使用<code>reg query HKEY_LOCAL_MACHINE\\SOFTWARE\\WOW6432Node\\Tencent\\微信web开发者工具</code>可以获取到微信开发者工具的安装目录。 </p><p>需要注意的是windows的cmd对于中文是使用gbk编码的而不是utf8，所以需要对调用命令行返回的字符串进行编码的处理。</p><h3 id="使用Tiny-Png进行图片压缩"><a href="#使用Tiny-Png进行图片压缩" class="headerlink" title="使用Tiny Png进行图片压缩"></a>使用Tiny Png进行图片压缩</h3><p>微信小游戏对于本地资源只有50m的缓存，也就是说游戏的本地资源文件最多有50M。使用TinyPng最多可以将图片压缩到原始大小的20%。</p><p>在搜索了多个gulp-tiny插件之后最后使用<code>gulp-tinypng-nokey</code>进行图片压缩。<br>由于该插件没有实现图片缓存，每次构建如果都通过网路获取压缩的图片，需要很长的时候。所以手动实现了图片资源的缓存。考虑后续使用<code>gulp-remember</code>等插件进行缓存。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">gulp.task(<span class="string">"res_process_img"</span>, () =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> gulp.src(RES_FILTER.Image)</span><br><span class="line">        .pipe(filter(<span class="function">(<span class="params">file</span>) =&gt;</span> CheckImageCache(file)))</span><br><span class="line">        .pipe(tinypng())</span><br><span class="line">        .pipe(gulp.dest(ProjectResFolder + <span class="string">'/resource/assets/'</span>))</span><br><span class="line">        .pipe(filter(<span class="function"><span class="params">file</span> =&gt;</span> &#123;</span><br><span class="line">            RestoreImageToCache(file);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;));</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="Json压缩"><a href="#Json压缩" class="headerlink" title="Json压缩"></a>Json压缩</h3><p>由于从Unity引擎中导出的动画数据对于浮点数没有进行精度的压缩，转成json文件后这部分会造成部分空间浪费。</p><p>可以通过遍历所有json数据文件对浮点数的精度进行压缩。最后20M的json数据减少了6M的大小。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">FixNumber</span>(<span class="params">obj,size</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> m <span class="keyword">in</span> obj)&#123;</span><br><span class="line">        <span class="keyword">let</span> mt = <span class="keyword">typeof</span>(obj[m]);</span><br><span class="line">        <span class="keyword">if</span>(mt === <span class="string">'number'</span>)&#123;</span><br><span class="line">            obj[m]=<span class="built_in">Number</span>(obj[m].toFixed(size));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(mt === <span class="string">'object'</span>)&#123;</span><br><span class="line">            FixNumber(obj[m],size);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在gulp中，所有的文件流是基于在内存中的虚拟文件系统<a href="https://github.com/gulpjs/vinyl" target="_blank" rel="noopener">vinyl</a>。要对文件流进行操作也就需要编写gulp的插件。</p><p>具体可以参考：</p><p><a href="http://taobaofed.org/blog/2017/08/31/nodejs-stream/" target="_blank" rel="noopener">深入理解 Node.js Stream 内部机制</a></p><p><a href="https://segmentfault.com/a/1190000003770541" target="_blank" rel="noopener">探究Gulp的Stream</a></p><p>后续考虑使用Bson对json数据进行压缩，能够更大幅度地减少资源的大小。</p><h3 id="Egret使用远程资源与本地资源模式切换"><a href="#Egret使用远程资源与本地资源模式切换" class="headerlink" title="Egret使用远程资源与本地资源模式切换"></a>Egret使用远程资源与本地资源模式切换</h3><p>Egret的<a href="http://developer.egret.com/cn/github/egret-docs/extension/RES/getway/index.html" target="_blank" rel="noopener">Res</a>支持从远程读取配置或者是从本地读取资源。我们需要切换不同的资源加载模式，游戏的代码需要根据配置的方式选择相应的加载远，在自动构建的阶段根据调用的命令行进行修改这个配置文件。<br>然而由于这个配置是控制资源文件的加载所以不能使用Egret的RES进行加载。</p><p>所以我们需要使用微信小游戏的资源API先加载这个配置文件，根据配置文件中配置的信息决定Egret引擎加载本地或者是远程的项目资源。</p><p>配置文件以及代码如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"res"</span>:&#123;</span><br><span class="line">        <span class="attr">"use_remote"</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">"remote_url"</span>: <span class="string">"https://xxxx.xxxgame.cn/resource/"</span>,</span><br><span class="line">        <span class="attr">"remote_json_url"</span>:<span class="string">"https://xxxx.xxxgame.cn/resource/default.res.json"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(cisconf.res.use_remote)&#123;</span><br><span class="line">  egret.log(<span class="string">"Load RemoteRes: "</span>+cisconf.res.remote_json_url);</span><br><span class="line">  <span class="keyword">await</span> RES.loadConfig(cisconf.res.remote_json_url,cisconf.res.remote_url);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">  egret.log(<span class="string">"Load LocalRes"</span>);</span><br><span class="line">  <span class="keyword">await</span> RES.loadConfig(<span class="string">"resource/default.res.json"</span>, <span class="string">"resource/"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="GulpFile-js"><a href="#GulpFile-js" class="headerlink" title="GulpFile.js"></a>GulpFile.js</h2><p>gulpfile.js可以自行修改使用。</p><p><a href="https://gist.github.com/soyemi/b21f769a36d31ece7e99a954c11877e6" target="_blank" rel="noopener">使用Gulp构建Egret微信小游戏 · GitHub</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> egret </tag>
            
            <tag> h5game </tag>
            
            <tag> gulp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在Unity项目中使用Roslyn Code Analysis</title>
      <link href="/2018/05/22/unity-code-analysis/"/>
      <url>/2018/05/22/unity-code-analysis/</url>
      
        <content type="html"><![CDATA[<p>先放上github repo <a href="https://github.com/soyemi/Unity-CodeAnalyzerPlugin" target="_blank" rel="noopener">Unity-CodeAnalyzerPlugin</a> 一个给Unity项目添加CodeAnalyzer引用的插件。</p><ul><li>在IDE中使用Roslyn CodeAnalyzer</li><li>Unity中使用CodeAnalyzer</li><li>Unity Plugin的实现与使用</li></ul><h2 id="在IDE中使用Roslyn-CodeAnalyzer"><a href="#在IDE中使用Roslyn-CodeAnalyzer" class="headerlink" title="在IDE中使用Roslyn CodeAnalyzer"></a>在IDE中使用Roslyn CodeAnalyzer</h2><p>Roslyn Code Analysis 提供了许多静态代码分析的功能，如代码重构、诊断或者是自动补全等等。各种IDE的代码提示都可以使用roslyn的用code analysis作为language service的提供者。</p><p>在visual studio中，有两种使自定义code analyzer的方式。一种是通过vsix的扩展package进行安装,编写一个code analyzer并编译成dll，同时将该dll pack进一个vsix的packqge，最后在visual studio中安装插件就可以看到自定义代码分析的提示了。另一种方法是每一个csproject的引用里面可以添加对analyzer dll的引用。加载引用之后和安装vsix扩展是同样的效果。不过使用vsix安装的分析器默认是对全局开启的，而reference的方式只对当前引用的项目有效。</p><p>而在visual studio code中，所有的编辑器扩展是使用js或者ts编写的，本身vscode是基于electron,所以不支持c#的插件。对于跨平的vscode来说，cross platform的language service是一件比较麻烦的事情，于是Microsoft提出了一个language service protocol。通过定义一套RPC call 来让编辑器或ide支持不同语言，RPC协议定义了各种IDE的语言特性的数据接口。这样每个编辑器支持的语言的language service可以使用任意语言来编写，只需要实现LSP就可以了。而在vscode中的c#的language service protocol实现就是omnisharp，一个基于roslyn的workspace。大致的工作方式是omnisharp 通过roslyn的workspace API 读取sln或csproj。用户在vscode中的操作会被转换成LSP的RPC调用，omnisharp收到RPC调用后通过roslyn的api操作工程或者是脚本文件生成对应的诊断或代码提示。不过自定义的code analyzer经过测试vscode只在build时才会生成诊断信息，而不会像vs一样在编辑时动态提示。</p><h2 id="Unity中使用CodeAnalyzer"><a href="#Unity中使用CodeAnalyzer" class="headerlink" title="Unity中使用CodeAnalyzer"></a>Unity中使用CodeAnalyzer</h2><p>unity工程的项目结果是基于msbuild的。sln与csproject支持使用mono在MacOS上进行开发。ID支持vs、vscode与mono developer(不再支持)。</p><p>在unity中使用code analyzer有几种方式:</p><p>一种是按照上文描述的通过vsix安装。但是如果我们需要编写针对不同项目的code analyzer就需要安装多个扩展，并且在切换不同项目时开启或关闭VS extension不是非常方便。</p><p>另一种方式是独立的code analyzer，github上有相关的开源项目<a href="https://github.com/meng-hui/UnityEngineAnalyzer" target="_blank" rel="noopener">UnityEngineAnalyzer</a>，可以通过cli调用进行代码分析。</p><p>最后一种就是添加带有code analyzer的dll 引用。但是由于unity的asset刷新机制，每次有项目工程中的cs文件资源ie mono script的改动 unity编辑器就会重新生成csproj文件。为了保证生成proj文件的正确性并没有进行增量更新而是全部替换。这样我们手动添加到project中的analyzer就被移除了。</p><p>于是我编写了一个插件，可以hook每次重新生成csproj文件，并将code analyzer注入到csproj中。</p><h2 id="Unity-Plugin的实现与使用"><a href="#Unity-Plugin的实现与使用" class="headerlink" title="Unity Plugin的实现与使用"></a>Unity Plugin的实现与使用</h2><p>首先是hook csproj文件的刷新。</p><p>我们通过unity OnPostprocessAllAssets回调来监听monoscript的改动。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">UnityCSProjectAnalyzerPostprocessor</span> : <span class="title">AssetPostprocessor</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">OnPostprocessAllAssets</span>(<span class="params"><span class="keyword">string</span>[] importedAssets, <span class="keyword">string</span>[] deletedAssets, <span class="keyword">string</span>[] movedAssets, <span class="keyword">string</span>[] movedFromAssetPaths</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (importedAssets.Any(asset =&gt; asset.ToLower().EndsWith(<span class="string">".cs"</span>)) ||</span><br><span class="line">                deletedAssets.Any(asset =&gt; asset.ToLower().EndsWith(<span class="string">".cs"</span>)) ||</span><br><span class="line">                movedAssets.Any(asset =&gt; asset.ToLower().EndsWith(<span class="string">".cs"</span>)) ||</span><br><span class="line">                movedFromAssetPaths.Any(asset =&gt; asset.ToLower().EndsWith(<span class="string">".cs"</span>)))</span><br><span class="line">            &#123;</span><br><span class="line">                ModifyCSProject();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">ModifyCSProject</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            CodeAnalyzerEditorWindow.OnCSProjectModified();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>其次是解析unity的sln与csproj。这里需要注意的是使用vscode和vs作为代码编辑器打开工程生成的csproj文件名规则是不同的。在vscode中是以<code>assembly-csharp.csproj</code>和<code>assembly-csharp-editor.csproj</code> 而在vs中是<code>&lt;projname&gt;.csproj</code>和<code>&lt;projectname&gt;.editor.csproj</code>。</p><p>在csproject中添加analyzer的引用：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ItemGroup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Analyzer</span> <span class="attr">Include</span>=<span class="string">"..\..\..\Linty.Analyzers.dll"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ItemGroup</span>&gt;</span></span><br></pre></td></tr></table></figure><p>使用自己编写xml linq来解析csproj是由于考虑到老版本的unity 还只支持到.net 3.5 并不能使用roslyn的workspace或msbuild的lib来解析项目。</p><h3 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h3><p>将Plugin导入Unity后，EditorWindow来选择analyzer的dll路径,可以对<code>Assembly-CSharp</code>和<code>Assembly-Editor</code>分别添加Analyzer。</p><p><img src="/images/unity-codeanalysis-window.png" alt="Analyzer"></p><p>在MenuItem的<code>CodeAnalysis\Config</code>打开<code>CodeAnalyzerEditorWindow</code>.<br>``CodeAnalysis\Refresh`刷新引用的analyzer dll,每次删除脚本或者创建脚本都会自动刷新引用的analyzer.</p>]]></content>
      
      
      <categories>
          
          <category> Unity </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Unity </tag>
            
            <tag> Roslyn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>快速高斯模糊的Shader实现</title>
      <link href="/2018/04/30/super-fast-blur-gpu/"/>
      <url>/2018/04/30/super-fast-blur-gpu/</url>
      
        <content type="html"><![CDATA[<p>在整理代码的时候发现了以前clone的一个高斯模糊的<a href="https://github.com/mdymel/superfastblur" target="_blank" rel="noopener">repo</a>,于是打算整理一下写篇blog。高斯模糊在游戏开发中最常见的用法就是PostPorocess、Image Effect了，但是为了获得更好的模糊效果就需要更多的贴图采样次数，会有很多性能上的压力。一个高效的高斯模糊算法是很必要的。</p><p>本文导读</p><ul><li><p>介绍一种复杂度为O(n)的高斯模糊算法。</p></li><li><p>该模糊算法的GPU迁移。</p></li><li><p>在Unity中的实现的两种模糊方式以及对比。</p></li></ul><h2 id="最快速的高斯模糊算法"><a href="#最快速的高斯模糊算法" class="headerlink" title="最快速的高斯模糊算法"></a>最快速的高斯模糊算法</h2><h3 id="高斯函数与模糊卷积"><a href="#高斯函数与模糊卷积" class="headerlink" title="高斯函数与模糊卷积"></a>高斯函数与模糊卷积</h3><p>在中学的概率知识中我们都了解过正态分布，正态分布的权重就是高斯函数。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathsize="1.2em"><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><msqrt><mrow><mn>2</mn><mi>π</mi></mrow></msqrt><mi>ρ</mi></mrow></mfrac><msup><mi>e</mi><mrow><mo>−</mo><mfrac><mrow><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mi>μ</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><mrow><mn>2</mn><msup><mi>σ</mi><mn>2</mn></msup></mrow></mfrac></mrow></msup></mstyle></mrow><annotation encoding="application/x-tex">\large f(x)= \frac{1}{\sqrt{2\pi}\rho}e^{-\frac{(x-\mu)^2}{2\sigma^2}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2em;vertical-align:-0.3em;"></span><span class="mord mathdefault sizing reset-size6 size7" style="margin-right:0.10764em;">f</span><span class="mopen sizing reset-size6 size7">(</span><span class="mord mathdefault sizing reset-size6 size7">x</span><span class="mclose sizing reset-size6 size7">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel sizing reset-size6 size7">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.77902em;vertical-align:-1.189992em;"></span><span class="mord sizing reset-size6 size7"><span class="mopen nulldelimiter sizing reset-size7 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.4027800000000004em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.90722em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.03588em;">π</span></span></span><span style="top:-3.0672200000000003em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.13278em;"><span></span></span></span></span></span><span class="mord mathdefault">ρ</span></span></span><span style="top:-3.43em;"><span class="pstrut" style="height:3.2em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.8770000000000002em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.99166em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size7 size6"></span></span><span class="mord sizing reset-size6 size7"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.32419em;"><span style="top:-3.4593033333333336em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size4 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2973299999999999em;"><span style="top:-2.47267em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size4 size2 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9384399999999999em;"><span style="top:-2.93844em;margin-right:0.08333333333333334em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.511em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size4 size2 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">x</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">μ</span><span class="mclose mtight"><span class="mclose mtight">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.04844em;"><span style="top:-3.04844em;margin-right:0.08333333333333334em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5273299999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size4 size6"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p>对于一张二维图片我们使用高斯函数的权重值作为矩阵，计算window region的卷积就可以得到这个region中心值的高斯模糊值。高斯函数的权重积分为1所以最后的图片的颜色值不会整体变亮或变暗。</p><p>用公式来表示就是对于一个像素<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[i,j]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span></span></span></span>,取<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi></mrow><annotation encoding="application/x-tex">r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span></span></span></span>为半径，计算该像素的blur值为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathsize="1.2em"><mi>b</mi><mo stretchy="false">[</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">]</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>y</mi><mo>=</mo><mi>i</mi><mo>−</mo><mi>r</mi></mrow><mrow><mi>i</mi><mo>+</mo><mi>r</mi></mrow></munderover><munderover><mo>∑</mo><mrow><mi>x</mi><mo>=</mo><mi>j</mi><mo>−</mo><mi>r</mi></mrow><mrow><mi>j</mi><mo>+</mo><mi>r</mi></mrow></munderover><mi>f</mi><mo stretchy="false">[</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">]</mo><mo>∗</mo><mi>w</mi><mo stretchy="false">[</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">]</mo></mstyle></mrow><annotation encoding="application/x-tex">\large b[i,j] = \sum^{i+r}<em>{y=i-r} \sum^{j+r}</em>{x=j-r} f[x,y] * w[x,y]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2em;vertical-align:-0.3em;"></span><span class="mord mathdefault sizing reset-size6 size7">b</span><span class="mopen sizing reset-size6 size7">[</span><span class="mord mathdefault sizing reset-size6 size7">i</span><span class="mpunct sizing reset-size6 size7">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault sizing reset-size6 size7" style="margin-right:0.05724em;">j</span><span class="mclose sizing reset-size6 size7">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel sizing reset-size6 size7">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.8587480000000003em;vertical-align:-1.662374em;"></span><span class="mop op-limits sizing reset-size6 size7"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7896850000000004em;"><span style="top:-2.044315em;margin-left:0em;"><span class="pstrut" style="height:3.2em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="mrel mtight">=</span><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span style="top:-3.2000050000000004em;"><span class="pstrut" style="height:3.2em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.450005em;margin-left:0em;"><span class="pstrut" style="height:3.2em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3853116666666667em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits sizing reset-size6 size7"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8303116666666672em;"><span style="top:-2.044315em;margin-left:0em;"><span class="pstrut" style="height:3.2em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mrel mtight">=</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span style="top:-3.2000050000000004em;"><span class="pstrut" style="height:3.2em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.490631666666667em;margin-left:0em;"><span class="pstrut" style="height:3.2em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3853116666666667em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault sizing reset-size6 size7" style="margin-right:0.10764em;">f</span><span class="mopen sizing reset-size6 size7">[</span><span class="mord mathdefault sizing reset-size6 size7">x</span><span class="mpunct sizing reset-size6 size7">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault sizing reset-size6 size7" style="margin-right:0.03588em;">y</span><span class="mclose sizing reset-size6 size7">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin sizing reset-size6 size7">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.2em;vertical-align:-0.3em;"></span><span class="mord mathdefault sizing reset-size6 size7" style="margin-right:0.02691em;">w</span><span class="mopen sizing reset-size6 size7">[</span><span class="mord mathdefault sizing reset-size6 size7">x</span><span class="mpunct sizing reset-size6 size7">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault sizing reset-size6 size7" style="margin-right:0.03588em;">y</span><span class="mclose sizing reset-size6 size7">]</span></span></span></span></span></p><p>然而直接计算高斯模糊，算法的复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo>∗</mo><msup><mi>r</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex"> O(n*r^{2}) </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。</p><h3 id="BoxBlur-均值模糊"><a href="#BoxBlur-均值模糊" class="headerlink" title="BoxBlur 均值模糊"></a>BoxBlur 均值模糊</h3><p>均值模糊是另外一种模糊算法，相当于模糊计算时权重全部相同，即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mo stretchy="false">[</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">]</mo><mo>=</mo><mfrac><mn>1</mn><msup><mi>r</mi><mn>2</mn></msup></mfrac></mrow><annotation encoding="application/x-tex"> w[i,j] = \frac{1}{r^{2}} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463142857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>。对于均值模糊来说，权重相同省去了权重的乘法计算，可以提升性能，但是由于均值是以一块r*r的大小区域计算的，模糊的效果会出现方形的artifact。而高斯权重分布式按照像素距离中心的距离，大于模糊半径权重就为0，会有柔和的过渡。</p><p>Peter Kovesi 在<a href="http://www.peterkovesi.com/papers/FastGaussianSmoothing.pdf" target="_blank" rel="noopener">Paper</a>中提出了,Box blur在多次iteration之后会逼近Gaussian分布。于是我们可以重复多次Box blur来替代高斯分布的权重计算。</p><p>同时Peter Kovesi还提出，高斯模糊的标准差和BoxBlur的box半径大小存在如下的关系。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mo>=</mo><msqrt><mrow><mfrac><mrow><mn>12</mn><msup><mi>σ</mi><mn>2</mn></msup></mrow><mi>n</mi></mfrac><mo>+</mo><mn>1</mn></mrow></msqrt></mrow><annotation encoding="application/x-tex">w = \sqrt{\frac{12\sigma^2}{n}+1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.44em;vertical-align:-0.7405709999999996em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6994290000000003em;"><span class="svg-align" style="top:-4.4em;"><span class="pstrut" style="height:4.4em;"></span><span class="mord" style="padding-left:1em;"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.417108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">2</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span></span></span><span style="top:-3.6594290000000007em;"><span class="pstrut" style="height:4.4em;"></span><span class="hide-tail" style="min-width:1.02em;height:2.48em;"><svg width='400em' height='2.48em' viewBox='0 0 400000 2592' preserveAspectRatio='xMinYMin slice'><path d='M424,2478c-1.3,-0.7,-38.5,-172,-111.5,-514c-73,-342,-109.8,-513.3,-110.5,-514c0,-2,-10.7,14.3,-32,49c-4.7,7.3,-9.8,15.7,-15.5,25c-5.7,9.3,-9.8,16,-12.5,20s-5,7,-5,7c-4,-3.3,-8.3,-7.7,-13,-13s-13,-13,-13,-13s76,-122,76,-122s77,-121,77,-121s209,968,209,968c0,-2,84.7,-361.7,254,-1079c169.3,-717.3,254.7,-1077.7,256,-1081l0 -0c4,-6.7,10,-10,18,-10 H400000v40H1014.6s-87.3,378.7,-272.6,1166c-185.3,787.3,-279.3,1182.3,-282,1185c-2,6,-10,9,-24,9c-8,0,-12,-0.7,-12,-2z M1001 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7405709999999996em;"><span></span></span></span></span></span></span></span></span></span><br>其中w为box的半径 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>σ</mi></mrow><annotation encoding="application/x-tex">\sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span></span></span></span>为标准差(Standard Deviation)</p><h3 id="Box-Blur优化"><a href="#Box-Blur优化" class="headerlink" title="Box Blur优化"></a>Box Blur优化</h3><p>BoxBlur的公式：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathsize="1.2em"><mi>b</mi><mi>b</mi><mo stretchy="false">[</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">]</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>y</mi><mo>=</mo><mi>i</mi><mo>−</mo><mi>b</mi><mi>r</mi></mrow><mrow><mi>i</mi><mo>+</mo><mi>b</mi><mi>r</mi></mrow></munderover><munderover><mo>∑</mo><mrow><mi>x</mi><mo>=</mo><mi>j</mi><mo>−</mo><mi>b</mi><mi>r</mi></mrow><mrow><mi>j</mi><mo>+</mo><mi>b</mi><mi>r</mi></mrow></munderover><mi>f</mi><mo stretchy="false">[</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">]</mo><mi mathvariant="normal">/</mi><mo stretchy="false">(</mo><mn>2</mn><mo>⋅</mo><mi>b</mi><mi>r</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mstyle></mrow><annotation encoding="application/x-tex">\large bb[i,j] = \sum^{i+br}<em>{y=i-br} \sum^{j+br}</em>{x=j-br} f[x,y] /(2 \cdot br)^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2em;vertical-align:-0.3em;"></span><span class="mord mathdefault sizing reset-size6 size7">b</span><span class="mord mathdefault sizing reset-size6 size7">b</span><span class="mopen sizing reset-size6 size7">[</span><span class="mord mathdefault sizing reset-size6 size7">i</span><span class="mpunct sizing reset-size6 size7">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault sizing reset-size6 size7" style="margin-right:0.05724em;">j</span><span class="mclose sizing reset-size6 size7">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel sizing reset-size6 size7">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.91462em;vertical-align:-1.69031em;"></span><span class="mop op-limits sizing reset-size6 size7"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8129650000000004em;"><span style="top:-2.0210350000000004em;margin-left:0em;"><span class="pstrut" style="height:3.2em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="mrel mtight">=</span><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">b</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span style="top:-3.2000050000000004em;"><span class="pstrut" style="height:3.2em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.450005em;margin-left:0em;"><span class="pstrut" style="height:3.2em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight">b</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4085916666666667em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits sizing reset-size6 size7"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.853591666666667em;"><span style="top:-2.0210350000000004em;margin-left:0em;"><span class="pstrut" style="height:3.2em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mrel mtight">=</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">b</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span style="top:-3.2000050000000004em;"><span class="pstrut" style="height:3.2em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.490631666666667em;margin-left:0em;"><span class="pstrut" style="height:3.2em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight">b</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4085916666666667em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault sizing reset-size6 size7" style="margin-right:0.10764em;">f</span><span class="mopen sizing reset-size6 size7">[</span><span class="mord mathdefault sizing reset-size6 size7">x</span><span class="mpunct sizing reset-size6 size7">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault sizing reset-size6 size7" style="margin-right:0.03588em;">y</span><span class="mclose sizing reset-size6 size7">]</span><span class="mord sizing reset-size6 size7">/</span><span class="mopen sizing reset-size6 size7">(</span><span class="mord sizing reset-size6 size7">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin sizing reset-size6 size7">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.3111519999999999em;vertical-align:-0.3em;"></span><span class="mord mathdefault sizing reset-size6 size7">b</span><span class="mord mathdefault sizing reset-size6 size7" style="margin-right:0.02778em;">r</span><span class="mclose sizing reset-size6 size7"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8426266666666666em;"><span style="top:-3.2129999999999996em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p><p>对于一个pixel 我们仍要采样br*br个像素的颜色值。由于是均值模糊，我们可以先对每个像素做横向的模糊再进行纵向的模糊，最终得到的结果不变。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathsize="1.2em"><mi>b</mi><mi>b</mi><mo stretchy="false">[</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">]</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>y</mi><mo>=</mo><mi>i</mi><mo>−</mo><mi>b</mi><mi>r</mi></mrow><mrow><mi>i</mi><mo>+</mo><mi>b</mi><mi>r</mi></mrow></munderover><munderover><mo>∑</mo><mrow><mi>x</mi><mo>=</mo><mi>j</mi><mo>−</mo><mi>b</mi><mi>r</mi></mrow><mrow><mi>j</mi><mo>+</mo><mi>b</mi><mi>r</mi></mrow></munderover><mi>f</mi><mo stretchy="false">[</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">]</mo><mi mathvariant="normal">/</mi><mo stretchy="false">(</mo><mn>2</mn><mo>⋅</mo><mi>b</mi><mi>r</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mstyle></mrow><annotation encoding="application/x-tex">\large bb[i,j] = \sum^{i+br}<em>{y=i-br} \sum^{j+br}</em>{x=j-br} f[x,y] /(2 \cdot br)^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2em;vertical-align:-0.3em;"></span><span class="mord mathdefault sizing reset-size6 size7">b</span><span class="mord mathdefault sizing reset-size6 size7">b</span><span class="mopen sizing reset-size6 size7">[</span><span class="mord mathdefault sizing reset-size6 size7">i</span><span class="mpunct sizing reset-size6 size7">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault sizing reset-size6 size7" style="margin-right:0.05724em;">j</span><span class="mclose sizing reset-size6 size7">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel sizing reset-size6 size7">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.91462em;vertical-align:-1.69031em;"></span><span class="mop op-limits sizing reset-size6 size7"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8129650000000004em;"><span style="top:-2.0210350000000004em;margin-left:0em;"><span class="pstrut" style="height:3.2em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="mrel mtight">=</span><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">b</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span style="top:-3.2000050000000004em;"><span class="pstrut" style="height:3.2em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.450005em;margin-left:0em;"><span class="pstrut" style="height:3.2em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight">b</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4085916666666667em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits sizing reset-size6 size7"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.853591666666667em;"><span style="top:-2.0210350000000004em;margin-left:0em;"><span class="pstrut" style="height:3.2em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mrel mtight">=</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">b</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span style="top:-3.2000050000000004em;"><span class="pstrut" style="height:3.2em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.490631666666667em;margin-left:0em;"><span class="pstrut" style="height:3.2em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight">b</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4085916666666667em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault sizing reset-size6 size7" style="margin-right:0.10764em;">f</span><span class="mopen sizing reset-size6 size7">[</span><span class="mord mathdefault sizing reset-size6 size7">x</span><span class="mpunct sizing reset-size6 size7">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault sizing reset-size6 size7" style="margin-right:0.03588em;">y</span><span class="mclose sizing reset-size6 size7">]</span><span class="mord sizing reset-size6 size7">/</span><span class="mopen sizing reset-size6 size7">(</span><span class="mord sizing reset-size6 size7">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin sizing reset-size6 size7">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.3111519999999999em;vertical-align:-0.3em;"></span><span class="mord mathdefault sizing reset-size6 size7">b</span><span class="mord mathdefault sizing reset-size6 size7" style="margin-right:0.02778em;">r</span><span class="mclose sizing reset-size6 size7"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8426266666666666em;"><span style="top:-3.2129999999999996em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathsize="1.2em"><mo>=</mo><munderover><mo>∑</mo><mrow><mi>y</mi><mo>=</mo><mi>j</mi><mo>−</mo><mi>b</mi><mi>r</mi></mrow><mrow><mi>j</mi><mo>+</mo><mi>b</mi><mi>r</mi></mrow></munderover><mrow><mo fence="true">(</mo><munderover><mo>∑</mo><mrow><mi>x</mi><mo>=</mo><mi>i</mi><mo>−</mo><mi>b</mi><mi>r</mi></mrow><mrow><mi>i</mi><mo>+</mo><mi>b</mi><mi>r</mi></mrow></munderover><mi>f</mi><mo stretchy="false">[</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">]</mo><mi mathvariant="normal">/</mi><mo stretchy="false">(</mo><mn>2</mn><mo>⋅</mo><mi>b</mi><mi>r</mi><mo stretchy="false">)</mo><mo fence="true">)</mo></mrow><mi mathvariant="normal">/</mi><mo stretchy="false">(</mo><mn>2</mn><mo>⋅</mo><mi>b</mi><mi>r</mi><mo stretchy="false">)</mo></mstyle></mrow><annotation encoding="application/x-tex">\large  = \sum^{j+br}<em>{y=j-br}\left(\sum^{i+br}</em>{x=i-br} f[x,y]/(2 \cdot br)\right) / (2 \cdot br)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44024399999999997em;vertical-align:0em;"></span><span class="mrel sizing reset-size6 size7">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.91462em;vertical-align:-1.69031em;"></span><span class="mop op-limits sizing reset-size6 size7"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.853591666666667em;"><span style="top:-2.0210350000000004em;margin-left:0em;"><span class="pstrut" style="height:3.2em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="mrel mtight">=</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">b</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span style="top:-3.2000050000000004em;"><span class="pstrut" style="height:3.2em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.490631666666667em;margin-left:0em;"><span class="pstrut" style="height:3.2em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight">b</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4085916666666667em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner sizing reset-size6 size7"><span class="mopen sizing reset-size7 size6"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.1000199999999998em;"><span style="top:-2.3000000000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎝</span></span></span><span style="top:-2.8600000000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-4.10002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎛</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.50002em;"><span></span></span></span></span></span></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8129650000000006em;"><span style="top:-2.0210350000000004em;margin-left:0em;"><span class="pstrut" style="height:3.2em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mrel mtight">=</span><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">b</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span style="top:-3.2000050000000004em;"><span class="pstrut" style="height:3.2em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.450005em;margin-left:0em;"><span class="pstrut" style="height:3.2em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight">b</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3345183333333333em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">]</span><span class="mord">/</span><span class="mopen">(</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">b</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose">)</span><span class="mclose sizing reset-size7 size6"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.1000199999999998em;"><span style="top:-2.3000000000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎠</span></span></span><span style="top:-2.8600000000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-4.10002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.50002em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord sizing reset-size6 size7">/</span><span class="mopen sizing reset-size6 size7">(</span><span class="mord sizing reset-size6 size7">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin sizing reset-size6 size7">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.2em;vertical-align:-0.3em;"></span><span class="mord mathdefault sizing reset-size6 size7">b</span><span class="mord mathdefault sizing reset-size6 size7" style="margin-right:0.02778em;">r</span><span class="mclose sizing reset-size6 size7">)</span></span></span></span></span></p><p>这样我们将算法复杂度降到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo>⋅</mo><mi>r</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n \cdot r)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose">)</span></span></span></span></p><p>计算代码如下</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">BoxBlur</span>(<span class="params">color[] src,color[] dst,<span class="keyword">int</span> r</span>)</span>&#123;</span><br><span class="line">    BlurHor(src,dst,r);</span><br><span class="line">    BlurVer(src,dst,r);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">BlurHor</span>(<span class="params">color[] src,color[] dst, <span class="keyword">int</span> r</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> j=<span class="number">0</span>;j&lt;h;j++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;w;i++)&#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> val = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> ix = i-r;ix &lt;i+r;ix++)&#123;</span><br><span class="line">                val += src[j*w + ix];</span><br><span class="line">            &#125;</span><br><span class="line">            dst[j*w + i] = val /(r+r+<span class="number">1</span>); </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">BlurVer</span>(<span class="params">color[] src,color[] dst, <span class="keyword">int</span> r</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> j=<span class="number">0</span>;j&lt;h;j++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;w;i++)&#123;</span><br><span class="line">            <span class="keyword">var</span> val = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> jy = j-r;jy &lt;j+r;jy++)&#123;</span><br><span class="line">                val += src[i + jy*w];</span><br><span class="line">            &#125;</span><br><span class="line">            dst[j*w + i] = val /(r+r+<span class="number">1</span>); </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用累加器减少采样"><a href="#使用累加器减少采样" class="headerlink" title="使用累加器减少采样"></a>使用累加器减少采样</h3><p>对于横向的的计算来说，相邻两个像素i,i+1。</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi><mi>b</mi><mo stretchy="false">(</mo><mi>i</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>=</mo><mi>b</mi><mi>b</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo><mo>−</mo><mi>v</mi><mo stretchy="false">(</mo><mi>i</mi><mo>−</mo><mi>r</mi><mo stretchy="false">)</mo><mo>+</mo><mi>v</mi><mo stretchy="false">(</mo><mi>i</mi><mo>+</mo><mn>1</mn><mo>+</mo><mi>r</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">bb(i+1) = bb(i) - v(i-r) + v(i+1+r)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">b</span><span class="mord mathdefault">b</span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">b</span><span class="mord mathdefault">b</span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose">)</span></span></span></span><br>所以我们可以使用一个累加器，对于每个像素的计算就不需要采样<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mo>⋅</mo><mi>r</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2 \cdot r + 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>次像素了。<br>这样我们又可以将算法的复杂度从<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo>⋅</mo><mi>r</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n \cdot r)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose">)</span></span></span></span> 降到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>。</p><p>到目前为止使用多次BoxBlur来逼近GaussianBlur包括优化就完成了。这篇Blog里有相应的BenchMark <a href="http://blog.ivank.net/fastest-gaussian-blur.html" target="_blank" rel="noopener">Fastest Gaussian Blur (in linear time)</a>。</p><h2 id="使用GPU计算模糊"><a href="#使用GPU计算模糊" class="headerlink" title="使用GPU计算模糊"></a>使用GPU计算模糊</h2><p>在很多GPU计算高斯模糊的算法中，将高斯分布的权重预计算存储到一张LookUpTexture中，这样减少shader中计算的指令数，我们这里不采用这种使用高斯分布权重直接计算的方式，而使用上文所描述的均值模糊来逼近。</p><p>虽然优化过后性能已经是原始算法的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mi mathvariant="normal">/</mi><mn>200</mn></mrow><annotation encoding="application/x-tex">1/200</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">/</span><span class="mord">2</span><span class="mord">0</span><span class="mord">0</span></span></span></span>，但对于游戏渲染来说几十ms的时间还是太久了。<br>考虑将BoxBlur迁移到GPU中进行计算时，对于上文提到的<a href="#使用累加器减少采样">使用累加器减少采样</a>这一步优化，也就是将复杂度降低到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>的步骤在Shader中是无法实现的。</p><p>由于GPU执行时高度并行化并且乱序的，累加器完全无法工作，这样我们就失去了最后一步的优化。</p><p>对于完全正确的高斯模糊算法来说。模糊的半径大小是严重影响算法的计算量的。半径越大，每个像素采样的次数越多。而在Shader执行中贴图采样也是性能开销最大的。</p><p>Shader模糊效果的一个需求是，shader的效率不应该随模糊半径而变化。不论是1个像素的模糊，还是100个像素半径的模糊，性能开销如果以<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex"> (n^2) </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>增长是无法接受的。不过GPU有个好处是我们可以通过贴图的Downsample来通过一次采样获取到更多像素的颜色值。</p><h3 id="高斯模糊实现思路"><a href="#高斯模糊实现思路" class="headerlink" title="高斯模糊实现思路"></a>高斯模糊实现思路</h3><p>用一句话来概括就是，固定每个像素的采样次数，通过将原始图形按照模糊的半径进行缩放，以达成不同模糊半径有同样的运行效率。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">float</span> scale = <span class="number">2.0f</span> / boxsizeHalf;</span><br><span class="line">tempWith = Mathf.CeilToInt(src.width * scale);</span><br><span class="line">tempHeight = Mathf.CeilToInt(src.height * scale);</span><br></pre></td></tr></table></figure><p>其中<code>boxsizeHalf</code>是通过高斯模糊的radius计算出的，<code>tempWith</code>和<code>tempHeight</code>是原始图片被缩放后的大小。</p><p>这样我们在shader中进行采样时，每次采样的uv的跨度是一个texel,跨度太大就会产生artifact。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">for(int x &#x3D; -4; x &lt;&#x3D; 4;x++)&#123;        &#x2F;&#x2F;每个像素采样4+1次</span><br><span class="line">    float u &#x3D; i.uv.x + x * _MainTex_TexelSize.x;</span><br><span class="line">    col +&#x3D; tex2D(_MainTex, float2(u,i.uv.y)).xyz;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>不同的模糊质量</strong></p><p>同时可以定义不同的模糊质量，分别每个像素采样（4、8、16）+1次。</p><p><strong>BoxBlur次数</strong></p><p>由于Peter Kovesi提出的高斯模糊逼近，可以进行任意次box blur。在具体实现的时候进行3次。也就是三次horizontal模糊和3次纵向模糊。同时在高斯模糊的半径与均值模糊box半径的计算中，多次box模糊的半径是不相同的。但是不同的半径我们需要多生成一张不同大小的rendertexture来计算，所以这里优化的时候取相同的半径，结果不会有太大差别。</p><p><img src="/images/fast-gaussian-blur.png" alt="blur radius 12px"></p><h3 id="另一种实现方式"><a href="#另一种实现方式" class="headerlink" title="另一种实现方式"></a>另一种实现方式</h3><p>由于上面的实现方式是根据通过缩放texture来实现的不同模糊半径的采样。这样在实现动态模糊的时候，也就是模糊半径动态变化时，会allocate大量的rendertexture。对显存的影响较大。但是如果模糊半径一直不变就不会产生这种影响。</p><p>还是一种实现方式就是根据blur质量固定降低texture的分辨率，1/2、1/4、1/8等。但是在采样时还是使用固定的采样次数。这种方式在blur半径较少模糊效果好，但是半径提升到每个采样跨越了多个texel，就会出现明显的artifact。如果要减少这种artifact就需要提升采样的次数。</p><p><img src="/images/fast-blur-artifact.png" alt="blur-artifact"></p><h2 id="Unity中实现代码"><a href="#Unity中实现代码" class="headerlink" title="Unity中实现代码"></a>Unity中实现代码</h2><p>SuperFastBlur.cs</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SuperFastBlur</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">enum</span> Quality : <span class="keyword">int</span></span><br><span class="line">    &#123;</span><br><span class="line">        Low = <span class="number">2</span>,</span><br><span class="line">        Media = <span class="number">4</span>,</span><br><span class="line">        High = <span class="number">8</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> Material m_matBlur;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">Range(0, 100)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">float</span> Radius = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">float</span> boxsizeHalf;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Quality BlurQuality = Quality.Media;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> tempWith;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> tempHeight;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">bool</span> ModeBlurScaling = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        m_matBlur = <span class="keyword">new</span> Material(Shader.Find(<span class="string">"Unlit/SuperFastBlurShader"</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">float</span>[] <span class="title">boxesForGauss</span>(<span class="params"><span class="keyword">float</span> sigma, <span class="keyword">int</span> n</span>)  <span class="comment">// standard deviation, number of boxes</span></span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">var</span> wIdeal = Mathf.Sqrt((<span class="number">12</span> * sigma * sigma / n) + <span class="number">1</span>);  <span class="comment">// Ideal averaging filter width </span></span><br><span class="line">        <span class="keyword">var</span> wl = Mathf.Floor(wIdeal); <span class="keyword">if</span> (wl % <span class="number">2</span> == <span class="number">0</span>) wl--;</span><br><span class="line">        <span class="keyword">var</span> wu = wl + <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> mIdeal = (<span class="number">12</span> * sigma * sigma - n * wl * wl - <span class="number">4</span> * n * wl - <span class="number">3</span> * n) / (<span class="number">-4</span> * wl - <span class="number">4</span>);</span><br><span class="line">        <span class="keyword">var</span> m = Mathf.RoundToInt(mIdeal);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> sizes = <span class="keyword">new</span> <span class="keyword">float</span>[n];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            sizes[i] = (i &lt; m ? wl : wu);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sizes;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnRenderImage</span>(<span class="params">RenderTexture src, RenderTexture dest</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">if</span> (Radius &lt;= <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            Graphics.Blit(src, dest);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        boxsizeHalf = boxesForGauss(Radius,<span class="number">3</span>)[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">float</span> boxsize = boxsizeHalf * <span class="number">2.0f</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (ModeBlurScaling)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">float</span> scale = (<span class="keyword">int</span>)BlurQuality * <span class="number">2.0f</span> / boxsizeHalf;</span><br><span class="line">            tempWith = Mathf.CeilToInt(src.width * scale);</span><br><span class="line">            tempHeight = Mathf.CeilToInt(src.height * scale);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            tempWith = Mathf.CeilToInt(src.width * (<span class="keyword">int</span>)BlurQuality / <span class="number">16</span>);</span><br><span class="line">            tempHeight = Mathf.CeilToInt(src.height * (<span class="keyword">int</span>)BlurQuality / <span class="number">16</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> temprtx1 = RenderTexture.GetTemporary(tempWith, tempHeight, <span class="number">0</span>, src.format, RenderTextureReadWrite.Default);</span><br><span class="line">        <span class="keyword">var</span> temprtx2 = RenderTexture.GetTemporary(tempWith, tempHeight, <span class="number">0</span>, src.format, RenderTextureReadWrite.Default);</span><br><span class="line"></span><br><span class="line">        m_matBlur.SetInt(<span class="string">"_quality"</span>, (<span class="keyword">int</span>)BlurQuality);</span><br><span class="line">        <span class="keyword">if</span> (!ModeBlurScaling)</span><br><span class="line">        &#123;</span><br><span class="line">            m_matBlur.DisableKeyword(<span class="string">"BlurScaling_ON"</span>);</span><br><span class="line">            m_matBlur.SetFloat(<span class="string">"_boxBlurRadius"</span>, boxsizeHalf);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            m_matBlur.EnableKeyword(<span class="string">"BlurScaling_ON"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Graphics.Blit(src, temprtx1, m_matBlur, <span class="number">1</span>);</span><br><span class="line">        Graphics.Blit(temprtx1, temprtx2, m_matBlur, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        Graphics.Blit(temprtx2, temprtx1, m_matBlur, <span class="number">0</span>);</span><br><span class="line">        Graphics.Blit(temprtx1, temprtx2, m_matBlur, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        Graphics.Blit(temprtx2, temprtx1, m_matBlur, <span class="number">0</span>);</span><br><span class="line">        Graphics.Blit(temprtx1, dest, m_matBlur, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        RenderTexture.ReleaseTemporary(temprtx1);</span><br><span class="line">        RenderTexture.ReleaseTemporary(temprtx2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>SuperFastBlurShader.shader</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><span class="line">Shader &quot;Unlit&#x2F;SuperFastBlurShader&quot;</span><br><span class="line">&#123;</span><br><span class="line">Properties</span><br><span class="line">&#123;</span><br><span class="line">_MainTex (&quot;Texture&quot;, 2D) &#x3D; &quot;white&quot; &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line">SubShader</span><br><span class="line">&#123;</span><br><span class="line">Cull Off ZWrite On ZTest Less</span><br><span class="line">Pass</span><br><span class="line">&#123;</span><br><span class="line">Name &quot;BlurH&quot;</span><br><span class="line">CGPROGRAM</span><br><span class="line">#pragma vertex vert</span><br><span class="line">#pragma fragment frag</span><br><span class="line">#pragma multi_compile BlurScaling_OFF BlurScaling_ON</span><br><span class="line"></span><br><span class="line">#include &quot;UnityCG.cginc&quot;</span><br><span class="line"></span><br><span class="line">struct appdata</span><br><span class="line">&#123;</span><br><span class="line">float4 vertex : POSITION;</span><br><span class="line">float2 uv : TEXCOORD0;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">struct v2f</span><br><span class="line">&#123;</span><br><span class="line">float2 uv : TEXCOORD0;</span><br><span class="line">float4 vertex : SV_POSITION;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">v2f vert (appdata v)</span><br><span class="line">&#123;</span><br><span class="line">v2f o;</span><br><span class="line">o.vertex &#x3D; UnityObjectToClipPos(v.vertex);</span><br><span class="line">o.uv &#x3D; v.uv;</span><br><span class="line">return o;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#if !BlurScaling_ON</span><br><span class="line">float _boxBlurRadius &#x3D; 0;</span><br><span class="line">#endif</span><br><span class="line"></span><br><span class="line">sampler2D _MainTex;</span><br><span class="line">uniform float4 _MainTex_TexelSize;</span><br><span class="line"></span><br><span class="line">int _quality &#x3D; 2; &#x2F;&#x2F;2 4 &#x2F;8</span><br><span class="line">fixed4 frag (v2f i) : SV_Target</span><br><span class="line">&#123;</span><br><span class="line">float3 col  &#x3D;0;</span><br><span class="line"></span><br><span class="line">#if BlurScaling_ON</span><br><span class="line">float stepSize &#x3D; _MainTex_TexelSize.x;</span><br><span class="line">#else</span><br><span class="line">float stepSize &#x3D; _MainTex_TexelSize.x * _boxBlurRadius &#x2F; _quality &#x2F;4.0;</span><br><span class="line">#endif</span><br><span class="line"></span><br><span class="line">for(int x &#x3D; -_quality; x &lt;&#x3D; _quality;x++)&#123;</span><br><span class="line">float u &#x3D; i.uv.x + x * stepSize;</span><br><span class="line">col +&#x3D; tex2D(_MainTex, float2(u,i.uv.y)).xyz;</span><br><span class="line">&#125;</span><br><span class="line">col &#x3D; (col &#x2F; (_quality *2.0+ 1.0));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">return float4(col,1);</span><br><span class="line">&#125;</span><br><span class="line">ENDCG</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Pass</span><br><span class="line">&#123;</span><br><span class="line">Name &quot;BlurV&quot;</span><br><span class="line">CGPROGRAM</span><br><span class="line">#pragma vertex vert</span><br><span class="line">#pragma fragment frag</span><br><span class="line">#pragma multi_compile BlurScaling_OFF BlurScaling_ON</span><br><span class="line"></span><br><span class="line">#include &quot;UnityCG.cginc&quot;</span><br><span class="line"></span><br><span class="line">struct appdata</span><br><span class="line">&#123;</span><br><span class="line">float4 vertex : POSITION;</span><br><span class="line">float2 uv : TEXCOORD0;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">struct v2f</span><br><span class="line">&#123;</span><br><span class="line">float2 uv : TEXCOORD0;</span><br><span class="line">float4 vertex : SV_POSITION;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">v2f vert (appdata v)</span><br><span class="line">&#123;</span><br><span class="line">v2f o;</span><br><span class="line">o.vertex &#x3D; UnityObjectToClipPos(v.vertex);</span><br><span class="line">o.uv &#x3D; v.uv;</span><br><span class="line">return o;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#if !BlurScaling_ON</span><br><span class="line">float _boxBlurRadius &#x3D; 0;</span><br><span class="line">#endif</span><br><span class="line"></span><br><span class="line">sampler2D _MainTex;</span><br><span class="line">uniform float4 _MainTex_TexelSize;</span><br><span class="line"></span><br><span class="line">int _quality &#x3D; 2; &#x2F;&#x2F;2 4 &#x2F;8</span><br><span class="line">fixed4 frag (v2f i) : SV_Target</span><br><span class="line">&#123;</span><br><span class="line">float3 col&#x3D; 0;</span><br><span class="line"></span><br><span class="line">#if BlurScaling_ON</span><br><span class="line">float stepSize &#x3D; _MainTex_TexelSize.y;</span><br><span class="line">#else</span><br><span class="line">float stepSize &#x3D; _MainTex_TexelSize.y * _boxBlurRadius &#x2F; _quality &#x2F; 4.0;</span><br><span class="line">#endif</span><br><span class="line"></span><br><span class="line">for(int y &#x3D; -_quality; y &lt;&#x3D; _quality;y++)&#123;</span><br><span class="line">float v &#x3D; i.uv.y + y * stepSize;</span><br><span class="line">col +&#x3D; tex2D(_MainTex, float2(i.uv.x,v)).xyz;</span><br><span class="line">&#125;</span><br><span class="line">col &#x3D; (col &#x2F; (_quality *2+ 1));</span><br><span class="line">return float4(col,1);</span><br><span class="line">&#125;</span><br><span class="line">ENDCG</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>总结</strong></p><p>GPU blur上的优化依旧是时间与空间的取舍，更多的显存消耗，固定的计算时间开销。固定的显存就可能需要更多的计算时间，所以优化还是需要看特定的情形来。有时间把Gaussian standard deviation与box radius的计算推导一下再来更新。</p><hr><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="http://blog.ivank.net/fastest-gaussian-blur.html" target="_blank" rel="noopener">Fastest Gaussian Blur (in linear time)</a></p><p><a href="http://www.peterkovesi.com/papers/FastGaussianSmoothing.pdf" target="_blank" rel="noopener">Fast Almost-Gaussian Filtering</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> shader </tag>
            
            <tag> blur </tag>
            
            <tag> unity </tag>
            
            <tag> algorithms </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Roslyn生成代码</title>
      <link href="/2018/04/25/roslyn-code-generation/"/>
      <url>/2018/04/25/roslyn-code-generation/</url>
      
        <content type="html"><![CDATA[<p>自从C#成为日常主要的开发语言，就觉得有时候受限于C#的语法尤其是编译器特性了。</p><p>MetaData虽说是一个非常成功的设计，C#中的<code>Attribute</code>可以用来做很多事情，但是似乎除了Reflection和<code>System.Runtime.CompileServices</code>中的功能之外，其他的就要做编译器扩展了。开发的多了这类需求就会时不时的冒出来，然而一直没有时间去接触Roslyn这个编译器前端。刚好项目里要集成了轻量级的C#解释器用来做AOT环境下的热更新(为什么不用Lua是因为想要简化整个工作流程)，能够限制在C#的语言中就相对简单。</p><p>在使用解释器进行执行热更代码的基础上，构建了一个基于Protocol的调用，这样能够尽可能简化热更新代码容器和外部C#运行时的互调用。这时候一个需求是如果能够自动生成绑定的代码就更加方便了。只需要定义一个Interface的Protocol，外部runtime调用接口，内部实现接口就可以完成热更模块交互了。于是借此机会了解一下Roslyn。</p><h2 id="初见Roslyn"><a href="#初见Roslyn" class="headerlink" title="初见Roslyn"></a>初见Roslyn</h2><p>目前Roslyn项目最终会生成多个Package，主要是在<code>Microsof.CodeAnalysis</code>的namespace下面。Roslyn提供了一套SourceCode 词法解析，生成语法树，以及给予语法树的编译对语义Semantic进行分析。同时支持各种项目结构Workspace以及一些编译器IDE的优化功能。</p><p>总体来说就是几个步骤</p><ol><li><p>源代码生成语法树<code>SyntaTree</code>。语法树可以进行遍历获取各种语法树节点<code>SyntaxNode</code>。<br> 语法树可以进行修改，遍历替换插入等等。</p></li><li><p>多个语法树加上<code>MetaDataReference</code>可以进行编译,生成一个<code>Compilation</code>对象。Compilation可以得到<code>Diagnostic</code>，获取编译器的报错以及各类Warning等等。</p></li><li><p>从<code>Compilation</code>中我们可以获得<code>Semantic</code>对象，进行语义分析。语义和语法的区别在于语法节点可以认为是一个个word，单个word没有的意义，而语义是一段段句子。事实上从我们可以从<code>Syntax</code>中完全可以获得到<code>Semantic</code>中完全相同的信息，但是<code>Syntax</code>中会有更多的<code>Trivial</code>。</p></li></ol><h2 id="使用RoslynAPI"><a href="#使用RoslynAPI" class="headerlink" title="使用RoslynAPI"></a>使用RoslynAPI</h2><p>这里不想写太多琐碎的代码，就记录下使用过程中的一些理解吧。</p><p>如果你读过Roslyn项目的<a href="https://github.com/dotnet/roslyn/wiki/Roslyn%20Overview" target="_blank" rel="noopener">Overview</a>,会注意到一个信息是在API的调用中，运用了很多的Immutable的对象。roslyn在设计上有很多东西都是不可变化的。例如从一段源代码生存了一个语法树对象，如果对这个语法树进行修改会生成一个新的Immutable的语法树对象。这样所有的节点和对象都被clone了一份，没有对象的引用使得对于一个大体量的程序来说，在使用多线程进行编译处理的时候就不需要很多线程锁和同步，由于所有操作都会生成一个immutable的对象。</p><p>下面的代码都在<code>Microsoft.CodeAnalysis</code>的命名空间下</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Microsoft.CodeAnalysis.CSharp;</span><br><span class="line"><span class="keyword">using</span> Microsoft.CodeAnalysis;</span><br><span class="line"><span class="keyword">using</span> Microsoft.CodeAnalysis.CSharp.Syntax;</span><br></pre></td></tr></table></figure><p>从一段代码生成一个个<code>SyntaxTree</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> sourceFile = <span class="string">@"</span></span><br><span class="line"><span class="string">public class Program&#123;</span></span><br><span class="line"><span class="string">    public void HelloWorld()&#123;</span></span><br><span class="line"><span class="string">        Console.Writeline("</span>Hello World!<span class="string">");</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">"</span>;</span><br><span class="line">CSharpSyntaxTree cst = CSharpSyntaxTree.ParseText(sourceFile, CSharpParseOptions.Default, <span class="string">"HelloWorld.cs"</span>) <span class="keyword">as</span> CSharpSyntaxTree;</span><br></pre></td></tr></table></figure><p>获取到整个语法树中某个类型的<code>SyntaxTreeNode</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> root = cst.GetRoot();</span><br><span class="line">Ienumerable&lt;MethodDeclarationSyntax&gt; methodsDeclarations = root.DescendantNodes().OfType&lt;MethodDeclarationSyntax&gt;();</span><br></pre></td></tr></table></figure><p>创建一个编译对象<code>Compilation</code>,<code>metaRef</code>是对Assembly的引用，要使用Assembly的路径加载。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> metaRefSystem = MetadataReference.CreateFromFile(<span class="keyword">typeof</span>(String).Assembly.Location);</span><br><span class="line"><span class="keyword">var</span> metaRefs = ImmutableArray.Create&lt;MetadataReference&gt;(metaRefSystem);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> compilation = CSharpCompilation.Create(<span class="string">"GenerateScriptAssembly"</span>, csts, metaRefs, compilationOptions);</span><br></pre></td></tr></table></figure><p>在得到<code>Compilation</code>后我们就可以获取到<code>Semantic</code>对象了</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SemanticModel model = m_sourceCompilation.GetSemanticModel(m_sourceSyntaxTree,<span class="literal">true</span>);</span><br></pre></td></tr></table></figure><p><code>SemanticModel</code>是一个语义树，遍历里面的所有节点就是一个个<code>Symbol</code>了，一个<code>Symbol</code>会对应一个<code>SyntaxTreeNode</code>。</p><p>到这里其实上我们就可以通过Roslyn获取到一段Source中的所有信息了，这里其实足够进行CodeGeneration了。只要把这些Method的MetaDataInfo拼在一起就可以了。</p><p>那么为什么不直接用Reflection反射获取到的信息做代码生成呢，似乎是也可以的。如果我们只需要一些方法和类的定义信息而不需要方法Body中的Statement的话。所以写到这里似乎是大材小用了，用了更加复杂强大的编译器去实现把问题复杂了。</p><h2 id="实际需求的解决"><a href="#实际需求的解决" class="headerlink" title="实际需求的解决"></a>实际需求的解决</h2><p>上面只说到了语法树和语义分析，到了真正使用roslyn生成代码的时候了。roslyn提供了一个<code>SyntaxWalker</code>和<code>SyntaxRewriter</code>可以进行语法树的遍历和修改。不过最主要的工具还是<code>SyntaxFactory</code>这个类。这个类可以生成各种<code>SyntaxTreeNode</code>对象，并且通过链式调用构建整个树状结构。</p><p>贴一小段生成一个方法的代码吧</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> methodSyntax = SyntaxFactory.MethodDeclaration(</span><br><span class="line">       SyntaxFactory.IdentifierName(SyntaxFactory.Identifier(methodData.ReturnType)), methodData.MethodName</span><br><span class="line">   ).AddParameterListParameters(</span><br><span class="line">           parameters.ToArray()</span><br><span class="line">       ).WithBody(</span><br><span class="line">       SyntaxFactory.Block(</span><br><span class="line">           SyntaxFactory.ExpressionStatement(</span><br><span class="line">           SyntaxFactory.InvocationExpression(SyntaxFactory.IdentifierName(<span class="string">"Invoke"</span>), SyntaxFactory.ArgumentList(SyntaxFactory.SeparatedList&lt;ArgumentSyntax&gt;())))</span><br><span class="line">       )</span><br><span class="line">   );</span><br></pre></td></tr></table></figure><p>就是看起来特别难看的代码，由于roslyn是编译器，api自然是涉及到了每一个语言的特性，声明一个method就需要定义各种参数，方法的修饰符是什么是否是泛型，是否带有meta信息，返回值参数是否是泛型，是否是带有ref out等标记，是否有默认值的参数，parameter list等等等等。这样就导致了<code>SyntaxFactory</code>的API异常的复杂，完全用来拼凑一段代码异常痛苦(可能是因为我菜吧T_T)。想想在IDE里面<code>Ctrl+.</code>一秒钟完成的事情我写了好几个小时。</p><p>最终我放弃使用<code>SyntaxFactory</code>来生成代码，而用了StringBuilder。生成好代码后再使用<code>CsharpSyntaxTree</code>解析成语法树跑一次<code>Compilation</code>然后<code>Diagnose</code>一下，看是否有错误。整个CodeGeneration的过程就完成啦。</p><p>不过值得注意的是，直接拼接字符串生成的代码可以使用<code>SyntaxNode.NormalizeWhitespace()</code>来格式化代码，毕竟自己加的<code>\t\n</code>这种比不上<code>Ctrl+F</code>对吧。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>对于生产环境CodeGeneration来说，可能没有太多时间只需要快速实现的时候，可以试试封装过的RoslynAPI的库来进行处理，毕竟直接使用roslyn来操作太繁琐了。有时间是不是造个这样的轮子呢，脑海中已经大概有个雏形了。</p><p>总体来说开源的Roslyn给了C#和.net社区更多可能这件事是真的。我们公司的技术栈在.net这条路上远走越远啦。</p>]]></content>
      
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> roslyn </tag>
            
            <tag> compilation </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hackintosh-installation</title>
      <link href="/2018/04/12/hackintosh-installation/"/>
      <url>/2018/04/12/hackintosh-installation/</url>
      
        <content type="html"><![CDATA[<p>经历两天的挣扎终于重装了无限重启的黑苹果，做个小笔记。</p><p>公司用来做CI的黑苹果一直是长时间待机状态的。由于要安装TeamCity重启了一下就陷入了无限重启循环。原因估计是驱动问题导致的无法进入系统。<br>在Clover界面选择启动项开启SafeMode可以进入系统，但是显卡驱动异常（也可能是由于安全模式没有加载Kext）。</p><p>原先配置安装Hackintosh的Xiao老师离职之后，公司似乎就没有能够修复黑苹果的人了，不过问到了一个网站。</p><p><a href="https://tonymacx86.com" target="_blank" rel="noopener">tonymacx86</a></p><p>试图使用MultiBeast重刷一份efi驱动看能否正常进入系统，事实告诉我失败了。MultiBeast 无法在safe mode下运行。<br>手动mount efi的Volume也会失败。由于safe mode的安全机制无法加载msdos的filesystem，导致无法挂载。</p><h1 id="重装系统准备条件"><a href="#重装系统准备条件" class="headerlink" title="重装系统准备条件"></a>重装系统准备条件</h1><p>首先需要一台正常的Mac电脑。</p><p>需要的软件。</p><p>Clover boot loader efi引导程序，模拟苹果硬件环境使得原版macos镜像可以正常安装运行。<br>UniBeast  制作Clover 启动U盘的工具。（其实不是必须的）<br>MultiBeast 安装完系统后用来刷efi和安装驱动的工具</p><p>下载MacOS 10.13.3 high sierra.dmg 安装镜像。可以在MacStore上下载，这种方式需要开启ActivityMonitor查找实际下载的文件路径。<br>或者从网上下载他人分享的镜像。</p><h1 id="制作启动U盘"><a href="#制作启动U盘" class="headerlink" title="制作启动U盘"></a>制作启动U盘</h1><p>首先格式化U盘，U盘需要至少16G的大小。<br>格式化为 MacOS Extended (Journaled) Scheme: GUID Partition Map</p><p>mount macos的dmg 将install macos high sierra.app 拖动到Application下面。</p><p>Launch UniBeast, 选择UEFI boot 然后选择要安装的系统 High Sierra. 最后等待制作成功，这个过程大概 15-30mins (时间较长耐心等待，我之前一直是等了4-5分钟以为stuck就关闭了)。</p><p>另一种比较快速的方式是下载网络上已经集成好clover的dmg，格式化好U盘后直接copy就好。</p><h1 id="安装MacOS"><a href="#安装MacOS" class="headerlink" title="安装MacOS"></a>安装MacOS</h1><p>BIOS 设置 disable vt-d, disable secure boot.</p><p>将U盘插入hackintosh后（最好用USB2.0,避免兼容性问题），在BIOS中选择用U盘引导。成功进入Clover界面后不要马上选择安装系统。先到option的页面PCI,<code>Check USB-Ownership</code>和<code>USB-injection</code>.<br>记住在没有用MultiBeast装好驱动之前都需要勾选。</p><p>然后选择带External Icon的启动项launch macos install. 按Spacebar进入launch options 页面，如果hackintosh没有独显一定记得<code>uncheck set Nvidia to vesa</code>. 然后启动安装启动项。<br>这时候会有loading bar 结束后就会进入mac系统的安装界面。</p><p>具体的安装流程就是先使用diskutil格式化要安装的磁盘，这里是Samsung SSD，然后等待10-20分钟安装完成。完成后会自动reboot.</p><p>如果loading bar卡住，或者任何的异常，可以在launch option里面勾选verbose. 这样就会输出kext的debug log, 便于定位问题。</p><p>installation完成之后会自动reboot 这个时候记得BIOS依旧选择U盘启动，同时勾选两个USB option. 如果一切正常读条完成后就会进入mac configuration页面。这步骤结束之后又会reboot一次，就可以看到launch macos from MacHD(Disk name).</p><p>这时候记得还是要配置launch option.进入系统之后就是创建系统用户了，到此安装系统就结束了。</p><h1 id="安装驱动"><a href="#安装驱动" class="headerlink" title="安装驱动"></a>安装驱动</h1><p>进入系统后会发现显卡驱动不正常，启动MultiBeast 选择对应的网卡声卡以及显卡等驱动，等待安装结束后，efi中的驱动信息就被更新了。这个时候reboot.在BIOS中将启动项顺序切回SSD上的 UEFI。在进入Clover之后就会自动选择使用MacOS 启动，等待读条配置后使用MultiBeast的驱动就生效了，检查显卡是否正常。这时候就不再需要UniBeast来引导了。</p><h1 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h1><p><strong>使用安装盘Boot，提示：Error loading operating system</strong></p><p>确保正确格式化U盘</p><blockquote><p>Run Disk Utility, then select Show All Devices from the top left.<br>Now look for the parent name of your USB flash disk and select the parent name.<br>Only then will you see the different partition choices: GUID Partition Map, MBR, etc.<br>Select GUID Partition Map<br>And Erase the Flash disk as MacOS Extended Journaled (GUID)</p></blockquote><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>整个安装流程会由于hackintosh的硬件配置不同而出现各种不一样的问题。例如那个Nvidia driver 的选项在Xiao老师安装的时候是默认不勾选的，而我安装时时默认勾选的。但是由于我们的机器只有intel的核显，所以勾选就会出现<code>please switch to XPC</code>的错误，导致安装流程卡住。所以具体的情况具体分析，开始kernel log多google 问题就好了。</p><p>References</p><p><a href="http://hk2.zeddal.com/2017/11/29/hackintosh-installation-session/" target="_blank" rel="noopener">Blog of Xiao</a><br><a href="https://tonymacx86.com" target="_blank" rel="noopener">tonymacx86</a><br><a href="https://www.tonymacx86.com/threads/10-11-0-10-11-3-skylake-starter-guide.179221/" target="_blank" rel="noopener">Skylake Starter Guide</a><br><a href="https://blog.daliansky.net/macOS-High-Sierra-10.13.3-%2817D47%29-official-version-and-Clover-4391-original-image.html" target="_blank" rel="noopener">macOS High Sierra 10.13.3 mirror</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Other </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NPR油画风格着色器</title>
      <link href="/2018/03/11/shader-npr-oilpaint/"/>
      <url>/2018/03/11/shader-npr-oilpaint/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/shader-npr_oilpaint.png" alt="oilpaint-rendeirng"></p><p>非真实感风格化处理通常是降低像素的精度，减少细节或者以特殊的纹理进行覆盖。油画风格的特点为块状的笔触与色块，将画面色块化的方式一种是降低图像的色阶，但是使用这种方式会减少画面颜色的数量，与原图有较大的偏差的丢失。而使用类似聚类算法，将临近像素的颜色进行合并和混合可以达到较好的效果。</p><p>整体的计算流程是，对于一个像素，计算它相邻的10 * 10范围内的所有像素，取每个像素的RGB值之和取均值。将这些均值映射到20个梯度至内，每个像素落到一个梯度值就累加上像素颜色的值，同时梯度的索引加一。当遍历完所有的像素之后，选取索引次数最高的梯度的所有像素的平均值，作为该像素的颜色。</p><p>Unity ShaderLab中实现的具体代码如下:</p><figure class="highlight glsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Shader "Yemi/OilpaintShader" &#123;</span><br><span class="line">Properties &#123;</span><br><span class="line">_MainTex ("Albedo (RGB)", 2D) = "white" &#123;&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">SubShader &#123;</span><br><span class="line">Pass</span><br><span class="line">&#123;</span><br><span class="line">Name "Pass1"</span><br><span class="line">CGPROGRAM</span><br><span class="line"><span class="meta">#pragma vertex vert_img  </span></span><br><span class="line"><span class="meta">#pragma fragment frag </span></span><br><span class="line"><span class="meta">#pragma fragmentoption ARB_precision_hint_fastest  </span></span><br><span class="line"><span class="meta">#include "UnityCG.cginc"          </span></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">sampler2D</span> _MainTex;</span><br><span class="line"></span><br><span class="line">half4 frag(v2f_img i) : COLOR</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a[<span class="number">20</span>] = &#123; <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>, <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>, <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>, <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span> &#125;;</span><br><span class="line">half4 c[<span class="number">20</span>] = &#123;</span><br><span class="line">half4(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>),half4(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>),half4(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>),half4(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>),half4(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>),</span><br><span class="line">half4(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>),half4(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>),half4(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>),half4(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>),half4(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>),</span><br><span class="line">half4(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>),half4(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>),half4(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>),half4(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>),half4(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>),</span><br><span class="line">half4(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>),half4(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>),half4(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>),half4(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>),half4(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>),</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> x = <span class="number">-5</span>; x &lt;= <span class="number">5</span>; x++)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> y = <span class="number">-5</span>; y &lt;= <span class="number">5</span>; y++)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">half4 p1 = tex2D(_MainTex, i.uv + <span class="number">0.001</span>*half2(x,y));</span><br><span class="line"><span class="type">int</span> pi1 = <span class="type">int</span>((p1.r + p1.g + p1.b)/<span class="number">3.0</span> * <span class="number">19</span>);</span><br><span class="line">a[pi1] ++;</span><br><span class="line">c[pi1] += p1;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="keyword">index</span> = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> <span class="built_in">max</span> = a[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> n = <span class="number">0</span>; n &lt; <span class="number">20</span>; n++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (a[n] &gt;= <span class="built_in">max</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">max</span> = a[n];</span><br><span class="line"><span class="keyword">index</span> = n;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">half4 oc = c[<span class="keyword">index</span>] / <span class="built_in">max</span>;</span><br><span class="line">oc.a = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">return</span> oc;</span><br><span class="line">&#125;</span><br><span class="line">ENDCG</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line">FallBack "Diffuse"</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>由于每个像素要对贴图进行多达100次的采样和大量的计算该shader的耗时太长，不能实时运行。可以考虑将Framebuffer downsample之后进行采样，同时再加入随机值减少贴图采样的次数。</p>]]></content>
      
      
      <categories>
          
          <category> Shader </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shader </tag>
            
            <tag> NPR </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SharpDX中的Buffer更新</title>
      <link href="/2018/01/30/buffer-updating-on-sharpdx/"/>
      <url>/2018/01/30/buffer-updating-on-sharpdx/</url>
      
        <content type="html"><![CDATA[<p>最近在用C#写一个基于图形API的UI库，底层用的是Managed的DX库SharpDX。由于UI绘制会在每一个UI事件重绘，更新Buffer变得十分的频繁。在调试的过程中时不时会遇到一个C#的<code>System.AccessViolationException</code>。这个异常是用了<code>Intptr</code>指针在非托管层调用时越界导致的，搜索了很久最后还是自己思考下想通了。</p><p>调用的接口是<code>DeviceContext.UpdateSubresources</code>，在SharpDX中的代码如下。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> rawbuffer = buffer.GetRawObject() <span class="keyword">as</span> Buffer;</span><br><span class="line"><span class="keyword">if</span> (rawbuffer == <span class="literal">null</span>) <span class="keyword">throw</span> <span class="keyword">new</span> Exception();</span><br><span class="line"><span class="keyword">var</span> pinnedptr = GCHandle.Alloc(data, GCHandleType.Pinned);</span><br><span class="line">m_obj.UpdateSubresourceSafe(<span class="keyword">new</span> DataBox()</span><br><span class="line">&#123;</span><br><span class="line">  DataPointer = pinnedptr.AddrOfPinnedObject()</span><br><span class="line">&#125;,rawbuffer,subresources);</span><br><span class="line">pinnedptr.Free();</span><br></pre></td></tr></table></figure><p>其中<code>data</code>是一个数组，<code>rawbuffer</code>是一个vertexBuffer。我们先使用<code>GCHandler</code>把数组的内存位置固定住，然后将指针传递给DX,从指针位置拷贝数据到VertexBuffer中，最后释放Pin住的数组。之前在写代码的时候并没有考虑太多，忽略了这里的更新Buffer并没有传递拷贝的地址长度的参数。也就是说拷贝数据的时候是按照DX中Buffer的大小来进行复制的，而不是这个data对象的大小。这样由于data在托管内存中，当Buffer的大小大于data的大小时，拷贝的指针就会越界，从而抛出异常。</p><p>回头来看DirectX 11中的Buffer在创建Buffer的时候，有一个参数是Usage，这里我们只讨论<code>D3D11_USAGE_DEFAULT</code>和<code>D3D11_USAGE_DYNAMIC</code>。在Default的Buffer可使用<code>UpdateSubresources</code>的接口来更新Buffer数据，同时这个更新只能是一次性更新整个Buffer，就是上面说到的情况，不能只更新部分。而对于需要频繁动态更新的Buffer设置为<code>D3D11_USAGE_DYNAMIC</code>，图形API会进行性能优化，同时可以使用<code>Map</code>和<code>UnMap</code>来更新Buffer数据。 </p>]]></content>
      
      
      <categories>
          
          <category> Graphics </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> DirectX </tag>
            
            <tag> SharpDX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C# 中实现一个独立的partial class</title>
      <link href="/2017/11/18/csharp-independent-partial-class-hack/"/>
      <url>/2017/11/18/csharp-independent-partial-class-hack/</url>
      
        <content type="html"><![CDATA[<p>今天想要分享的是的是一个关于C#的hack，其实题目也想了好久并不知道如何描述这样一个东西。大致的描述就是我们需要一个partial的类，这个类被定义在两个.cs文件中，当两个文件同时编译或者是单个编译时不会有compile error。同时这两个文件有相同的完全的capabilities(大概可以用这个词来描述)。</p><p>其实这个需求不是十分直观的，只有在特定的环境下才会有这种需求。我们在Unity的项目中，定义了一个类来处理版本号，暂且定为ClassVersion。同时我们还有一个模块A，这个模块也需要依赖ClassVersion来定义一个版本号。所以当只有模块A时我们也需要ClassVersion的定义。但是如果当模块A导入到Unity项目中时，同样的定义就会出现SymbolRedefinded。在这种环境下，最终使用了一个十分hack的方式，在不使用反射的情况下满足了需求。</p><h2 id="尝试Partial"><a href="#尝试Partial" class="headerlink" title="尝试Partial"></a>尝试Partial</h2><p>很显然一来想到的是C#中的Partial。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//Unity classVersion_unity.cs</span></span><br><span class="line"><span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">ClassVersion</span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">GetMajor</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="comment">//...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//ModuleA classVersion_moduleA.cs</span></span><br><span class="line"><span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">ClassVersion</span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">GetMajor</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="comment">//...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样ClassVersion在各自独立的时候是正常的工作的，但是在合并时还是有<code>GetMajor()</code>这个方法的重定义。如果在不用反射，不使用不同函数名的情况下，始终是会有编译错误的。同时partial method 在这里也没有办法，partial method只能实现一次，所以一定有一边缺少实现。</p><h2 id="使用interface"><a href="#使用interface" class="headerlink" title="使用interface"></a>使用interface</h2><p>尝试把class 改成interface，两个partial的Interface在去掉是现实还是会有相同method的编译报错。不过最后发现了一个常常被忽略的特性。如果有两个接口，他们有相同的方法声明，那么一个实现这两个接口的类只要实现一次这样的方法，并且也不会有编译错误，具体的代码如下。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title">IVersionA</span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">GetMajor</span>(<span class="params"></span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title">IVersionB</span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">GetMajor</span>(<span class="params"></span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ClassVersion</span>: <span class="title">IVersionA</span>,<span class="title">IVersionB</span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">GetMajor</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="comment">//...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样我们就可以避开method重定义的Compile Error了。</p><h2 id="创建两个互补的-partial-interface"><a href="#创建两个互补的-partial-interface" class="headerlink" title="创建两个互补的 partial interface"></a>创建两个互补的 partial interface</h2><p><strong>Unity classVersion_unity.cs</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">interface</span> <span class="title">IVersionA</span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">interface</span> <span class="title">IVersionB</span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">GetMajor</span>(<span class="params"></span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">ClassVersionUnity</span> :<span class="title">IVersionA</span>,<span class="title">IVersionB</span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">GetMajor</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="comment">//...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>ModuleA classVersion_moduleA.cs</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">interface</span> <span class="title">IVersionA</span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">GetMajor</span>(<span class="params"></span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">interface</span> <span class="title">IVersionB</span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">ClassVersionModuleA</span> :<span class="title">IVersionA</span>,<span class="title">IVersionB</span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">GetMajor</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="comment">//...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样这两个.cs文件在独立编译与同时编译的情况下都不会有编译报错<br>在各自的环境中，只要转换为当前环境中带有实现的那个接口对象就可以直接调用方法了。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这种实现方式看起来并不优雅，代码的实现还是两份，这个是无法避免的。但是避免了使用反射和强制类型转换，使用接口限定了实现，总之一个比较hack的实现方式。</p>]]></content>
      
      
      <categories>
          
          <category> C# </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Unity </tag>
            
            <tag> C# </tag>
            
            <tag> hack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用cmake构建visual studio项目</title>
      <link href="/2017/10/04/cmake-notes/"/>
      <url>/2017/10/04/cmake-notes/</url>
      
        <content type="html"><![CDATA[<p>之前在写c++项目的时候，一直使用的是宇宙第一IDE Visual Studio，vs确实默默在后台做了许多事情，你只用管写代码其他的都不用操心。但是当项目引入大量的第三方库的时候，许多构建相关的配置就会比较麻烦。考虑到Rigel(一个巨大的轮子)这个项目后续需要支持多平台构建，所以打算试试使用cmake组织整个工程。</p><p>对于cmake使用其实没有太多经验的，主要是之前在编译一些第三方库的时候，libpng freetype之类的。一行命令行脚本 <code>cmake ./</code> 然后自动生成了sln项目，后面就是熟悉的visual studio了。</p><a id="more"></a><h2 id="cmake初体验"><a href="#cmake初体验" class="headerlink" title="cmake初体验"></a>cmake初体验</h2><h3 id="创建cmake工程"><a href="#创建cmake工程" class="headerlink" title="创建cmake工程"></a>创建cmake工程</h3><p>在项目目录下创建一个<code>CMakeLists.txt</code>创建好了一个cmake工程。</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#指定cmake的最小版本</span></span><br><span class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">3.2</span>)</span><br><span class="line"><span class="comment">#制定项目的名称</span></span><br><span class="line"><span class="keyword">project</span>(Rigel)</span><br></pre></td></tr></table></figure><p>在一个大型的项目中可能会有很多子工程，就类似于vs中的解决方案和项目的关系。可以对每个子项目指定一个<code>CMakeLists.txt</code>文件，子项目可以是一个静态库动态库或者是可执行程序等等。</p><p>在主的CMakeLists文件中添加<code>add_subdirectory([sub folder path])</code> 就可以引入子工程的配置。</p><h3 id="配置生成的项目"><a href="#配置生成的项目" class="headerlink" title="配置生成的项目"></a>配置生成的项目</h3><p>接下来就要添加项目了<br><code>add_executable([target name] [source files...])</code> add_executable可以为项目添加一个可执行工程<br><code>add_library([target name] [source files...])</code> 对于项目中静态库和动态库可以使用add_library进行添加</p><p>如果项目只有一个<code>main.cpp</code> 那么<code>add_executable(testproj main.cpp)</code>，生成的sln中就会把main.cpp添加到testproj这个项目的源文件下面。</p><p>项目依赖配置<br>我们可以指定一个target依赖其他的库项目的target<br><code>add_dependencies(RigelEditor rgcore)</code></p><h3 id="多源文件的配置"><a href="#多源文件的配置" class="headerlink" title="多源文件的配置"></a>多源文件的配置</h3><p>如果有多个源文件可以直接在source files里面添加<code>add_executable(testproj xxx1.cpp xxx2.cpp...)</code>。</p><p>当然可以使用<code>aux_source_directory([Path] [Variable])</code>命令来获取一个目录下的的所有源文件 然后储存在变量<code>Variable</code>中</p><p>还可以使用<code>FILE()</code> 方法来获取<br>几个简单的例子</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FILE</span>(GLOB HEAD_RIGEL_EDITOR ./<span class="keyword">include</span>/*.h)  <span class="comment">#GLOB 获取./include/目录下的*.h 储存在变量HEAD_RIGEL_EDITOR中</span></span><br><span class="line"><span class="keyword">FILE</span>(GLOB_RECURSE SRCS_RIGEL_EDITOR ./source/*.cpp)<span class="comment">#GLOB 递归获取./include/目录和子目录下的*.cpp 储存在变量HEAD_RIGEL_EDITOR中</span></span><br></pre></td></tr></table></figure><p><code>add_executable(testproj ${HEAD_RIGEL_EDITOR} ${SRCS_RIGEL_EDITOR})</code><br>这样我们就可以给项目添加多个源文件了</p><p><strong>CMAKE生成的sln工程中不会把源文件拷贝到build的目录中，而是通过引用文件的方式</strong></p><h3 id="引用路径与库目录"><a href="#引用路径与库目录" class="headerlink" title="引用路径与库目录"></a>引用路径与库目录</h3><p>我们添加了一个子项目后还需要设置include的路径，来添加对头文件的引用。<br><code>target_include_directories(RigelEditor PUBLIC ./include/rgeditor)</code><br>这样就给RigelEditor这target添加了一个include的路径<code>./include/rgeditor</code>。</p><p>添加link的库文件<br><code>target_link_libraries(RigelEditor rgcore)</code><br>如果需要添加第三方的库文件,可以直接引用库文件的路径。</p><p>需要注意的是使用CMAKE_SOURCE_DIR可以获取到源文件的目录而不是生成的目录。</p><p><code>target_link_libraries(rgcore ${THIDPART_LIB_DIR}\\freetype\\libs\\x64\\freetype28.lib)</code></p><h2 id="cmake其他配置"><a href="#cmake其他配置" class="headerlink" title="cmake其他配置"></a>cmake其他配置</h2><h3 id="源文件分组"><a href="#源文件分组" class="headerlink" title="源文件分组"></a>源文件分组</h3><p>在visual studio中我们可以添加筛选器给源文件进行分组。cmake提供了<code>source_group()</code>来支持这一特性。</p><p><code>source_group</code>需要写在<code>add_library</code>或者<code>add_executable</code>之后<br>下面是使用的示例：</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FILE</span>(GLOB SRCS_RGGRAPHICS_CORE ./source/*.cpp)</span><br><span class="line"><span class="keyword">FILE</span>(GLOB SRCS_RGGRAPHICS_DIRECTX11 ./source/directx11/*.cpp)</span><br><span class="line"></span><br><span class="line"><span class="keyword">FILE</span>(GLOB HEAD_RGGRAPHICS_CORE ./<span class="keyword">include</span>/rggraphics/*.h)</span><br><span class="line"><span class="keyword">FILE</span>(GLOB HEAD_RGGRAPHICS_DIRECTX11 ./<span class="keyword">include</span>/rggraphics/directx11/*.h)</span><br><span class="line"></span><br><span class="line"><span class="keyword">add_library</span>(rggraphics STATIC <span class="variable">$&#123;HEAD_RGGRAPHICS&#125;</span> <span class="variable">$&#123;SRCS_RGGRAPHICS&#125;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">source_group</span>(<span class="string">"source\\core"</span> FILES <span class="variable">$&#123;SRCS_RGGRAPHICS_CORE&#125;</span>)</span><br><span class="line"><span class="keyword">source_group</span>(<span class="string">"source\\directx11"</span> FILES <span class="variable">$&#123;SRCS_RGGRAPHICS_DIRECTX11&#125;</span>)</span><br><span class="line"><span class="keyword">source_group</span>(<span class="string">"header\\core"</span> FILES <span class="variable">$&#123;HEAD_RGGRAPHICS_CORE&#125;</span>)</span><br><span class="line"><span class="keyword">source_group</span>(<span class="string">"header\\directx11"</span> FILES <span class="variable">$&#123;HEAD_RGGRAPHICS_DIRECTX11&#125;</span>)</span><br></pre></td></tr></table></figure><p><code>set_property(GLOBAL PROPERTY USE_FOLDERS ON)</code>打开USE_FOLDERS的配置</p><p><img src="/images/cmake_source_group.png" alt="cmake source_group"></p><h3 id="判定编译的Architecture"><a href="#判定编译的Architecture" class="headerlink" title="判定编译的Architecture"></a>判定编译的Architecture</h3><p>有时候我们的配置需要区别64位与32位，如一些静态库动态库的版本不同，就需要在cmake中判断当前配置是否是64位。<br>CMAKE提供了<code>CMAKE_CL_64</code>这个变量来判定</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(CMAKE_CL_64)</span><br><span class="line">    <span class="comment">#link 64位库文件</span></span><br><span class="line"><span class="keyword">else</span>()</span><br><span class="line">    <span class="comment">#link 32位库文件</span></span><br><span class="line"><span class="keyword">endif</span>()</span><br></pre></td></tr></table></figure><h3 id="Configuration-Debug-Release的判定"><a href="#Configuration-Debug-Release的判定" class="headerlink" title="Configuration Debug/Release的判定"></a>Configuration Debug/Release的判定</h3><p>有时候我们需要区别Debug/Release build<br><code>$<$<a href="CONFIG:DEBUG">CONFIG:DEBUG</a>:${BUILD_DIR_RIGELEDITOR_DEBUG}>$<$<a href="CONFIG:RELEASE">CONFIG:RELEASE</a>:${BUILD_DIR_RIGELEDITOR_RELEASE}></code><br>这个值在Debug的配置下输出${BUILD_DIR_RIGELEDITOR_DEBUG}在Release下则是<br>${BUILD_DIR_RIGELEDITOR_RELEASE}</p><h3 id="指定build输出目录"><a href="#指定build输出目录" class="headerlink" title="指定build输出目录"></a>指定build输出目录</h3><p>生成sln会给每个子项目生成自己的输出路径一般情况下是<br><code>$(ProjectDir)$(PlatformTarget)$(Configuration)</code><br>如<code>TestProj/x64/Debug</code>这样的路径<br>在cmake中我们可以制定一个target生成的路径便于我们执行post-build的脚本来做一些处理</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set_target_properties</span>(RigelEditor PROPERTIES </span><br><span class="line">    RUNTIME_OUTPUT_DIRECTORY_DEBUG <span class="variable">$&#123;BUILD_DIR_RIGELEDITOR_DEBUG&#125;</span></span><br><span class="line">    RUNTIME_OUTPUT_DIRECTORY_RELEASE <span class="variable">$&#123;BUILD_DIR_RIGELEDITOR_RELEASE&#125;</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><h3 id="自定义命令处理post-build"><a href="#自定义命令处理post-build" class="headerlink" title="自定义命令处理post-build"></a>自定义命令处理post-build</h3><p>项目生成之后如果有文件需要拷贝，在vs中可以使用生成事件-后期生成事件-命令行来添加命令。cmake中也可以指定这样的生成事件的配置。</p><p><code>add_custom_command(TARGET RigelEditor POST_BUILD COMMAND xcopy ARGS ${CMD_COPY_DATA})</code><br>这样指定了RigelEditor在Post Build阶段执行 xcopy的命令行 参数为 ${CMD_COPY_DATA}</p><p>生成sln之后再后期生成事件中就可以看到cmake添加的命令</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">setlocal</span></span><br><span class="line"><span class="built_in">xcopy</span> "F:/_Proj_RgEngine/ProjRigel/Rigel\resources\Data" "F:/_Proj_RgEngine/ProjRigel/Build/win64\Build\RigelEditor_Debug\Data\" /E /Y</span><br><span class="line"><span class="keyword">if</span> <span class="variable">%errorlevel%</span> <span class="keyword">neq</span> <span class="number">0</span> <span class="keyword">goto</span> :cmEnd</span><br><span class="line">:cmEnd</span><br><span class="line"><span class="built_in">endlocal</span> &amp; <span class="keyword">call</span> :cmErrorLevel <span class="variable">%errorlevel%</span> &amp; <span class="keyword">goto</span> :cmDone</span><br><span class="line">:cmErrorLevel</span><br><span class="line"><span class="keyword">exit</span> /b %<span class="number">1</span></span><br><span class="line">:cmDone</span><br><span class="line"><span class="keyword">if</span> <span class="variable">%errorlevel%</span> <span class="keyword">neq</span> <span class="number">0</span> <span class="keyword">goto</span> :VCEnd</span><br></pre></td></tr></table></figure><h2 id="cmake杂项"><a href="#cmake杂项" class="headerlink" title="cmake杂项"></a>cmake杂项</h2><p>###VC++ Unicode支持<br>在vc++中定义<code>UNICODE</code>与<code>_UNICODE</code>这两个宏，字符串就自动使用了宽字节版本的。所以我们需要在cmake中设定宏，否则编译会报错，使用visual stuido直接创建项目时会直接帮我们设置的好(再一次赞美下VisualStudio)<br><code>add_definitions(-DUNICODE -D_UNICODE)</code></p><p>###Visual Studio中配置预编译头<br>vs中通过配置预编译头文件加快项目的编译速度。可以通过设置Compile Flags /Yc /Yu添加预编译头的配置</p><p>使用CMake进行构建时,<code>set_source_files_properties</code>命令可以对源文件添加编译器参数</p><p>为了给多个子项目都配置预编译头文件，使用CMake的macro来批量处理。<br>定义两个macro <code>set_pch</code> <code>use_pch</code></p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">macro</span>(set_pch VARCPP VARHEADER)</span><br><span class="line">    <span class="keyword">set_source_files_properties</span>(<span class="variable">$&#123;VARCPP&#125;</span> PROPERTIES COMPILE_FLAGS <span class="string">"/Yc$&#123;VARHEADER&#125;"</span>)</span><br><span class="line"><span class="keyword">endmacro</span>(set_pch)</span><br><span class="line"><span class="keyword">macro</span>(use_pch VARSOURCES VARHEADER)</span><br><span class="line">    <span class="keyword">foreach</span>( src_file <span class="variable">$&#123;VARSOURCES&#125;</span>)</span><br><span class="line">        <span class="keyword">set_source_files_properties</span>(<span class="variable">$&#123;src_file&#125;</span> PROPERTIES COMPILE_FLAGS <span class="string">"/Yu$&#123;VARHEADER&#125;"</span>)</span><br><span class="line">    <span class="keyword">endforeach</span>( src_file <span class="variable">$&#123;VARSOURCES&#125;</span>)</span><br><span class="line"><span class="keyword">endmacro</span>(use_pch VARHEADER VARSOURCES)</span><br></pre></td></tr></table></figure><p>使用方式<br>假设预编译头文件为stdafx.h则所有的.cpp文件除了stdafx.cpp需要设置 /Yustdafx.h，使用预编译头。<br>stdafx.cpp设置 /Ycstdafx.h，生成预编译头。</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">use_pch(<span class="string">"$&#123;SRCS_RGCORE&#125;"</span> <span class="string">"rgcore.h"</span>)</span><br><span class="line">set_pch(./source/rgcore.cpp <span class="string">"rgcore.h"</span>)</span><br></pre></td></tr></table></figure><p><strong>一个常见的错误 调用cmake中的方法与宏时 如果需要传入的参数为数组 正确的写法应该是<code>&quot;${VARNAME}&quot;</code> 而不是<code>${VARNAME}</code></strong></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>大概花了半天的时间将<a href="https://github.com/ProgRigel/ProjRigel" target="_blank" rel="noopener">Rigel</a> 从sln迁移到了cmake来构建。上文大概就是在配置过程中遇到的坑以及解决的方法的总结，提及到的cmake命令可以满足基本的项目构建了。<br>cmake使用起来感觉确实很方便，比起直接设置vs sln中的配置之类的，后续应该就会都用cmake了吧。</p><hr><p>更新记录</p><ul><li>2017-10-04 文章发布</li><li>2017-10-13 添加了Visual Stdudio 预编译头配置</li></ul>]]></content>
      
      
      <categories>
          
          <category> Continuous Integration </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cmake </tag>
            
            <tag> visual studio </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在Visual Studio中自定义预编译头文件</title>
      <link href="/2017/09/14/vs-precompiled-header/"/>
      <url>/2017/09/14/vs-precompiled-header/</url>
      
        <content type="html"><![CDATA[<p>预编译头文件可以加快整个工程的编译速度，对于大型项目来说尤为重要。将大部分不太变化的头文件在预编译头文件中定义，会减少这部分头文件重新编译的时间。</p><p>VC++中创建win32工程时如果配置了开启预编译头文件会自动生成一个Stdafx.h以及对应的Stdafx.cpp。同时需要在整个项目中的所有cpp源文件引用该头文件。如缺少了引用则会抛出错误<code>C1010: 在查找预编译头时遇到意外的文件结尾。</code></p><p>由于先前在编写项目时创建的是一个空项目，就需要在后来指定pch。打开项目属性页选择C/C++/预编译头。配置预编译头文件为自定义的头文件，如rgcore.h 同时在第一栏的预编译头的配置中选择 <code>使用/Yu</code>。</p><p>对于rgcore.h这个预编译头文件对应的rgcore.cpp右键该文件打开配置在相同的位置选择 <code>创建/Yc</code></p><p>如果对应的.cpp文件也是设置为<code>使用/Yu</code> 则会抛出<code>C1854: 无法覆盖在创建对象文件“rgcore.obj”的预编译头过程中形成的信息</code></p><a id="more"></a>]]></content>
      
      
      <categories>
          
          <category> Continuous Integration </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> Visual Studio </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DirectX-DeferredContext与multipass rendering</title>
      <link href="/2017/09/11/directx-note-2/"/>
      <url>/2017/09/11/directx-note-2/</url>
      
        <content type="html"><![CDATA[<p>DirectX11中有两种渲染方式，Immediate Rendering与Deferred Rendering。这里的延迟渲染与 实时渲染中的延迟渲染不是同一种概念，DX中的Deferred Context是在图像api层面绘制指令DrawCall的延迟，而实时渲染中的Deferred Rendering是利用GBuffer对渲染对象进行延迟着色。Deferred Context可以用来实现多线程渲染，最大程度上利用CPU与GPU的性能。</p><h2 id="多线程渲染"><a href="#多线程渲染" class="headerlink" title="多线程渲染"></a>多线程渲染</h2><p>多线程渲染在我看来强调的是CPU层面的多线程，而GPU的渲染指令都是顺序执行的，而渲染本身由于GPU并行计算的架构始终是多线程的。在游戏运行的过程中，每一帧都有大量繁重的计算，CPU端的逻辑预算和GPU端的绘制。而游戏运行的帧率取决于最慢的一方。对于渲染的流程来说，CPU将绘制的图元数据传递到GPU然后GPU收到绘制指令开始绘制。这一流程是有先后顺序的。每个CPU调用绘制或者是设置渲染状态的命令都需要等待GPU完成后才能执行下一个命令。</p><p>CPU端的多线程在于可以开启多个线程同时创建好一系列的指令并且做好CPU端的所有准备工作。然后再将这些指令列表顺序提交给GPU。这样就可以减少调用图像指令的同步时间，以减少CPU的时间消耗。</p><a id="more"></a><p>D3D11中可以创建多个DeferredContext, 可以对DeferredContext调用所有的渲染管线状态设置以及绘制的命令。然后将其储存在一个Command List中。 最后在执行真正的绘制时使用ImmediateContext执行CommandList。就可以一次性把一批次指令提交GPU。这里需要注意的是ImmediateContext本身不是线程安全的。</p><p>类似于Unity中的CommandBuffer可以将一系列绘制命令提交给GPU执行，但是在Unity中CommandBuffer只是在上层应用层提供渲染管线扩展的能力。多线程渲染的另一个用处是可以将所有的绘制分割成不同的渲染任务，每个任务在各自命令列表中进行调用，维护独立的渲染管线状态。避免上一个绘制指令的管线状态影响到后续的绘制。</p><h2 id="Multipass渲染"><a href="#Multipass渲染" class="headerlink" title="Multipass渲染"></a>Multipass渲染</h2><p>Multipass(多通道渲染，不知道是不是比较准确的翻译)渲染是一个更加上层的概念。在图像API层面并没有多通道渲染的概念。OpenGL D3D等等底层API没有相应的对象和接口，就像我们在游戏引擎里面看到的材质Material，也是应用层抽象出来的概念。</p><p>在Unity ShaderLab的语法中我们可以这样定义一个Shader。Shader中支持MultiPass,几乎所有的游戏引擎都支持MultiPass。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Shader&#123;</span><br><span class="line">    SubShader&#123;</span><br><span class="line">        Pass&#123;</span><br><span class="line">            &#x2F;&#x2F;Pass 1</span><br><span class="line">        &#125;</span><br><span class="line">        Pass&#123;</span><br><span class="line">            &#x2F;&#x2F;Pass</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>那么为什么需要多通道渲染呢？之前和老大讨论之后，有了一些更深的理解。</p><h3 id="多通道渲染的实现"><a href="#多通道渲染的实现" class="headerlink" title="多通道渲染的实现"></a>多通道渲染的实现</h3><p>多通道渲染是对图像API的组织结构，例如在DX11中渲染一个对象，通常的做法如下</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">deviceContext-&gt;SetVertexBuffer();</span><br><span class="line">deviceContext-&gt;SetIndicesBuffer();</span><br><span class="line">deviceContext-&gt;SetVertexShader();</span><br><span class="line">deviceContext-&gt;SetPixelShader();</span><br><span class="line">deviceContext-&gt;SetPipelineState();</span><br><span class="line"></span><br><span class="line">deviceContext-&gt;DrawIndices(); <span class="comment">//draw call</span></span><br></pre></td></tr></table></figure><p>先设置绘制的buffer数据然后进行设置shader最后调用draw call。而MultiPassShader的流程是</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">deviceContext-&gt;SetVertexBuffer();</span><br><span class="line">deviceContext-&gt;SetIndicesBuffer();</span><br><span class="line"></span><br><span class="line">deviceContext-&gt;SetVertexShader();   <span class="comment">//Pass 1</span></span><br><span class="line">deviceContext-&gt;SetPixelShader();    <span class="comment">//Pass 1</span></span><br><span class="line">deviceContext-&gt;SetPipelineState();  <span class="comment">//Pass 1 State</span></span><br><span class="line">deviceContext-&gt;DrawIndices();       <span class="comment">//Pass 1 draw call</span></span><br><span class="line"></span><br><span class="line">deviceContext-&gt;SetVertexShader();   <span class="comment">//Pass 2</span></span><br><span class="line">deviceContext-&gt;SetPixelShader();    <span class="comment">//Pass 2</span></span><br><span class="line">deviceContext-&gt;SetPipelineState();  <span class="comment">//Pass 2 State</span></span><br><span class="line">deviceContext-&gt;DrawIndices();       <span class="comment">//Pass 2 draw call</span></span><br></pre></td></tr></table></figure><p>每个Pass可以认为是一个多层材质的一层，在渲染时共用模型数据。大部分情况下每个Pass可以在DeferredContext中绘制最后依次将CommandList进行绘制。（在调用DrawCall的时候Pass之间是一定是有先后顺序的，在Unity的ShaderLab中使用的是<code>Queue</code>这个Tag对Pass的调用进行排序。）</p><p>之前思考过上每个Pass可以设置不同的RenderTarget，如果两个Pass之间没有先后的依赖关系，GPU应该可以同时进行绘制。但是这层的优惠应该是在驱动层做的优化，GPU在进行一个Shader绘制的时候是不是会使用掉所有的Streaming Multiprocessor，多个Pass能不能并行计算。可能需要了解更多GPU架构方面的知识。</p><h3 id="为什么需要多通道渲染"><a href="#为什么需要多通道渲染" class="headerlink" title="为什么需要多通道渲染"></a>为什么需要多通道渲染</h3><p>上面描述了多通道渲染大概的实现方式，通常情况下的着色器效果其实在一个Pass里就可以完成。但是很多复杂的效果可能需要对渲染对象进行多次的渲染最后才能计算出最终的颜色。例如一些光照计算，阴影贴图实现阴影等等效果。在多通道渲染的每个Pass之间是可以使用Blend混合，Stencil模板以及自定义深度测试和计算。这样在不同Pass之间就可以依次把每个通道计算的颜色深度和模板进行了混合。不需要耗费额外的DrawCall来把多次渲染的结果进行一个Merge（类似Unity中的Graphics.Bilt操作）</p><p>多通道渲染的设计方式使得多个DrawCall绘制结果的混合更加简便，实际上并不会在图像API层面提升性能和运算量。</p>]]></content>
      
      
      <categories>
          
          <category> Graphics </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DirectX </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Effective C++ 阅读笔记</title>
      <link href="/2017/07/17/effective-cpp-note/"/>
      <url>/2017/07/17/effective-cpp-note/</url>
      
        <content type="html"><![CDATA[<p>effective c++ 读完有一种醍醐灌顶的感觉。之前使用C++编程时在许多结构以及用法上都模糊不清，对于不同的需求可能有多种不同的实践，但是并不了解什么才是最佳实践或者说是有没有最佳实践。Effective可以给你一些答案。</p><hr><p>4.避免对象在初始化之前使用它<br>不同编译单元内的 non-local static对象 初始化先后顺序的处理<br>将该对象声明在为函数的 local static 对象</p><p>为内置类型对象进行初始化 在方法中的内置类型对象c++不保证初始化他们</p><p>5.了解c++默默编写调用了哪些函数</p><p>c++会在默认情况下生成 析构，复制构造 复制赋值函数<br>如果没有定义默认构造函数 则会自动生成构造函数<br>【默认生产的析构函数是非virtual 除非基类的析构函数是virtual的】</p><p>自动创建的赋值构造函数会把每一个non-static成员拷贝到目标对象</p><p>如果在一个含有reference成员的class内支持赋值操作 必须自行定义copy assignment<br>基类的copy assignment为private 则也无法自动生成copy assignment</p><p>6.阻止编译器自动生成函数<br>声明private 的复制构造与赋值构造函数 不定义，阻止使用赋值构造</p><p>不定义只生命会在link期报错而不是编译期，可以创建一个基类来实现防止拷贝构造<br>protected： 构造函数，析构函数<br>private：复制构造，赋值构造</p><a id="more"></a><p>7.对于那些不作为基类的class 声明virtual方法会增加内存大小 虚函数表vptr<br>std::string 不含有任何virtual函数 不能作为基类<br>c++ 没有sealed的禁止派生的机制</p><p>带有多态性质的base class 应该声明一个virtual析构函数<br>class如果不是为了作为基类使用，不该声明virtual析构</p><p>8.析构函数中的异常<br>std::abort() 强制结束<br>析构函数要捕获任何异常，swallow or abort<br>提供一个方法进行析构</p><p>9.不要在构造函数或析构函数中调用virtual<br>构造函数内的virtual函数不会调用derived 对象的实现<br>确定构造函数和析构函数内部不会调用任何热virtual函数</p><p>替代实现方式是创建一个非virtual方法，将参数传递到基类</p><p>10.operator= 返回一个reference to *this<br>int x,y,z;x=y=z=15<br>+= -= *= =</p><p>11.在operator中处理自我赋值</p><p>w&amp; operator=(const w&amp; rhs){<br>    if(this == &amp;rhs) return *this;    //identity test<br>}</p><p>手动控制顺序</p><p>使用copy and swap 交换数据</p><p>copy assignment 声明为by value形式 然后直接使用swap</p><ol start="12"><li>复制对象时不要忘记任何一个成员<br>derived class 的复构造函数必须复制其base class的成分。调用base class 的cctor 在初始化列表中。</li></ol><p>13.以对象管理资源</p><p>auto_ptr-&gt;unique_ptr 在对象释放的时候自动delete<br>RAII 资源取得的时机便是初始化时机</p><p>auto_ptr如果通过复制构造或者赋值构造 复制 自身会变成null</p><p>RCSP reference-counting smart pointer<br>shared_ptr</p><p>智能指针在析构时都是调用 delete 而不是delete []</p><p>14.资源管理中小心复制行为<br>抑制复制 使用引用计数</p><p>15.在资源管理类中提供对原始资源的访问<br>get() 方法暴露原始资源 或者使用隐式转换<br>隐式转换会出现一些其他的问题</p><p>16.使用new 和 delete时要采取相同的形式<br>最好不要对数组形式做typedef 难以正确delete []</p><p>17.以独立语句new 对象置入智能指针<br>new对象置入智能指针中是 要独立调用 不然可能会由于异常导致一些奇怪的情形</p><p>19.设计class犹如设计type<br>type的对象如何被创建与销毁<br>对象的初始化与赋值有什么样的差别<br>对象如果以值类型传递会如何<br>什么是type的合法值<br>type的继承关系是什么<br>新的type需要什么样的类型转换<br>什么样的操作符对新的type是合理的<br>什么样的标准函数需要驳回 private<br>那些成员时public 与private的<br>是否是需要定义成模板</p><ol start="20"><li>用pass-by-reference-to-const 替换pass-by-value<br>pass by value会造成 对象的切割 变为基类对象 如有<br>内置类型使用值传递</li></ol><p>21.在必须返回对象时不要返回其引用<br>在堆上或栈上创建对象都会导致问题 直接返回其值类型 会多一次复制构造函数 但是避免了一些其他的问题</p><p>22.将成员变量声明为private<br>将成员变量封装到getter setter中 便于修改实现<br>成员变量内容发生改变时的破坏量越小</p><p>protected 变量在修改时也可能需要对大量的derived 类进行修改<br>protected成员像public成员一样缺乏封装性</p><ol start="23"><li>prefer non-member non-friend 替换membr函数</li></ol><p>把便利函数放在相同的namespace下面</p><p>24.若所有参数皆需要类型转换，请使用non-member函数</p><p>隐式转换的 operator重载，所有参数都要隐式转换时 不要定义在成员函数中</p><p>25.写一个不抛出异常的swap函数<br>pimpl模式 swap指针<br>默认的swap会创建一个temp对象</p><p>当std::swap效率不高是 提供一个swap成员函数，并确定该函数不抛出异常<br>提供一个member swap 也提供一个non-member 调用前者<br>using std::swap 然后调用swap</p><p>26.尽可能延后变量定义式的出现时间<br>定义变量 + 拷贝赋值 = 复制构造 减少构造函数的调用<br>变量在循环中定义 还是在循环外声明在循环内做赋值 那种效率更高？</p><p>27.尽量减少类型转换<br>(T)expr T(expr)<br>const_cast<T>()    消除const<br>dynamic_cast<T>()     向继承链上转换 可能耗费重大成本<br>reinterpret_cast<T>()    低级转换 bitwise?<br>static_cast<T>()    强迫隐士转换 non-const-&gt;const int-&gt;double void*-&gt;typed ptr<br>c++中一个对象可能有很多个布局地址，多重继承的每个基类带有一个offset</p><p>使用dynamic_cast 在一个base ptr上 操作derived class的方法，你认定他是指向derived instance</p><p>解决方式：在base type中定义一个virtual 方法</p><p>avoid cascading dynamic_cast -&gt;use virtual function</p><p>28.避免返回handles指向对象内部成分<br>返回成员变量的指针或引用  加上const 防止被修改<br>即使加上const也是危险的 可以通过该handler的方法的返回值进行修改</p><p>29.exception-safe code<br>copy and swap 实现强异常安全<br>all or none</p><p>30.透彻了解inline<br>inline 是对编译器的申请，而不是强制<br>隐喻地提出inline，class 内部的成员函数<br>inline 和template通常都被定义与头文件中<br>function template不一定要inline</p><p>由于编译时进行inline 编译器需要知道方法具体的实现（vm 可以在运行时进行inline）<br>template 也需要别置于头文件 实现模板需要知道template的具体实现</p><p>virtual 方法不能inline 因为虚函数表依赖运行时进行调用<br>通过函数指针产生的调用也不会inline</p><p>inline函数无法进行升级 需要重新编译 non-inline只需要重新链接</p><p>31.将文件间的编译依存关系降低至最低<br>如果可以使用 obj ref 或obj ptr实现就不要使用obj<br>如果可以，尽量以class声明替换class 定义</p><p>handle classes and interface classes<br>full and declearation-only forms header</p><p>32.确保public 继承为 is-a的关系<br>public inheritance means the relation of ‘is-a’</p><p>33.避免遮掩继承而来的名称<br>derived class 内的名称会覆盖base class内的名称</p><p>34.区分接口继承和实现继承</p><p>可以给pure virtual 函数提供定义，调用的唯一途径是class::function<br>impure virtual 函数 derived class 可以override<br>impure virtual 会在子类未声明的情况下默默继承基类的实现，缺省实现有时候会造成问题<br>解决方案 声明一个non-virtual 方法 再声明一个pure virtual 默认实现时调用non-virtual方法</p><p>pure virtual    继承接口<br>impure virtual    继承接口和一份默认实现<br>non virtual    继承接口和一份强制实现</p><p>35.考虑virtual 函数外的其他选择</p><p>public non-virtual 成员函数间接调用private virtual 函数 non-virtual interface(NVI)<br>template method 设计模式。<br>NVI不一定是private方法 也可以是protected<br>NVI替代public virtual函数</p><p>基于function pointer实现strategy模式</p><p>36.绝不要重新定义继承而来的non-virtual 函数<br>viruta函数是动态绑定的 non-virtual是非动态绑定的<br>重新定义基类的non-virtual会导致一些不可意料的情况，取决于声明的指针类型</p><p>37.不要重新定义继承而来的缺省参数<br>virtual函数是动态绑定的 但是缺省参数是静态绑定的<br>最终调用derived class的方法时会使用base class 的参数<br>C++为了运行效率对缺省参数的绑定实现为静态绑定<br>使用NVI避免重新编写缺省参数</p><ol start="38"><li>复合 is-implemented in terms of / has a</li></ol><p>39.明智而谨慎地使用private 继承<br>private 继承 编译器不会自动将一个derived class对象转换为base class 对象<br>private继承而来的所有成员在derived class 中都会变成private</p><p>private意味着只有实现部分被继承，接口部分应略去。<br>private inherit means is-implemented-in-terms-of</p><p>尽量使用复合，必要时才使用private 继承</p><p>不存在is-a的关系的两个class，一个需要访问另一个的protected成员，或需要重新定义其一个或多个virtual函数，可以使用private集成<br>private 集成可以造成EBO empty base optimize<br>40.明智而审慎地使用多重继承</p>]]></content>
      
      
      <categories>
          
          <category> C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>c# Attribute 使用约束</title>
      <link href="/2017/07/01/csharp_attribute_constraint/"/>
      <url>/2017/07/01/csharp_attribute_constraint/</url>
      
        <content type="html"><![CDATA[<p>Attribute是C#中一个广泛使用的特性，通过使用Attribute对程序集中的类型进行标记，并通过Reflection实现一些特殊的需求，同时Attribute也可以在编译时储存一些静态信息。但是在使用Attribute时也有一些限制。</p><h2 id="问题的提出"><a href="#问题的提出" class="headerlink" title="问题的提出"></a>问题的提出</h2><p>目前工作中主要是编写与维护一套在Unity中使用的Continuous Integration 框架。在这套框架中大量使用了Attribute来对集成的第三方SDK进行标记，来进行一些处理。最初的做法是一些SDK，通过约定静态方法，在CI的其他阶段进行调用</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SDKA</span> :<span class="title">SDKBase</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">ModifyConfig</span>(<span class="params"><span class="keyword">ref</span> Hashtable config</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="comment">//SDK do modify</span></span><br><span class="line">    &#125;</span><br><span class="line">  ....</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过反射调用该方法的代码如下</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SDKsModifyConfig</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  Type[] sdktypes = assembly.GetTypes();</span><br><span class="line">  <span class="comment">//过滤所有的的SDK类型</span></span><br><span class="line">  ...</span><br><span class="line">    <span class="keyword">foreach</span>(<span class="keyword">var</span> tsdk <span class="keyword">in</span> sdktypes)</span><br><span class="line">    &#123;</span><br><span class="line">        MethodInfo method = tsdk.GetMethod(<span class="string">"ModifyConfig"</span>, BindingFlags.Public | BindingFlags.Static | BindingFlags.NonPublic);</span><br><span class="line"></span><br><span class="line">        method.Invoke(<span class="literal">null</span>, config);</span><br><span class="line">    &#125;</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对于这种调用方式，不太好的地方是参与开发SDK的人员必须约定用于反射的方法名，以及该方法的参数。每次接入SDK编写一个SDK的类型都需重新编写，容易造成错误（error-prone）。</p><a id="more"></a><p>如果我们使用在基类定义方法，在子类覆盖的形式，这样可以避免发生错误，同时IDE的自动完成可以帮助我们完成代码。但是这样在反射的时候就需要有类的对象，而其实我们所需要的方法是针对与类的静态方法。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SDKBase</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">ModifyConfig</span>(<span class="params"><span class="keyword">ref</span> Hashtable config</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SDKA</span> :<span class="title">SDKBase</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">ModifyConfig</span>(<span class="params"><span class="keyword">ref</span> Hashtable config</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="使用Attribute"><a href="#使用Attribute" class="headerlink" title="使用Attribute"></a>使用Attribute</h2><p>另一中解决方式是将这些方法定义在Attribute中。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">CustomSDKAttribute</span> :<span class="title">Attribute</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ModifyConfig</span>(<span class="params"><span class="keyword">ref</span> Hashtable config</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">[<span class="meta">CustomSDK</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SDKA</span> :<span class="title">SDKBase</span></span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"><span class="keyword">foreach</span>(<span class="keyword">var</span> type <span class="keyword">in</span> sdktypes)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(Attribute.IsDefined(type,<span class="keyword">typeof</span>(CustomSDKAttribute)))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">var</span> attrs = type.GetCustomAttributes(<span class="keyword">typeof</span>(CustomSDKAttribute), <span class="literal">true</span>);</span><br><span class="line">                CustomSDKAttribute sdkattr = attrs[<span class="number">0</span>] <span class="keyword">as</span> CustomSDKAttribute;</span><br><span class="line">                sdkattr.ModifyConfig(<span class="keyword">ref</span> config);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>将需要反射的方法放在Attribute的定义中后我们在反射了类获得Attribute之后可以直接调用该方法，不需要再反射方法了。</p><p>对于不同的SDK的类型需要不同的实现，我们可以定义一个Attribute的基类，通过Attribute的子类来实现</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">CustomSDK</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SDKA</span> :<span class="title">SDKBase</span></span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line">[<span class="meta">CustomSDK_Impl</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SDKB</span>:<span class="title">SDKBase</span></span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">CustomSDKAttribute</span> :<span class="title">Attribute</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">ModifyConfig</span>(<span class="params"><span class="keyword">ref</span> Hashtable config</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">CustomSDK_Impl</span> :<span class="title">CustomSDKAttribute</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">ModifyConfig</span>(<span class="params"><span class="keyword">ref</span> Hashtable config</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="comment">//覆盖基类的实现</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Attribute的约束"><a href="#Attribute的约束" class="headerlink" title="Attribute的约束"></a>Attribute的约束</h2><p>我们知道在定义Attribute的时候可以给Attribute添加约束<code>AttributeUsage</code></p><p><code>[AttributeUsage(AttributeTargets.Class,AllowMultiple =false)]</code></p><p>但是只能通过AttributeUsage约束Attribute添加到程序集对象的类型，并不能约束Attribute修饰的对象的继承链等其他特性。也就是不能使用泛型和where关键字。这样就会导致我们给SDK定义的Attribute可以被任意使用其他类型的对象上，这是我们不愿意看到的。</p><p>由于我们是使用反射来查找所有标记为该Attribute的类型，缺少了类型的继承链约束后，无疑会造成一些隐患。但是由于C#语言本身不提供Attribute的类型约束，在google之后通过一个非常trick的方式解决了Attribute的约束问题。</p><p>我们将Attribute的定义声明在需要约束的基类中，并且使用<code>protected</code>修饰符</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SDKBase</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">ModifyConfig</span>(<span class="params"><span class="keyword">ref</span> Hashtable config</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">AttributeUsage(AttributeTargets.Class, AllowMultiple = false)</span>]</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">class</span> <span class="title">CustomSDKAttribute</span> : <span class="title">Attribute</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">ModifyConfig</span>(<span class="params"><span class="keyword">ref</span> Hashtable config</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样CustomSDKAttribute就只能在SDKBase的子类进行访问，下面的代码便会产生编译错误。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">CustomSDK</span>]<span class="comment">//Error:未找到类型</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">TestClassA</span></span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样就我们就相当与声明了<code>where T:SDKBASE</code>，对Attribute的使用进行了约束。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>使用Attribute定义的修饰符将Attribute修饰的对象加上约束。</p><p>对于将需要反射调用的方法存放在Attribute中还有一个好处是。在Unity开发中，如果我们只在Editor层面进行对这些方法的反射和调用，可以将该Attribute限定在编辑器环境，防止这部分代码污染最后编译的版本。</p><p><code>[System.Diagnostics.Conditional(&quot;UNITY_EDITOR&quot;)]</code></p><p>但是如果使用最初的反射方法的方式，这需要给所有的反射方法加上宏的限定，同时不一定可以使用<code>System.Diagnostics.Conditional</code>这个Attribute进行宏的约束。Conditional要求限定的方法必须是void的返回值。讲方法定义在Attribute中直接移除Attribute不受该约束限制</p>]]></content>
      
      
      <categories>
          
          <category> C# </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Unity </tag>
            
            <tag> C# </tag>
            
            <tag> hack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DirectX-Notes</title>
      <link href="/2017/06/04/dirextx-learn-1/"/>
      <url>/2017/06/04/dirextx-learn-1/</url>
      
        <content type="html"><![CDATA[<p>​    图形API对往游戏引擎和渲染方向发展的Programmer来说是非常重要的一部分。大部分的情况下，对于实际的游戏开发来说，游戏引擎handle了大部分图像API的内容。但是如果单纯从游戏引擎hight-level去学习，会有一直停留在表面的学习，而不太了解底层核心的东西。目前流行的图形API有DirectX，OpenGL，Vulkan还有随着移动平台流行起来的OpenGL ES。对于图形API的选择当然是很重要的一部分。DX和OGL的pros cons有很多人在讨论了，初学选择哪个API，这个并不不是很重要。</p><a id="more"></a><p>​    在RasterTek <a href="http://www.rastertek.com/" target="_blank" rel="noopener">http://www.rastertek.com/</a> 上按照教程学习了几章DX11的教程，自己实现了一个小型的DX框架。封装了模型与贴图加载，Shader编译，Shader Reflect。类似于Unity的组件模型来管理场景，基础的光照等。由于不是太熟悉C++，同时也遇到了一些问题。下面总结一些理解和疑问。</p><h3 id="HLSL中的CBuffer使用"><a href="#HLSL中的CBuffer使用" class="headerlink" title="HLSL中的CBuffer使用"></a>HLSL中的CBuffer使用</h3><p>​    HLSL是directx的Shader脚本语言，和Cg的语法很像。VertexShader PixelShader 和一些SV的Semantic都类似。在写了几个不同的Shader之后，一些每个Shader会有一些都需要的参数和变量 如MVP的Matrix 光源信息等等。这些参数的值通过CBuffer传入GPU中进行运算。在MSDN的文档中写到根据参数更新的频率将需要的参数分散在不同的CBuffer中这样可以减少更新的次数。由于渲染管线的状态是不会清除的只会在下一次设置的时候覆盖。对于不更新的参数我们就可以减少调用设置状态的频率，从而提升帧率。那么这些参数要怎么划分就是一个结构设计的问题。</p><p>​    这里我们只考虑光照和Camera的信息。Matrix信息有World Matrix，View Matrix，Projection Matrix，这个World Matrix是模型坐标转世界坐标的矩阵 和物体相关，View Matrix与Projection Matrix只与Camera相关。那么对于一帧的渲染。Camera的Matrix只要设置一次而 每渲染每个物体调用DrawCall的时候都要重新设置WorldMatrix。而通常我们在顶点着色器中使用的是Matrix_MVP 三个矩阵相乘。那么是不是把WorldMatrix 与Camera的两个Matrix分开在两个Const Buffer就可以略微提升性能呢？还是说给Buffer设置值的开销大部分在指令的数量而小量数据的copy性能开销可以基本忽略不计呢？<br>​    还有一个问题就是对于这三个矩阵 我们可能在Shader中可能需要MV,VP MVP复合的矩阵进行特殊的计算，这部分矩阵运算是交给CPU预计算好传入shader中还是纯在GPU中进行计算呢？个人的感觉是应该留在GPU中进行计算 可以通过一些宏来简化调用，类似于Unity中cginc的使用。<br>​    对于光源信息来说可以单独使用一个buffer来进行光源信息的更新，包括LightMatrix LightColor LightRange等等，每一帧的渲染也只需要map一次ConstBuffer。而不是每次DrawCall都需要调用。</p><h3 id="EFFECT11-Shader-Framework"><a href="#EFFECT11-Shader-Framework" class="headerlink" title="EFFECT11 Shader Framework"></a>EFFECT11 Shader Framework</h3><p>​    HLSL可以使用#include “xxx” 来包含其他的hlsl文件。我们可以把一些公用的struct定义在这些文件中类似于Unity的.cginc文件。而如果在运行时编译就需要实现一个ID3DInclude 来处理Include的文件的加载和编译。</p><p>​    DirextX提供了Shader Reflector来获取编译后shader的参数信息和状态，这样我们就可以在运行时动态获取到这些信息来设置shader的参数和生产对应的CBuffer。DX11以前的版本提供了Effect 框架 而DX11中被移出变成扩展库了。Effect框架带有一些特定的语法来使用简化shader的编写和调用及状态设置。比如对于一个特定效果的渲染。我们需要设置ZBuffer的状态为ZWrite关闭，而这需要单独设置DepthStencilBufferState，是不能从shader中直接设置的。而Effect框架就可以在hlsl中定义这些信息然后可以自动设置这些渲染管线的状态。<br>​    类比于Unity中的ShaderLab语法。ShaderLab中的Blend Src Dst，ZWrite，Cull 等都是在shader中设置Pipeline的状态。Shader Lab可以说是也是一个Effect框架，不过它支持多平台可以同时编译成HLSL与GLSL。每个引擎一般都是实现自己的Shader Framework，定义自己的shader语法和一些semantic。毕竟要处理多平台的兼容性，同时要简化shader的编写，提升开发效率。</p><h3 id="Defferred-Context-与Command-List"><a href="#Defferred-Context-与Command-List" class="headerlink" title="Defferred Context 与Command List"></a>Defferred Context 与Command List</h3><p>​    DX11中的Deferred Context可以把绘制的指令和设置pipeline状态的指令记录在Command List中，然后进行回放。这样可以减少CPU的overhead。对于一个在场景中要渲染的物体 如果他的位置坐标参数等都不发生变化，那么他可以使用上一帧的Command List进行渲染，从而减少了这部分状态参数重设的CPU开销。我们可以类比Unity中的CommandBuffer，在Unity中CommandBuffer只是用来扩展RenderPipeline的，底层的原理应该也是使用Command List。</p><h3 id="Material对象"><a href="#Material对象" class="headerlink" title="Material对象"></a>Material对象</h3><p>​    DX11中其实是没有Material的对象的，而引擎中常有材质的概念。Material可以理解为shader加上管线的状态以及传入管线的参数与贴图数据等等。这个概念可以和effect框架中的effect等价。Material通常是引擎自己实现的。</p><p>关于图形API 个人的感觉是API用法等都是简单的，重要的是怎样去架构一整个复杂的3D程序 CPU和GPU协同，最大幅度提升渲染效率。多线程渲染，各类资源的管理 互相作用。GPU指令如何调用能够最优，这些都是设计上的问题需要很多的实际开发经验才能总结出来。所以最好的方式应该是参考一个开源的框架或者是小型的引擎来学习它们是如何架构的。</p>]]></content>
      
      
      <categories>
          
          <category> Graphics </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DirectX </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello Lua</title>
      <link href="/2017/03/26/hello-lua/"/>
      <url>/2017/03/26/hello-lua/</url>
      
        <content type="html"><![CDATA[<p>在游戏开发中，Lua是一种比较热门的轻量级脚本语言。由C实现的Lua可以很好得和C/C++进行交互，同时它可以很方便地和和各种语言结合进行跨平台开发。<br>特别是在当前最流行的游戏Unity中，为了实现C#脚本热更新，Lua几乎是唯一的解决方案，各种基于Lua的库层出不穷。一直在写C#脚本，还是有必要学习Lua。</p><p>###Lua初见</p><p>一开始就直接打开Lua官方的Reference Manual<br><a href="http://www.lua.org/manual/5.3/contents.html" target="_blank" rel="noopener">Lua Reference Manual </a></p><p>接下来下载好Lua的binary版本，开始学习基本的语法<br><a href="http://www.runoob.com/lua/lua-tutorial.html" target="_blank" rel="noopener">Lua 基础教程</a></p><p>总体感觉Lua非常的轻巧<br>基础的数据类型也只有<code>nil boolean number string function userdata thread table</code> (整形和浮点都是number 想起了SQLite)<br>动态类型语言和Javascript一样<br>结尾不需要；和Python一样<br>函数可以是多返回值<br>没有自带的++ +=等运算符，写的时候特别难受…T_T</p><p>但是有metatable可以进行任意的扩展，这个metatable给我的感觉就像是JS中的prototype</p><a id="more"></a><p>###定个小目标</p><p>在熟悉了基本的语法和运算后，准备试试Lua的热更新。之前在github发现了一个GUI库imgui，imgui是一个immediate mode gui库。什么是immediate mode gui呢，就是和通常的事件回调式的GUI框架不同的，所有的UI逻辑是线性的，和Unity中的EditorGUI一样，需要不断的刷新。大概就是下面代码的样子</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">gui.Label(&quot;This is a label&quot;);</span><br><span class="line">if(gui.button(&quot;This is a button&quot;))</span><br><span class="line">&#123;</span><br><span class="line">&#x2F;&#x2F;process button click</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>工作中一直在写一些Unity的插件及编辑器脚本，挺喜欢IMGUI这种快速代码实现UI的模式，但是也是有缺点的，比如UI逻辑太复杂时候，有可能会影响绘制帧率造成卡顿。或者是太复杂的UI结构代码的可读性就大大降低。<br>现在我们有了Lua 那么我们是不是可以用IMGUI绘制一个文本编辑器，然后在里面编写Lua脚本，通过Lua调用  C++的imgui的方法来更新UI呢。<br>这样就像写Unity的Editor扩展一样，但是不需要重新编译整个项目，加载不同的Lua脚本就能实现热更新UI。</p><p>总结起来我们需要做一下几步</p><ul><li>在windows下开发 windows程序，调用imgui C++库</li><li>配置Lua环境 执行Lua脚本</li><li>编写Lua调用imgui的C函数，互调用操作</li><li>在imgui中刷新Lua脚本</li></ul><h3 id="开始实现"><a href="#开始实现" class="headerlink" title="开始实现"></a>开始实现</h3><p><strong>创建工程</strong><br>imgui在github上的repo有demo 我们直接拿来改就行了。选了用opengl进行渲染，而不是dx。毕竟有GLFW GLEW比DX的初始化快多了。</p><p><strong>配置Lua</strong><br>把几个Lua头文件的目录加入Include</p><ul><li>Lua.h lualib.h 定义了Lua的基本方法</li><li>lauxlib.h 里面有一些比较常用的扩展方法</li><li>luaconf.h 用来控制模块的开关</li></ul><p>Lib就只有一个lua53.lib</p><p><strong>Lua和C++的互调用</strong><br>处理Lua与C++的互调用都需要通过Lua C Api来进行</p><p>在Lua5.3中 需要维护一个lua_State 来进行互操作<br>Lua调用C++需要先定义对应的方法，所有方法都必须带有lua_State的参数，因为Lua和C交互是通过维护一个栈来实现的。Lua调用方法时会先把方法和参数一个个push入栈，对应的C方法会pop出参数执行完再把结果压入栈返回给Lua的脚本</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//声明方法</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">luaTestFunc</span><span class="params">(lua_State *state)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//some implement</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化lua_State</span></span><br><span class="line">lua_State * lstate = luaL_newstate();</span><br><span class="line"><span class="comment">//加载lua基础库</span></span><br><span class="line">luaL_oepnlibs(lstate);</span><br><span class="line"><span class="comment">//注册方法</span></span><br><span class="line">lua_register(lstate,<span class="string">"luaTestFunc"</span>,luaTestFunc);</span><br></pre></td></tr></table></figure><p>接下来就可以直接在Lua中调用<code>luaTestFunc()</code></p><p>github上有imgui lua的wrap 我们可以直接用，就不需声明那么多方法了</p><p>C++调用Lua方法<br>使用<code>luaL_loadstring(lua_State*,const char * luacode)</code> 来加载代码<br>加载完成后我们要把需要调用的方法push到栈顶，然后调用<code>lua_call()</code> 就可以执行了。需要注意的是调用了<code>lua_call</code> 之后我们使用<code>lua_getglobal()</code> push到栈顶的方法会被pop出栈。在imgui中每一帧循环都要调用imgui的绘制方法，所以如果要重复调用一个方法就需要在调用前讲其push到栈顶（不知道有没有其他的方法可以实现）。不这样操作可能会报错就会出现如</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">lua</span> <span class="keyword">syntax</span> error:attempt <span class="keyword">to</span> <span class="keyword">call</span> <span class="keyword">a</span> nil value</span><br><span class="line"><span class="keyword">lua</span> <span class="keyword">syntax</span> error:attempt <span class="keyword">to</span> <span class="keyword">call</span> <span class="keyword">a</span> <span class="built_in">string</span> value</span><br><span class="line"><span class="keyword">lua</span> <span class="keyword">syntax</span> error:attempt <span class="keyword">to</span> <span class="keyword">call</span> <span class="keyword">a</span> <span class="built_in">string</span> value</span><br></pre></td></tr></table></figure><p>这样的错误其实是调用lua_call 发现在栈顶的不是函数先报错 nil value，然后lua会把这个error string push到栈顶 所以下次调用call就会返回string value，无限循环下去…</p><p>更多的Lua C++的互调用可以参考<br><a href="https://csl.name/post/lua-and-cpp/" target="_blank" rel="noopener">Lua C++互调用</a></p><p>** 重新加载编写好的Lua脚本 **<br>当我们更新了lua脚本之后需要重新加载，首先调用 <code>lua_close()</code> 回收lua_State，接着就是重新加载lua基本库和imgui的库。这一步加载库是比较耗时间的，不知道有没有其他的方式可以动态卸载掉加载的代码块，再重新加载Lua脚本。</p><p>###总结<br>Lua的栈操作还是不太习惯，总体感觉Lua是一个很简洁易用的脚本语言。模块管理，基本库，metadata等特性还需要再深入接触一下。<br>在调试互调用的时候还是踩了很多坑，需要好好了解下Lua C Api。基于Lua的imgui UI扩展还会继续完善完善。</p>]]></content>
      
      
      <categories>
          
          <category> Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> Lua </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity shader Note</title>
      <link href="/2016/12/11/Unity-shader-Note/"/>
      <url>/2016/12/11/Unity-shader-Note/</url>
      
        <content type="html"><![CDATA[<h3 id="光照基础"><a href="#光照基础" class="headerlink" title="光照基础"></a>光照基础</h3><p>辐照度irradiance</p><p>散射scattering 吸收 absorption<br>散射只改变光的方向 吸收只改变光线的密度和颜色</p><p>光线进入如物体会发生折射refraction和投射transmission 以及被散射到外部的反射reflection<br>区别不同的散射方向 高光反射 specular 漫反射diffuse</p><p>出射度 exitance 辐照度和出射度满足线性关系 比值就是漫反射和高光反射的属性</p><p>BRDF (Bidirectional Reflection Distribution Function)</p><p>标准光照模型 direct light<br>自发光 emissive 高光specular 漫反射diffuse 环境光ambient</p><p>diffuse Lambert’s Law<br><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>c</mi><mrow><mi>d</mi><mi>i</mi><mi>f</mi><mi>f</mi><mi>u</mi><mi>s</mi><mi>e</mi></mrow></msub><mo>=</mo><mo stretchy="false">(</mo><msub><mi>c</mi><mrow><mi>l</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi></mrow></msub><mo>∗</mo><msub><mi>m</mi><mrow><mi>d</mi><mi>i</mi><mi>f</mi><mi>f</mi><mi>u</mi><mi>s</mi><mi>e</mi></mrow></msub><mo stretchy="false">)</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mi>n</mi><mo>∗</mo><mi>l</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">c_{diffuse} = (c_{light} * m_{diffuse})max(0,n*l)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mord mathdefault mtight">u</span><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span><span class="mord mathdefault mtight">h</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mord mathdefault mtight">u</span><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mclose">)</span></span></span></span></span></p><p>光源颜色<em>漫反射材质颜色</em>亮度值<br>Phong光照模型<br><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mrow><mi>s</mi><mi>p</mi><mi>e</mi><mi>c</mi><mi>u</mi><mi>l</mi><mi>a</mi><mi>r</mi></mrow></msub><mo>=</mo><mo stretchy="false">(</mo><msub><mi>c</mi><mrow><mi>l</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi></mrow></msub><mo>∗</mo><msub><mi>m</mi><mrow><mi>s</mi><mi>p</mi><mi>e</mi><mi>c</mi><mi>u</mi><mi>l</mi><mi>a</mi><mi>r</mi></mrow></msub><mo stretchy="false">)</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mi>v</mi><mo>∗</mo><mi>r</mi><msup><mo stretchy="false">)</mo><msub><mi>m</mi><mrow><mi>g</mi><mi>l</mi><mi>o</mi><mi>s</mi><mi>s</mi></mrow></msub></msup></mrow><annotation encoding="application/x-tex">C_{specular} = (c_{light} * m_{specular})max(0,v*r)^{m_{gloss}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight">p</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">u</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span><span class="mord mathdefault mtight">h</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight">p</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">u</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29011428571428566em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p>Blinn-Phong<br><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo>=</mo><mfrac><mrow><mi>v</mi><mo>+</mo><mi>l</mi></mrow><mrow><mi mathvariant="normal">∣</mi><mi>v</mi><mo>+</mo><mi>l</mi><mi mathvariant="normal">∣</mi></mrow></mfrac><msub><mi>C</mi><mrow><mi>s</mi><mi>p</mi><mi>e</mi><mi>c</mi><mi>u</mi><mi>l</mi><mi>a</mi><mi>r</mi></mrow></msub><mo>=</mo><mo stretchy="false">(</mo><msub><mi>c</mi><mrow><mi>l</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi></mrow></msub><mo>∗</mo><msub><mi>m</mi><mrow><mi>s</mi><mi>p</mi><mi>e</mi><mi>c</mi><mi>u</mi><mi>l</mi><mi>a</mi><mi>r</mi></mrow></msub><mo stretchy="false">)</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mi>n</mi><mo>∗</mo><mi>h</mi><msup><mo stretchy="false">)</mo><msub><mi>m</mi><mrow><mi>g</mi><mi>l</mi><mi>o</mi><mi>s</mi><mi>s</mi></mrow></msub></msup></mrow><annotation encoding="application/x-tex">h = \frac{v+l}{|v+l|}<br>C_{specular} = (c_{light} * m_{specular})max(0,n*h)^{m_{gloss}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">h</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.30744em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord">∣</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight">p</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">u</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span><span class="mord mathdefault mtight">h</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight">p</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">u</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">h</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29011428571428566em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br>Phong shading 逐像素光照 Gouraud shading 逐顶点光照<br>各向同性isotropic  各向异性anisotropic</p><a id="more"></a><h3 id="坐标转换"><a href="#坐标转换" class="headerlink" title="坐标转换"></a>坐标转换</h3><p>投影矩阵</p><p>N = near plane<br>F = far plane<br>A = aspect ratio<br>FOV =field of view<br>S = size</p><p><code>UNITY_UV_STARTS_AT_TOP</code> DX平台和OpenGL差别<br><code>_MainTex_TexelSize.y &lt; 0</code> 判定是否开启抗锯齿<br>DX9/11不支持在vertex shader中采样纹理 使用<code>tex2D()</code> 使用 <code>tex2DLOD(texture2d tex,float4 uv)</code>替代</p><table><thead><tr><th>类型</th><th>精度</th></tr></thead><tbody><tr><td>float</td><td>32bit 浮点</td></tr><tr><td>half</td><td>16bit 浮点 -60000 ~ +60000</td></tr><tr><td>fixed</td><td>11bit -2.0~+2.0</td></tr></tbody></table><table><thead><tr><th>指令</th><th>描述</th></tr></thead><tbody><tr><td>#pragma target 2.0</td><td>DX9 SM2.0 不支持对顶点纹理采样，不支持显示LOD纹理采样</td></tr><tr><td>#pragma target 3.0</td><td>DX9 SM3.0支持顶点纹理采样</td></tr><tr><td>#pragma target 4.0</td><td>DX10 SM4,0 支持几何着色器</td></tr><tr><td>#pragma target 5.0</td><td>DX11 SM5.0</td></tr></tbody></table><p>对向量进行转换<br><code>mul(v,(float3x3)_World2Object)</code> == <code>mul(_Object2World,v)</code></p><h3 id="屏幕坐标"><a href="#屏幕坐标" class="headerlink" title="屏幕坐标"></a>屏幕坐标</h3><p>计算屏幕位置<code>ComputeScreenPos(float4 projectionPos)</code></p><p><code>ObjSpaceViewDir(float4 objectpos)</code></p><h4 id="采样Depth-Texture-World"><a href="#采样Depth-Texture-World" class="headerlink" title="采样Depth Texture World"></a>采样Depth Texture World</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">v2f</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">...</span><br><span class="line">    float4 pos ：SV_POSITION;</span><br><span class="line">float3 ray : TEXCOORD1;</span><br><span class="line">  float4 screenUV : TEXCOORD0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">v2f <span class="title">vert</span><span class="params">(appdata v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">v2f o;</span><br><span class="line">  o.pos = mul(UNITY_MATRIX_MVP,float4(v.pos,<span class="number">1</span>));</span><br><span class="line">  o.screenUV = ComputeScreenPos(o.pos);</span><br><span class="line"> o.ray = mul(UNITY_MATRIX_MV,float4(v.pos,<span class="number">1</span>).xyz * float3(<span class="number">-1</span>,<span class="number">-1</span>,<span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">sampler2D_float _CameraDepthTexture;</span><br><span class="line"></span><br><span class="line"><span class="function">fixed4 <span class="title">frag</span><span class="params">(v2f i)</span>: SV_Target</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">float</span> depth = SAMPLE_DEPTH_TEXTURE(_CameraDepthTexture,i.screenUV.xy/i.screenUV.w);</span><br><span class="line">  depth = Linear01Depth(depth); <span class="comment">//sample depth texture</span></span><br><span class="line">i.ray = i.ray *(_ProjectionParams.z / i.ray.z);</span><br><span class="line">float4 vpos = float4(i.ray* depth,<span class="number">1</span>); <span class="comment">//view pos</span></span><br><span class="line">  float3 wpos = mul(unity_CameraToWorld,vpos).xyz; <span class="comment">//world pos</span></span><br><span class="line">  float3 opos = mul(unity_WorldToObject,float4(wpos,<span class="number">1</span>)).xyz;<span class="comment">//object pos </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Unity </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Unity </tag>
            
            <tag> Shader </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity中实现Post Process Volumetric Lighting</title>
      <link href="/2016/12/04/post-process-volumetric-lighting/"/>
      <url>/2016/12/04/post-process-volumetric-lighting/</url>
      
        <content type="html"><![CDATA[<p>一直觉得体积光之类的效果很酷炫，在shadertoy也看到了很多惊艳的ray marching实现。看了一些文章和Paper相关的内容之后决定在Unity中实现一遍，记录下来。文中都是个人的理解，肯定会有一些错误，希望能有所帮助。</p><p><img src="/images/161204_volumetric_light.png" alt="Volumetric LightING"></p><ul><li>自定义Shader中采样Shadow Map</li><li>通过CameraDepthTexture计算世界坐标</li><li>Ray Marching 计算scatter</li></ul><h2 id="自定义shader中采样shadow-Map"><a href="#自定义shader中采样shadow-Map" class="headerlink" title="自定义shader中采样shadow Map"></a>自定义shader中采样shadow Map</h2><h3 id="关于shadowmap"><a href="#关于shadowmap" class="headerlink" title="关于shadowmap"></a>关于shadowmap</h3><p>在unity中，每个开启投射阴影的光源都会计算一张shadowMap。shadowMap可以用于实现screen space shadow。简单的说对于screen space的一个像素我们可以通过这个像素的深度值来获取该像素的世界坐标，要判断这个像素是不是在阴影之中，就是该点朝光源方向（平行光就是光源方向，点光源就是光源位置）是否被其他物体阻挡，然而在shader中发射一条射线进行碰撞检测是不现实的。而shadowmap的实现方式是在光源位置渲染整个场景，记录下深度信息储存在shadowmap中。<br>如果屏幕空间的一个像素P1，其对应世界坐标映射在shadowmap的点P2。如果P1的深度值大于P2的深度值，则P1处于阴影之中。</p><a id="more"></a><p>渲染shadowmap要尽可能把主摄像机视椎体内的对象全部包括在内部，这样所有的像素才能在shadowmap中找到对应的点。如果一个点在屏幕空间中但是其对应的世界坐标不在shadowmap中一般设定其不在阴影中。在光源处渲染场景的视锥要包括所有对象的同时又不能太大。太大在相同大小的shadowmap情况下会导致阴影的精度降低。</p><p>具体的shadowmap渲染有许多不同的实现方式，Cascaded Shadow Maps可以解决一些ShadowMap的精度问题。具体如何选取光源位置的视椎体可以阅读<a href="http://blog.csdn.net/zjull/article/details/11740505" target="_blank" rel="noopener">基于Shadow Map的阴影实现</a>。</p><h3 id="在shader中获取shadowmap"><a href="#在shader中获取shadowmap" class="headerlink" title="在shader中获取shadowmap"></a>在shader中获取shadowmap</h3><p>在shader中可以通过 <code>_CameraDepthTexture</code>直接获取到当前的深度图进行采样，然而untiy没有直接提供这样的对象，通过其他方式获取到shadowmap。<br><a href="https://docs.unity3d.com/Manual/SL-BuiltinMacros.html" target="_blank" rel="noopener">Unity SL-BuiltinMacros</a>中提供了方法来对shadowmap进行采样，但并没有具体的使用方法。</p><table><thead><tr><th><strong>Macro:</strong></th><th><strong>Use:</strong></th></tr></thead><tbody><tr><td>UNITY_DECLARE_SHADOWMAP(tex)</td><td>Declares a shadowmap Texture variable with name “tex”.</td></tr><tr><td>UNITY_SAMPLE_SHADOW(tex,uv)</td><td>Samples shadowmap Texture “tex” at given “uv” coordinate (XY components are Texture location, Z component is depth to compare with). Returns single float value with the shadow term in 0..1 range.</td></tr></tbody></table><p>经过了一番（漫长）搜索之后终于找到了使用的方式，要通过unity提供的command buffer把光源的shadowmap Texture 传递给shader。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> Light m_light;</span><br><span class="line"><span class="keyword">private</span> CommandBuffer m_cbShadowMap;</span><br><span class="line">...</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OnRenderObject</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">if</span> (m_light == <span class="literal">null</span>) m_light = GetComponent&lt;Light&gt;();</span><br><span class="line">        <span class="keyword">if</span> (m_cbShadowMap == <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            m_cbShadowMap = <span class="keyword">new</span> CommandBuffer();</span><br><span class="line">            m_cbShadowMap.name = <span class="string">"ShadowMap"</span>;</span><br><span class="line">            m_cbShadowMap.SetGlobalTexture(<span class="string">"_DirectionalLightShadowMap"</span>, <span class="keyword">new</span> RenderTargetIdentifier(BuiltinRenderTextureType.CurrentActive));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (m_light.GetCommandBuffers(LightEvent.AfterShadowMap).Length == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            m_light.AddCommandBuffer(LightEvent.AfterShadowMap, m_cbShadowMap);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>在LightEvent.AfterShadowMap时把该光源的rendertexure 设置为全局变量 <code>_DirectionalLightShadowMap</code>，这样就能在shader中获取shadowmap了<code>sampler2D _DirectionalLightShadowMap;</code></p><h3 id="采样shadowMap"><a href="#采样shadowMap" class="headerlink" title="采样shadowMap"></a>采样shadowMap</h3><p>待续</p><h2 id="通过CameraDepthTexture计算世界坐标"><a href="#通过CameraDepthTexture计算世界坐标" class="headerlink" title="通过CameraDepthTexture计算世界坐标"></a>通过CameraDepthTexture计算世界坐标</h2><p>待续</p><h2 id="Ray-Marching-计算scatter"><a href="#Ray-Marching-计算scatter" class="headerlink" title="Ray Marching 计算scatter"></a>Ray Marching 计算scatter</h2><p>待续</p>]]></content>
      
      
      <categories>
          
          <category> Unity </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Unity </tag>
            
            <tag> Ray marching </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
